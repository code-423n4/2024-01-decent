{
  "reportUid": "BDfFe7brDem",
  "labels": [
    {
      "name": "QA (Quality Assurance)",
      "color": "1D76DB"
    }
  ],
  "comment": null,
  "footnote": null,
  "findings": [
    {
      "severity": "Medium",
      "title": "Large approvals may not work with some `ERC20` tokens",
      "description": "Not all `IERC20` implementations are totally compliant, and some (e.g `UNI`, `COMP`) may fail if the valued passed is larger than `uint96`. [Source](https://github.com/d-xo/weird-erc20#revert-on-large-approvals--transfers)",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/DecentBridgeAdapter.sol\n\n145:         IERC20(swapParams.tokenIn).approve(utb, swapParams.amountIn);\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/DecentBridgeAdapter.sol#L145-L145"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n207:         IERC20(swapParams.tokenIn).approve(utb, swapParams.amountIn);\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L207-L207"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/UniSwapper.sol\n\n137:         IERC20(swapParams.tokenIn).approve(uniswap_router, swapParams.amountIn);\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/UniSwapper.sol#L137-L137"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/UniSwapper.sol\n\n158:         IERC20(swapParams.tokenIn).approve(uniswap_router, swapParams.amountIn);\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/UniSwapper.sol#L158-L158"
          ]
        }
      ]
    },
    {
      "severity": "Medium",
      "title": "Large transfers may not work with some `ERC20` tokens",
      "description": "Some `IERC20` implementations (e.g `UNI`, `COMP`) may fail if the valued transferred is larger than `uint96`. [Source](https://github.com/d-xo/weird-erc20#revert-on-large-approvals--transfers)",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/UniSwapper.sol\n\n44:         IERC20(token).transfer(user, amount);\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/UniSwapper.sol#L44-L44"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/UniSwapper.sol\n\n55:         IERC20(token).transfer(recipient, amount);\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/UniSwapper.sol#L55-L55"
          ]
        }
      ]
    },
    {
      "severity": "Medium",
      "title": "Use call instead of transfer on payable addresses",
      "description": "In Solidity, when transferring Ether, `.transfer()` and `.send()` are commonly used. However, they have a limitation: they forward only a stipend of 2300 gas, which isn't enough to execute any code in the recipient contract beyond a simple event emission. Thus, if the recipient is a contract, the transfer may fail unexpectedly.\n\nTo overcome this, Solidity introduced the `.call{value: _amount}(\"\")` method, which forwards all available gas and can invoke more complex functionality.It's also safer in that it does not revert on failure but instead returns a boolean value to indicate success or failure. Therefore, it is generally a better choice to use `.call` when transferring Ether to a payable address, with the necessary safety checks implemented to handle potential errors.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentBridgeExecutor.sol\n\n63:             payable(from).transfer(amount);\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentBridgeExecutor.sol#L63-L63"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n276:                 payable(_to).transfer(_amount);\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L276-L276"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n290:         payable(msg.sender).transfer(amount);\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L290-L290"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n318:         payable(msg.sender).transfer(amount);\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L318-L318"
          ]
        }
      ]
    },
    {
      "severity": "Medium",
      "title": "Contracts are vulnerable to fee-on-transfer accounting-related issues",
      "description": "The functions below transfer funds from the caller to the receiver via `transferFrom()`, but do not ensure that the actual number of tokens received is the same as the input amount to the transfer. If the token is a fee-on-transfer token, the balance after the transfer will be smaller than expected, leading to accounting issues. Even if there are checks later, related to a secondary transfer, an attacker may be able to use latent funds (e.g. mistakenly sent by another user) in order to get a free credit. One way to solve this problem is to measure the balance before and after the transfer, and use the difference as the amount, rather than the stated amount.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "\n\n```solidity\n\nFile: src/UTB.sol\n\n83:             IERC20(swapParams.tokenIn).transferFrom(\n84:                 msg.sender,\n85:                 address(this),\n86:                 swapParams.amountIn\n87:             );\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTB.sol#L83-L87"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/UTBExecutor.sol\n\n61:         IERC20(token).transferFrom(msg.sender, address(this), amount);\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTBExecutor.sol#L61-L61"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/DecentBridgeAdapter.sol\n\n109:             IERC20(bridgeToken).transferFrom(\n110:                 msg.sender,\n111:                 address(this),\n112:                 amt2Bridge\n113:             );\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/DecentBridgeAdapter.sol#L109-L113"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/DecentBridgeAdapter.sol\n\n139:         IERC20(swapParams.tokenIn).transferFrom(\n140:             msg.sender,\n141:             address(this),\n142:             swapParams.amountIn\n143:         );\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/DecentBridgeAdapter.sol#L139-L143"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n88:         IERC20(bridgeToken).transferFrom(msg.sender, address(this), amt2Bridge);\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L88-L88"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/UniSwapper.sol\n\n83:             IERC20(swapParams.tokenIn).transferFrom(\n84:                 msg.sender,\n85:                 address(this),\n86:                 swapParams.amountIn\n87:             );\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/UniSwapper.sol#L83-L87"
          ]
        }
      ]
    },
    {
      "severity": "Medium",
      "title": "Privileged functions can create points of failure",
      "description": "Ensure such accounts are protected and consider implementing multi sig to prevent a single point of failure ",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentBridgeExecutor.sol\n\n68:     function execute(\n69:         address from,\n70:         address target,\n71:         bool deliverEth,\n72:         uint256 amount,\n73:         bytes memory callPayload\n74:     ) public onlyOwner {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentBridgeExecutor.sol#L68-L74"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n68:     function registerDcntEth(address _addr) public onlyOwner {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L68-L68"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n73:     function addDestinationBridge(\n74:         uint16 _dstChainId,\n75:         address _routerAddress\n76:     ) public onlyOwner {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L73-L76"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/UTB.sol\n\n28:     function setExecutor(address _executor) public onlyOwner {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTB.sol#L28-L28"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/UTB.sol\n\n36:     function setWrapped(address payable _wrapped) public onlyOwner {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTB.sol#L36-L36"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/UTB.sol\n\n44:     function setFeeCollector(address payable _feeCollector) public onlyOwner {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTB.sol#L44-L44"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/UTB.sol\n\n325:     function registerSwapper(address swapper) public onlyOwner {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTB.sol#L325-L325"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/UTB.sol\n\n334:     function registerBridge(address bridge) public onlyOwner {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTB.sol#L334-L334"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/UTBExecutor.sol\n\n19:     function execute(\n20:         address target,\n21:         address paymentOperator,\n22:         bytes memory payload,\n23:         address token,\n24:         uint amount,\n25:         address payable refund\n26:     ) public payable onlyOwner {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTBExecutor.sol#L19-L26"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/UTBExecutor.sol\n\n41:     function execute(\n42:         address target,\n43:         address paymentOperator,\n44:         bytes memory payload,\n45:         address token,\n46:         uint amount,\n47:         address payable refund,\n48:         uint extraNative\n49:     ) public onlyOwner {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTBExecutor.sol#L41-L49"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/BaseAdapter.sol\n\n19:     function setBridgeExecutor(address _executor) public onlyOwner {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/BaseAdapter.sol#L19-L19"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/DecentBridgeAdapter.sol\n\n26:     function setRouter(address _router) public onlyOwner {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/DecentBridgeAdapter.sol#L26-L26"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/DecentBridgeAdapter.sol\n\n34:     function registerRemoteBridgeAdapter(\n35:         uint256 dstChainId,\n36:         uint16 dstLzId,\n37:         address decentBridgeAdapter\n38:     ) public onlyOwner {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/DecentBridgeAdapter.sol#L34-L38"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/DecentBridgeAdapter.sol\n\n81:     function bridge(\n82:         uint256 amt2Bridge,\n83:         SwapInstructions memory postBridge,\n84:         uint256 dstChainId,\n85:         address target,\n86:         address paymentOperator,\n87:         bytes memory payload,\n88:         bytes calldata additionalArgs,\n89:         address payable refund\n90:     ) public payable onlyUtb returns (bytes memory bridgePayload) {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/DecentBridgeAdapter.sol#L81-L90"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/DecentBridgeAdapter.sol\n\n127:     function receiveFromBridge(\n128:         SwapInstructions memory postBridge,\n129:         address target,\n130:         address paymentOperator,\n131:         bytes memory payload,\n132:         address payable refund\n133:     ) public onlyExecutor {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/DecentBridgeAdapter.sol#L127-L133"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n33:     function setRouter(address _router) public onlyOwner {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L33-L33"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n37:     function setStargateEth(address _sgEth) public onlyOwner {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L37-L37"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n45:     function registerRemoteBridgeAdapter(\n46:         uint256 dstChainId,\n47:         uint16 dstLzId,\n48:         address decentBridgeAdapter\n49:     ) public onlyOwner {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L45-L49"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n69:     function bridge(\n70:         uint256 amt2Bridge,\n71:         SwapInstructions memory postBridge,\n72:         uint256 dstChainId,\n73:         address target,\n74:         address paymentOperator,\n75:         bytes memory payload,\n76:         bytes calldata additionalArgs,\n77:         address payable refund\n78:     ) public payable onlyUtb returns (bytes memory bridgePayload) {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L69-L78"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n183:     function sgReceive(\n184:         uint16, // _srcChainid\n185:         bytes memory, // _srcAddress\n186:         uint256, // _nonce\n187:         address, // _token\n188:         uint256, // amountLD\n189:         bytes memory payload\n190:     ) external override onlyExecutor {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L183-L190"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/UniSwapper.sol\n\n20:     function setRouter(address _router) public onlyOwner {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/UniSwapper.sol#L20-L20"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/UniSwapper.sol\n\n24:     function setWrapped(address payable _wrapped) public onlyOwner {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/UniSwapper.sol#L24-L24"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/UniSwapper.sol\n\n58:     function swap(\n59:         bytes memory swapPayload\n60:     )\n61:         external\n62:         onlyUtb\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/UniSwapper.sol#L58-L62"
          ]
        }
      ]
    },
    {
      "severity": "Medium",
      "title": "Return values of `transfer()`/`transferFrom()` not checked",
      "description": "Not all `IERC20` implementations `revert()` when there's a failure in `transfer()`/`transferFrom()`. The function signature has a `boolean` return value and they indicate errors that way instead. By not checking the return value, operations that should have marked as failed, may potentially go through without actually making a payment",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "\n\n```solidity\n\nFile: src/UTB.sol\n\n83:             IERC20(swapParams.tokenIn).transferFrom(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTB.sol#L83-L83"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/UTBExecutor.sol\n\n61:         IERC20(token).transferFrom(msg.sender, address(this), amount);\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTBExecutor.sol#L61-L61"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/UTBExecutor.sol\n\n80:         IERC20(token).transfer(refund, remainingBalance);\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTBExecutor.sol#L80-L80"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/DecentBridgeAdapter.sol\n\n139:         IERC20(swapParams.tokenIn).transferFrom(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/DecentBridgeAdapter.sol#L139-L139"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/UniSwapper.sol\n\n44:         IERC20(token).transfer(user, amount);\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/UniSwapper.sol#L44-L44"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/UniSwapper.sol\n\n55:         IERC20(token).transfer(recipient, amount);\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/UniSwapper.sol#L55-L55"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/UniSwapper.sol\n\n83:             IERC20(swapParams.tokenIn).transferFrom(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/UniSwapper.sol#L83-L83"
          ]
        }
      ]
    },
    {
      "severity": "Medium",
      "title": "Some tokens may revert when zero value transfers are made",
      "description": "In spite of the fact that EIP-20 [states](https://github.com/ethereum/EIPs/blob/46b9b698815abbfa628cd1097311deee77dd45c5/EIPS/eip-20.md?plain=1#L116) that zero-valued transfers must be accepted, some tokens, such as LEND will revert if this is attempted, which may cause transactions that involve other tokens (such as batch operations) to fully revert. Consider skipping the transfer if the amount is zero, which will also save gas.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/UniSwapper.sol\n\n44:         IERC20(token).transfer(user, amount);\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/UniSwapper.sol#L44-L44"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/UniSwapper.sol\n\n55:         IERC20(token).transfer(recipient, amount);\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/UniSwapper.sol#L55-L55"
          ]
        }
      ]
    },
    {
      "severity": "Medium",
      "title": "Unsafe use of `transfer()`/`transferFrom()` with `IERC20`",
      "description": "Some tokens do not implement the ERC20 standard properly but are still accepted by most code that accepts ERC20 tokens.  For example Tether (USDT)'s `transfer()` and `transferFrom()` functions on L1 do not return booleans as the specification requires, and instead have no return value. When these sorts of tokens are cast to `IERC20`, their [function signatures](https://medium.com/coinmonks/missing-return-value-bug-at-least-130-tokens-affected-d67bf08521ca) do not match and therefore the calls made, revert (see [this](https://gist.github.com/IllIllI000/2b00a32e8f0559e8f386ea4f1800abc5) link for a test case). Use OpenZeppelin's `SafeERC20`'s `safeTransfer()`/`safeTransferFrom()` instead",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "\n\n```solidity\n\nFile: src/UTB.sol\n\n83:             IERC20(swapParams.tokenIn).transferFrom(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTB.sol#L83-L83"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/UTBExecutor.sol\n\n61:         IERC20(token).transferFrom(msg.sender, address(this), amount);\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTBExecutor.sol#L61-L61"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/UTBExecutor.sol\n\n80:         IERC20(token).transfer(refund, remainingBalance);\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTBExecutor.sol#L80-L80"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/DecentBridgeAdapter.sol\n\n139:         IERC20(swapParams.tokenIn).transferFrom(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/DecentBridgeAdapter.sol#L139-L139"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/UniSwapper.sol\n\n44:         IERC20(token).transfer(user, amount);\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/UniSwapper.sol#L44-L44"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/UniSwapper.sol\n\n55:         IERC20(token).transfer(recipient, amount);\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/UniSwapper.sol#L55-L55"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/UniSwapper.sol\n\n83:             IERC20(swapParams.tokenIn).transferFrom(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/UniSwapper.sol#L83-L83"
          ]
        }
      ]
    },
    {
      "severity": "Medium",
      "title": "Return values of `approve()` not checked",
      "description": "Not all IERC20 implementations `revert()` when there's a failure in `approve()`. The function signature has a boolean return value and they indicate errors that way instead. By not checking the return value, operations that should have marked as failed, may potentially go through without actually approving anything",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "\n\n```solidity\n\nFile: src/UTB.sol\n\n90:         IERC20(swapParams.tokenIn).approve(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTB.sol#L90-L90"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/UTB.sol\n\n152:             IERC20(tokenOut).approve(address(executor), amountOut);\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTB.sol#L152-L152"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/UTBExecutor.sol\n\n62:         IERC20(token).approve(paymentOperator, amount);\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTBExecutor.sol#L62-L62"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/DecentBridgeAdapter.sol\n\n145:         IERC20(swapParams.tokenIn).approve(utb, swapParams.amountIn);\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/DecentBridgeAdapter.sol#L145-L145"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n207:         IERC20(swapParams.tokenIn).approve(utb, swapParams.amountIn);\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L207-L207"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/UniSwapper.sol\n\n137:         IERC20(swapParams.tokenIn).approve(uniswap_router, swapParams.amountIn);\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/UniSwapper.sol#L137-L137"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/UniSwapper.sol\n\n158:         IERC20(swapParams.tokenIn).approve(uniswap_router, swapParams.amountIn);\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/UniSwapper.sol#L158-L158"
          ]
        }
      ]
    },
    {
      "severity": "Low",
      "title": "Vulnerable versions of packages are being used",
      "description": "This project's specific package versions are vulnerable to the specific CVEs listed below. Consider switching to more recent versions of these packages that don't have these vulnerabilities",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "\n\n```solidity\n\nFile: package.json\n\n\n<details><summary>Vulnerabilities related to `@openzeppelin/contracts`:</summary>\n\n\n- [CVE-2022-35915](https://github.com/OpenZeppelin/openzeppelin-contracts/security/advisories/GHSA-7grf-83vw-6f5x) :This issue concerns instances of Governor that use the module GovernorVotesQuorumFraction, a mechanism that determines quorum requirements as a percentage of the voting token's total supply. In affected instances, when a proposal is passed to lower the quorum requirement, past proposals may become executable if they had been defeated only due to lack of quorum, and the number of votes it received meets the new quorum requirement.\n\nAnalysis of instances on chain found only one proposal that met this condition, and we are actively monitoring for new occurrences of this particular issue.\n\n\n- [CVE-2021-46320](https://github.com/OpenZeppelin/openzeppelin-contracts/security/advisories/GHSA-9c22-pwxw-p6hx) :Initializer functions that are invoked separate from contract creation (the most prominent example being minimal proxies) may be reentered if they make an untrusted non-view external call.\n\nOnce an initializer has finished running it can never be re-executed. However, an exception put in place to support multiple inheritance made reentrancy possible in the scenario described above, breaking the expectation that there is a single execution.\n\nNote that upgradeable proxies are commonly initialized together with contract creation, where reentrancy is not feasible, so the impact of this issue is believed to be minor.\n\n\n- [CVE-2023-30541](https://github.com/OpenZeppelin/openzeppelin-contracts/security/advisories/GHSA-mx2q-35m2-x2rh) :A function in the implementation contract may be inaccessible if its selector clashes with one of the proxy's own selectors. Specifically, if the clashing function has a different signature with incompatible ABI encoding, the proxy could revert while attempting to decode the arguments from calldata.\nThe probability of an accidental clash is negligible, but one could be caused deliberately.\n</details>\n\n<details><summary>Vulnerabilities related to `@openzeppelin/contracts-upgradeable`:</summary>\n\n\n- [CVE-2022-35915](https://github.com/OpenZeppelin/openzeppelin-contracts/security/advisories/GHSA-7grf-83vw-6f5x) :This issue concerns instances of Governor that use the module GovernorVotesQuorumFraction, a mechanism that determines quorum requirements as a percentage of the voting token's total supply. In affected instances, when a proposal is passed to lower the quorum requirement, past proposals may become executable if they had been defeated only due to lack of quorum, and the number of votes it received meets the new quorum requirement.\n\nAnalysis of instances on chain found only one proposal that met this condition, and we are actively monitoring for new occurrences of this particular issue.\n\n\n- [CVE-2021-46320](https://github.com/OpenZeppelin/openzeppelin-contracts/security/advisories/GHSA-9c22-pwxw-p6hx) :Initializer functions that are invoked separate from contract creation (the most prominent example being minimal proxies) may be reentered if they make an untrusted non-view external call.\n\nOnce an initializer has finished running it can never be re-executed. However, an exception put in place to support multiple inheritance made reentrancy possible in the scenario described above, breaking the expectation that there is a single execution.\n\nNote that upgradeable proxies are commonly initialized together with contract creation, where reentrancy is not feasible, so the impact of this issue is believed to be minor.\n\n\n- [CVE-2023-30541](https://github.com/OpenZeppelin/openzeppelin-contracts/security/advisories/GHSA-mx2q-35m2-x2rh) :A function in the implementation contract may be inaccessible if its selector clashes with one of the proxy's own selectors. Specifically, if the clashing function has a different signature with incompatible ABI encoding, the proxy could revert while attempting to decode the arguments from calldata.\nThe probability of an accidental clash is negligible, but one could be caused deliberately.\n</details>1: \n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//package.json#L1-L1"
          ]
        }
      ]
    },
    {
      "severity": "Low",
      "title": "Missing checks for `address(0)` when assigning values to address state variables",
      "description": " ",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/BaseAdapter.sol\n\n20:         bridgeExecutor = _executor;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/BaseAdapter.sol#L20-L20"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/DecentBridgeAdapter.sol\n\n23:         bridgeToken = _bridgeToken;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/DecentBridgeAdapter.sol#L23-L23"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n38:         stargateEth = _sgEth;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L38-L38"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/UniSwapper.sol\n\n21:         uniswap_router = _router;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/UniSwapper.sol#L21-L21"
          ]
        }
      ]
    },
    {
      "severity": "Low",
      "title": "`approve` can revert if the current approval is not zero",
      "description": "Some tokens like USDT check for the current approval, and they revert if it's not zero. While Tether is known to do this, it applies to other tokens as well, which are trying to protect against [this](https://docs.google.com/document/d/1YLPtQxZu1UAvO9cZ1O2RPXBbT0mooh4DYKjA_jp-RLM/edit) attack vector.\nConsider always calling `token.safeApprove(addr, 0)` before changing the approval, or better yet, use `safeIncreaseAllowance`/`safeDecreaseAllowance`.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "\n\n```solidity\n\nFile: src/UTB.sol\n\n90:         IERC20(swapParams.tokenIn).approve(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTB.sol#L90-L90"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/UTB.sol\n\n152:             IERC20(tokenOut).approve(address(executor), amountOut);\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTB.sol#L152-L152"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/UTBExecutor.sol\n\n62:         IERC20(token).approve(paymentOperator, amount);\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTBExecutor.sol#L62-L62"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/DecentBridgeAdapter.sol\n\n145:         IERC20(swapParams.tokenIn).approve(utb, swapParams.amountIn);\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/DecentBridgeAdapter.sol#L145-L145"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n207:         IERC20(swapParams.tokenIn).approve(utb, swapParams.amountIn);\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L207-L207"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/UniSwapper.sol\n\n137:         IERC20(swapParams.tokenIn).approve(uniswap_router, swapParams.amountIn);\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/UniSwapper.sol#L137-L137"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/UniSwapper.sol\n\n158:         IERC20(swapParams.tokenIn).approve(uniswap_router, swapParams.amountIn);\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/UniSwapper.sol#L158-L158"
          ]
        }
      ]
    },
    {
      "severity": "Low",
      "title": "Missing checks in constructor",
      "description": "There are some missing checks in these functions, and this could lead to unexpected scenarios. Consider always adding a sanity check for state variables.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentBridgeExecutor.sol\n\n//@audit gasIsEth,  are not checked\n12:     constructor(address _weth, bool gasIsEth) Owned(msg.sender) {\n13:         weth = IWETH(payable(_weth));\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentBridgeExecutor.sol#L12-L13"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n//@audit gasIsEth,  are not checked\n27:     constructor(\n28:         address payable _wethAddress,\n29:         bool gasIsEth,\n30:         address _executor\n31:     ) Owned(msg.sender) {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L27-L31"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/DecentBridgeAdapter.sol\n\n//@audit _gasIsEth,  are not checked\n21:     constructor(bool _gasIsEth, address _bridgeToken) BaseAdapter() {\n22:         gasIsEth = _gasIsEth;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/DecentBridgeAdapter.sol#L21-L22"
          ]
        }
      ]
    },
    {
      "severity": "Low",
      "title": "increase/decrease or forceApprove allowance should be used instead of approve",
      "description": "In order to prevent front running, increase/decrease or forceApprove allowance should be used in place of approve where possible ",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentBridgeExecutor.sol\n\n31:         weth.approve(target, amount);\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentBridgeExecutor.sol#L31-L31"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n279:             weth.approve(address(executor), _amount);\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L279-L279"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/UTB.sol\n\n90:         IERC20(swapParams.tokenIn).approve(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTB.sol#L90-L90"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/UTB.sol\n\n152:             IERC20(tokenOut).approve(address(executor), amountOut);\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTB.sol#L152-L152"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/UTB.sol\n\n216:             IERC20(bridgeToken).approve(address(bridgeAdapter), amt2Bridge);\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTB.sol#L216-L216"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/UTB.sol\n\n241:                 IERC20(fees.feeToken).approve(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTB.sol#L241-L241"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/UTBExecutor.sol\n\n62:         IERC20(token).approve(paymentOperator, amount);\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTBExecutor.sol#L62-L62"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/DecentBridgeAdapter.sol\n\n114:             IERC20(bridgeToken).approve(address(router), amt2Bridge);\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/DecentBridgeAdapter.sol#L114-L114"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/DecentBridgeAdapter.sol\n\n145:         IERC20(swapParams.tokenIn).approve(utb, swapParams.amountIn);\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/DecentBridgeAdapter.sol#L145-L145"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n89:         IERC20(bridgeToken).approve(address(router), amt2Bridge);\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L89-L89"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n207:         IERC20(swapParams.tokenIn).approve(utb, swapParams.amountIn);\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L207-L207"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/UniSwapper.sol\n\n137:         IERC20(swapParams.tokenIn).approve(uniswap_router, swapParams.amountIn);\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/UniSwapper.sol#L137-L137"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/UniSwapper.sol\n\n158:         IERC20(swapParams.tokenIn).approve(uniswap_router, swapParams.amountIn);\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/UniSwapper.sol#L158-L158"
          ]
        }
      ]
    },
    {
      "severity": "Low",
      "title": "Governance operations should be behind a timelock",
      "description": "All critical and governance operations should be protected by a timelock. For example from the point of view of a user, the changing of the owner of a contract is a high risk operation that may have outcomes ranging from an attacker gaining control over the protocol, to the function no longer functioning due to a typo in the destination address. To give users plenty of warning so that they can validate any ownership changes, changes of ownership should be behind a timelock.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n68:     function registerDcntEth(address _addr) public onlyOwner {\n69:         dcntEth = IDcntEth(_addr);\n70:     }\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L68-L70"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n73:     function addDestinationBridge(\n74:         uint16 _dstChainId,\n75:         address _routerAddress\n76:     ) public onlyOwner {\n77:         destinationBridges[_dstChainId] = _routerAddress;\n78:     }\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L73-L78"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n285:     function redeemEth(\n286:         uint256 amount\n287:     ) public onlyIfWeHaveEnoughReserves(amount) {\n288:         dcntEth.transferFrom(msg.sender, address(this), amount);\n289:         weth.withdraw(amount);\n290:         payable(msg.sender).transfer(amount);\n291:     }\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L285-L291"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n294:     function redeemWeth(\n295:         uint256 amount\n296:     ) public onlyIfWeHaveEnoughReserves(amount) {\n297:         dcntEth.transferFrom(msg.sender, address(this), amount);\n298:         weth.transfer(msg.sender, amount);\n299:     }\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L294-L299"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n302:     function addLiquidityEth()\n303:         public\n304:         payable\n305:         onlyEthChain\n306:         userDepositing(msg.value)\n307:     {\n308:         weth.deposit{value: msg.value}();\n309:         dcntEth.mint(address(this), msg.value);\n310:     }\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L302-L310"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n313:     function removeLiquidityEth(\n314:         uint256 amount\n315:     ) public onlyEthChain userIsWithdrawing(amount) {\n316:         dcntEth.burn(address(this), amount);\n317:         weth.withdraw(amount);\n318:         payable(msg.sender).transfer(amount);\n319:     }\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L313-L319"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/UTB.sol\n\n28:     function setExecutor(address _executor) public onlyOwner {\n29:         executor = IUTBExecutor(_executor);\n30:     }\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTB.sol#L28-L30"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/UTB.sol\n\n36:     function setWrapped(address payable _wrapped) public onlyOwner {\n37:         wrapped = IWETH(_wrapped);\n38:     }\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTB.sol#L36-L38"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/UTB.sol\n\n44:     function setFeeCollector(address payable _feeCollector) public onlyOwner {\n45:         feeCollector = IUTBFeeCollector(_feeCollector);\n46:     }\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTB.sol#L44-L46"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/UTB.sol\n\n325:     function registerSwapper(address swapper) public onlyOwner {\n326:         ISwapper s = ISwapper(swapper);\n327:         swappers[s.getId()] = swapper;\n328:     }\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTB.sol#L325-L328"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/UTB.sol\n\n334:     function registerBridge(address bridge) public onlyOwner {\n335:         IBridgeAdapter b = IBridgeAdapter(bridge);\n336:         bridgeAdapters[b.getId()] = bridge;\n337:     }\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTB.sol#L334-L337"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/UTBExecutor.sol\n\n19:     function execute(\n20:         address target,\n21:         address paymentOperator,\n22:         bytes memory payload,\n23:         address token,\n24:         uint amount,\n25:         address payable refund\n26:     ) public payable onlyOwner {\n27:         return\n28:             execute(target, paymentOperator, payload, token, amount, refund, 0);\n29:     }\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTBExecutor.sol#L19-L29"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/UTBExecutor.sol\n\n41:     function execute(\n42:         address target,\n43:         address paymentOperator,\n44:         bytes memory payload,\n45:         address token,\n46:         uint amount,\n47:         address payable refund,\n48:         uint extraNative\n49:     ) public onlyOwner {\n50:         bool success;\n51:         if (token == address(0)) {\n52:             (success, ) = target.call{value: amount}(payload);\n53:             if (!success) {\n54:                 (refund.call{value: amount}(\"\"));\n55:             }\n56:             return;\n57:         }\n58: \n59:         uint initBalance = IERC20(token).balanceOf(address(this));\n60: \n61:         IERC20(token).transferFrom(msg.sender, address(this), amount);\n62:         IERC20(token).approve(paymentOperator, amount);\n63: \n64:         if (extraNative > 0) {\n65:             (success, ) = target.call{value: extraNative}(payload);\n66:             if (!success) {\n67:                 (refund.call{value: extraNative}(\"\"));\n68:             }\n69:         } else {\n70:             (success, ) = target.call(payload);\n71:         }\n72: \n73:         uint remainingBalance = IERC20(token).balanceOf(address(this)) -\n74:             initBalance;\n75: \n76:         if (remainingBalance == 0) {\n77:             return;\n78:         }\n79: \n80:         IERC20(token).transfer(refund, remainingBalance);\n81:     }\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTBExecutor.sol#L41-L81"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/BaseAdapter.sol\n\n19:     function setBridgeExecutor(address _executor) public onlyOwner {\n20:         bridgeExecutor = _executor;\n21:     }\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/BaseAdapter.sol#L19-L21"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/DecentBridgeAdapter.sol\n\n26:     function setRouter(address _router) public onlyOwner {\n27:         router = IDecentEthRouter(payable(_router));\n28:     }\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/DecentBridgeAdapter.sol#L26-L28"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/DecentBridgeAdapter.sol\n\n34:     function registerRemoteBridgeAdapter(\n35:         uint256 dstChainId,\n36:         uint16 dstLzId,\n37:         address decentBridgeAdapter\n38:     ) public onlyOwner {\n39:         lzIdLookup[dstChainId] = dstLzId;\n40:         chainIdLookup[dstLzId] = dstChainId;\n41:         destinationBridgeAdapter[dstChainId] = decentBridgeAdapter;\n42:     }\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/DecentBridgeAdapter.sol#L34-L42"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/DecentBridgeAdapter.sol\n\n081:     function bridge(\n082:         uint256 amt2Bridge,\n083:         SwapInstructions memory postBridge,\n084:         uint256 dstChainId,\n085:         address target,\n086:         address paymentOperator,\n087:         bytes memory payload,\n088:         bytes calldata additionalArgs,\n089:         address payable refund\n090:     ) public payable onlyUtb returns (bytes memory bridgePayload) {\n091:         require(\n092:             destinationBridgeAdapter[dstChainId] != address(0),\n093:             string.concat(\"dst chain address not set \")\n094:         );\n095: \n096:         uint64 dstGas = abi.decode(additionalArgs, (uint64));\n097: \n098:         bridgePayload = abi.encodeCall(\n099:             this.receiveFromBridge,\n100:             (postBridge, target, paymentOperator, payload, refund)\n101:         );\n102: \n103:         SwapParams memory swapParams = abi.decode(\n104:             postBridge.swapPayload,\n105:             (SwapParams)\n106:         );\n107: \n108:         if (!gasIsEth) {\n109:             IERC20(bridgeToken).transferFrom(\n110:                 msg.sender,\n111:                 address(this),\n112:                 amt2Bridge\n113:             );\n114:             IERC20(bridgeToken).approve(address(router), amt2Bridge);\n115:         }\n116: \n117:         router.bridgeWithPayload{value: msg.value}(\n118:             lzIdLookup[dstChainId],\n119:             destinationBridgeAdapter[dstChainId],\n120:             swapParams.amountIn,\n121:             false,\n122:             dstGas,\n123:             bridgePayload\n124:         );\n125:     }\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/DecentBridgeAdapter.sol#L81-L125"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/DecentBridgeAdapter.sol\n\n127:     function receiveFromBridge(\n128:         SwapInstructions memory postBridge,\n129:         address target,\n130:         address paymentOperator,\n131:         bytes memory payload,\n132:         address payable refund\n133:     ) public onlyExecutor {\n134:         SwapParams memory swapParams = abi.decode(\n135:             postBridge.swapPayload,\n136:             (SwapParams)\n137:         );\n138: \n139:         IERC20(swapParams.tokenIn).transferFrom(\n140:             msg.sender,\n141:             address(this),\n142:             swapParams.amountIn\n143:         );\n144: \n145:         IERC20(swapParams.tokenIn).approve(utb, swapParams.amountIn);\n146: \n147:         IUTB(utb).receiveFromBridge(\n148:             postBridge,\n149:             target,\n150:             paymentOperator,\n151:             payload,\n152:             refund\n153:         );\n154:     }\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/DecentBridgeAdapter.sol#L127-L154"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n33:     function setRouter(address _router) public onlyOwner {\n34:         router = IStargateRouter(_router);\n35:     }\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L33-L35"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n37:     function setStargateEth(address _sgEth) public onlyOwner {\n38:         stargateEth = _sgEth;\n39:     }\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L37-L39"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n45:     function registerRemoteBridgeAdapter(\n46:         uint256 dstChainId,\n47:         uint16 dstLzId,\n48:         address decentBridgeAdapter\n49:     ) public onlyOwner {\n50:         lzIdLookup[dstChainId] = dstLzId;\n51:         chainIdLookup[dstLzId] = dstChainId;\n52:         destinationBridgeAdapter[dstChainId] = decentBridgeAdapter;\n53:     }\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L45-L53"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n69:     function bridge(\n70:         uint256 amt2Bridge,\n71:         SwapInstructions memory postBridge,\n72:         uint256 dstChainId,\n73:         address target,\n74:         address paymentOperator,\n75:         bytes memory payload,\n76:         bytes calldata additionalArgs,\n77:         address payable refund\n78:     ) public payable onlyUtb returns (bytes memory bridgePayload) {\n79:         address bridgeToken = abi.decode(additionalArgs, (address));\n80: \n81:         bridgePayload = abi.encode(\n82:             postBridge,\n83:             target,\n84:             paymentOperator,\n85:             payload,\n86:             refund\n87:         );\n88:         IERC20(bridgeToken).transferFrom(msg.sender, address(this), amt2Bridge);\n89:         IERC20(bridgeToken).approve(address(router), amt2Bridge);\n90: \n91:         callBridge(\n92:             amt2Bridge,\n93:             dstChainId,\n94:             bridgePayload,\n95:             additionalArgs,\n96:             refund\n97:         );\n98:     }\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L69-L98"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n183:     function sgReceive(\n184:         uint16, // _srcChainid\n185:         bytes memory, // _srcAddress\n186:         uint256, // _nonce\n187:         address, // _token\n188:         uint256, // amountLD\n189:         bytes memory payload\n190:     ) external override onlyExecutor {\n191:         (\n192:             SwapInstructions memory postBridge,\n193:             address target,\n194:             address paymentOperator,\n195:             bytes memory utbPayload,\n196:             address payable refund\n197:         ) = abi.decode(\n198:                 payload,\n199:                 (SwapInstructions, address, address, bytes, address)\n200:             );\n201: \n202:         SwapParams memory swapParams = abi.decode(\n203:             postBridge.swapPayload,\n204:             (SwapParams)\n205:         );\n206: \n207:         IERC20(swapParams.tokenIn).approve(utb, swapParams.amountIn);\n208: \n209:         IUTB(utb).receiveFromBridge(\n210:             postBridge,\n211:             target,\n212:             paymentOperator,\n213:             utbPayload,\n214:             refund\n215:         );\n216:     }\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L183-L216"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/UniSwapper.sol\n\n20:     function setRouter(address _router) public onlyOwner {\n21:         uniswap_router = _router;\n22:     }\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/UniSwapper.sol#L20-L22"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/UniSwapper.sol\n\n24:     function setWrapped(address payable _wrapped) public onlyOwner {\n25:         wrapped = _wrapped;\n26:     }\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/UniSwapper.sol#L24-L26"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/UniSwapper.sol\n\n58:     function swap(\n59:         bytes memory swapPayload\n60:     )\n61:         external\n62:         onlyUtb\n63:         returns (address tokenOut, uint256 amountOut)\n64:     {\n65:         (SwapParams memory swapParams, address receiver, address refund) = abi\n66:             .decode(swapPayload, (SwapParams, address, address));\n67:         tokenOut = swapParams.tokenOut;\n68:         if (swapParams.path.length == 0) {\n69:             return swapNoPath(swapParams, receiver, refund);\n70:         }\n71:         if (swapParams.direction == SwapDirection.EXACT_IN) {\n72:             amountOut = swapExactIn(swapParams, receiver);\n73:         } else {\n74:             swapExactOut(swapParams, receiver, refund);\n75:             amountOut = swapParams.amountOut;\n76:         }\n77:     }\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/UniSwapper.sol#L58-L77"
          ]
        }
      ]
    },
    {
      "severity": "Low",
      "title": "Setters should have initial value check",
      "description": "Setters should have initial value check to prevent assigning wrong value to the variable. Assginment of wrong value can lead to unexpected behavior of the contract.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "\n\n```solidity\n\nFile: src/UTB.sol\n\n28:     function setExecutor(address _executor) public onlyOwner {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTB.sol#L28-L28"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/UTB.sol\n\n36:     function setWrapped(address payable _wrapped) public onlyOwner {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTB.sol#L36-L36"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/UTB.sol\n\n44:     function setFeeCollector(address payable _feeCollector) public onlyOwner {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTB.sol#L44-L44"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/BaseAdapter.sol\n\n19:     function setBridgeExecutor(address _executor) public onlyOwner {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/BaseAdapter.sol#L19-L19"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/DecentBridgeAdapter.sol\n\n26:     function setRouter(address _router) public onlyOwner {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/DecentBridgeAdapter.sol#L26-L26"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n33:     function setRouter(address _router) public onlyOwner {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L33-L33"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n37:     function setStargateEth(address _sgEth) public onlyOwner {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L37-L37"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/UniSwapper.sol\n\n20:     function setRouter(address _router) public onlyOwner {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/UniSwapper.sol#L20-L20"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/UniSwapper.sol\n\n24:     function setWrapped(address payable _wrapped) public onlyOwner {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/UniSwapper.sol#L24-L24"
          ]
        }
      ]
    },
    {
      "severity": "Low",
      "title": "Unsafe ERC20 operation `approve()`",
      "description": "Approve call do not handle non-standard erc20 behavior.\n- Some token contracts do not return any value.\n- Some token contracts revert the transaction when the allowance is not zero.\nUse `safeApprove` instead of `approve`",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentBridgeExecutor.sol\n\n31:         weth.approve(target, amount);\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentBridgeExecutor.sol#L31-L31"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n279:             weth.approve(address(executor), _amount);\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L279-L279"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/UTB.sol\n\n90:         IERC20(swapParams.tokenIn).approve(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTB.sol#L90-L90"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/UTB.sol\n\n152:             IERC20(tokenOut).approve(address(executor), amountOut);\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTB.sol#L152-L152"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/UTB.sol\n\n216:             IERC20(bridgeToken).approve(address(bridgeAdapter), amt2Bridge);\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTB.sol#L216-L216"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/UTB.sol\n\n241:                 IERC20(fees.feeToken).approve(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTB.sol#L241-L241"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/UTBExecutor.sol\n\n62:         IERC20(token).approve(paymentOperator, amount);\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTBExecutor.sol#L62-L62"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/DecentBridgeAdapter.sol\n\n114:             IERC20(bridgeToken).approve(address(router), amt2Bridge);\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/DecentBridgeAdapter.sol#L114-L114"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/DecentBridgeAdapter.sol\n\n145:         IERC20(swapParams.tokenIn).approve(utb, swapParams.amountIn);\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/DecentBridgeAdapter.sol#L145-L145"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n89:         IERC20(bridgeToken).approve(address(router), amt2Bridge);\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L89-L89"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n207:         IERC20(swapParams.tokenIn).approve(utb, swapParams.amountIn);\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L207-L207"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/UniSwapper.sol\n\n137:         IERC20(swapParams.tokenIn).approve(uniswap_router, swapParams.amountIn);\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/UniSwapper.sol#L137-L137"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/UniSwapper.sol\n\n158:         IERC20(swapParams.tokenIn).approve(uniswap_router, swapParams.amountIn);\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/UniSwapper.sol#L158-L158"
          ]
        }
      ]
    },
    {
      "severity": "Low",
      "title": "Unused/empty `receive()`/`fallback()` function",
      "description": "If the intention is for the Ether to be used, the function should call another function or emit an event, otherwise it should revert.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentBridgeExecutor.sol\n\n85:     receive() external payable {}\n86: \n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentBridgeExecutor.sol#L85-L86"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentBridgeExecutor.sol\n\n88:     fallback() external payable {}\n89: }\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentBridgeExecutor.sol#L88-L89"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n337:     receive() external payable {}\n338: \n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L337-L338"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n339:     fallback() external payable {}\n340: }\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L339-L340"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/UTB.sol\n\n339:     receive() external payable {}\n340: \n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTB.sol#L339-L340"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/UTB.sol\n\n341:     fallback() external payable {}\n342: }\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTB.sol#L341-L342"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/DecentBridgeAdapter.sol\n\n156:     receive() external payable {}\n157: \n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/DecentBridgeAdapter.sol#L156-L157"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/DecentBridgeAdapter.sol\n\n158:     fallback() external payable {}\n159: }\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/DecentBridgeAdapter.sol#L158-L159"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n218:     receive() external payable {}\n219: \n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L218-L219"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n220:     fallback() external payable {}\n221: }\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L220-L221"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/UniSwapper.sol\n\n171:     receive() external payable {}\n172: \n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/UniSwapper.sol#L171-L172"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/UniSwapper.sol\n\n173:     fallback() external payable {}\n174: }\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/UniSwapper.sol#L173-L174"
          ]
        }
      ]
    },
    {
      "severity": "Low",
      "title": "Consider implementing two-step procedure for updating protocol addresses",
      "description": "A copy-paste error or a typo may end up bricking protocol functionality, or sending tokens to an address with no known private key. Consider implementing a two-step procedure for updating protocol addresses, where the recipient is set as pending, and must 'accept' the assignment by making an affirmative call. A straight forward way of doing this would be to have the target contracts implement [EIP-165](https://eips.ethereum.org/EIPS/eip-165), and to have the 'set' functions ensure that the recipient is of the right interface type.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/BaseAdapter.sol\n\n19:     function setBridgeExecutor(address _executor) public onlyOwner {\n20:         bridgeExecutor = _executor;\n21:     }\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/BaseAdapter.sol#L19-L21"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n37:     function setStargateEth(address _sgEth) public onlyOwner {\n38:         stargateEth = _sgEth;\n39:     }\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L37-L39"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/UniSwapper.sol\n\n20:     function setRouter(address _router) public onlyOwner {\n21:         uniswap_router = _router;\n22:     }\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/UniSwapper.sol#L20-L22"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/UniSwapper.sol\n\n24:     function setWrapped(address payable _wrapped) public onlyOwner {\n25:         wrapped = _wrapped;\n26:     }\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/UniSwapper.sol#L24-L26"
          ]
        }
      ]
    },
    {
      "severity": "Low",
      "title": "Functions calling contracts/addresses with transfer hooks are missing reentrancy guards",
      "description": "Even if the function follows the best practice of check-effects-interaction, not using a reentrancy guard when there may be transfer hooks will open the users of this protocol up to [read-only reentrancies](https://chainsecurity.com/curve-lp-oracle-manipulation-post-mortem/) with no way to protect against it, except by block-listing the whole protocol.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentBridgeExecutor.sol\n\n//@audit function `_executeWeth()` is not protected against reentrancy\n44:         weth.transfer(from, remainingAfterCall);\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentBridgeExecutor.sol#L44-L44"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n//@audit function `_bridgeWithPayload()` is not protected against reentrancy\n181:             weth.transferFrom(msg.sender, address(this), _amount);\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L181-L181"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n//@audit function `addLiquidityWeth()` is not protected against reentrancy\n325:         weth.transferFrom(msg.sender, address(this), amount);\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L325-L325"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n//@audit function `removeLiquidityWeth()` is not protected against reentrancy\n334:         weth.transfer(msg.sender, amount);\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L334-L334"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/UTB.sol\n\n//@audit function `performSwap()` is not protected against reentrancy\n83:             IERC20(swapParams.tokenIn).transferFrom(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTB.sol#L83-L83"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/UniSwapper.sol\n\n//@audit function `_refundUser()` is not protected against reentrancy\n44:         IERC20(token).transfer(user, amount);\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/UniSwapper.sol#L44-L44"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/UniSwapper.sol\n\n//@audit function `_sendToRecipient()` is not protected against reentrancy\n55:         IERC20(token).transfer(recipient, amount);\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/UniSwapper.sol#L55-L55"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/UniSwapper.sol\n\n//@audit function `_receiveAndWrapIfNeeded()` is not protected against reentrancy\n83:             IERC20(swapParams.tokenIn).transferFrom(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/UniSwapper.sol#L83-L83"
          ]
        }
      ]
    },
    {
      "severity": "Low",
      "title": "Some function should not be marked as payable",
      "description": "Some function should not be marked as payable, otherwise the ETH that mistakenly sent along with the function call is locked in the contract",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentBridgeExecutor.sol\n\n85:     receive() external payable {}\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentBridgeExecutor.sol#L85-L85"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentBridgeExecutor.sol\n\n88:     fallback() external payable {}\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentBridgeExecutor.sol#L88-L88"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n197:     function bridgeWithPayload(\n198:         uint16 _dstChainId,\n199:         address _toAddress,\n200:         uint _amount,\n201:         bool deliverEth,\n202:         uint64 _dstGasForCall,\n203:         bytes memory additionalPayload\n204:     ) public payable {\n205:         return\n206:             _bridgeWithPayload(\n207:                 MT_ETH_TRANSFER_WITH_PAYLOAD,\n208:                 _dstChainId,\n209:                 _toAddress,\n210:                 _amount,\n211:                 _dstGasForCall,\n212:                 additionalPayload,\n213:                 deliverEth\n214:             );\n215:     }\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L197-L215"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n218:     function bridge(\n219:         uint16 _dstChainId,\n220:         address _toAddress,\n221:         uint _amount,\n222:         uint64 _dstGasForCall,\n223:         bool deliverEth // if false, delivers WETH\n224:     ) public payable {\n225:         _bridgeWithPayload(\n226:             MT_ETH_TRANSFER,\n227:             _dstChainId,\n228:             _toAddress,\n229:             _amount,\n230:             _dstGasForCall,\n231:             bytes(\"\"),\n232:             deliverEth\n233:         );\n234:     }\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L218-L234"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n322:     function addLiquidityWeth(\n323:         uint256 amount\n324:     ) public payable userDepositing(amount) {\n325:         weth.transferFrom(msg.sender, address(this), amount);\n326:         dcntEth.mint(address(this), amount);\n327:     }\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L322-L327"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n337:     receive() external payable {}\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L337-L337"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n339:     fallback() external payable {}\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L339-L339"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/UTB.sol\n\n108:     function swapAndExecute(\n109:         SwapAndExecuteInstructions calldata instructions,\n110:         FeeStructure calldata fees,\n111:         bytes calldata signature\n112:     )\n113:         public\n114:         payable\n115:         retrieveAndCollectFees(fees, abi.encode(instructions, fees), signature)\n116:     {\n117:         _swapAndExecute(\n118:             instructions.swapInstructions,\n119:             instructions.target,\n120:             instructions.paymentOperator,\n121:             instructions.payload,\n122:             instructions.refund\n123:         );\n124:     }\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTB.sol#L108-L124"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/UTB.sol\n\n259:     function bridgeAndExecute(\n260:         BridgeInstructions calldata instructions,\n261:         FeeStructure calldata fees,\n262:         bytes calldata signature\n263:     )\n264:         public\n265:         payable\n266:         retrieveAndCollectFees(fees, abi.encode(instructions, fees), signature)\n267:         returns (bytes memory)\n268:     {\n269:         (\n270:             uint256 amt2Bridge,\n271:             BridgeInstructions memory updatedInstructions\n272:         ) = swapAndModifyPostBridge(instructions);\n273:         return callBridge(amt2Bridge, fees.bridgeFee, updatedInstructions);\n274:     }\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTB.sol#L259-L274"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/UTB.sol\n\n339:     receive() external payable {}\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTB.sol#L339-L339"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/UTB.sol\n\n341:     fallback() external payable {}\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTB.sol#L341-L341"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/UTBExecutor.sol\n\n19:     function execute(\n20:         address target,\n21:         address paymentOperator,\n22:         bytes memory payload,\n23:         address token,\n24:         uint amount,\n25:         address payable refund\n26:     ) public payable onlyOwner {\n27:         return\n28:             execute(target, paymentOperator, payload, token, amount, refund, 0);\n29:     }\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTBExecutor.sol#L19-L29"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/DecentBridgeAdapter.sol\n\n156:     receive() external payable {}\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/DecentBridgeAdapter.sol#L156-L156"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/DecentBridgeAdapter.sol\n\n158:     fallback() external payable {}\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/DecentBridgeAdapter.sol#L158-L158"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n69:     function bridge(\n70:         uint256 amt2Bridge,\n71:         SwapInstructions memory postBridge,\n72:         uint256 dstChainId,\n73:         address target,\n74:         address paymentOperator,\n75:         bytes memory payload,\n76:         bytes calldata additionalArgs,\n77:         address payable refund\n78:     ) public payable onlyUtb returns (bytes memory bridgePayload) {\n79:         address bridgeToken = abi.decode(additionalArgs, (address));\n80: \n81:         bridgePayload = abi.encode(\n82:             postBridge,\n83:             target,\n84:             paymentOperator,\n85:             payload,\n86:             refund\n87:         );\n88:         IERC20(bridgeToken).transferFrom(msg.sender, address(this), amt2Bridge);\n89:         IERC20(bridgeToken).approve(address(router), amt2Bridge);\n90: \n91:         callBridge(\n92:             amt2Bridge,\n93:             dstChainId,\n94:             bridgePayload,\n95:             additionalArgs,\n96:             refund\n97:         );\n98:     }\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L69-L98"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n218:     receive() external payable {}\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L218-L218"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n220:     fallback() external payable {}\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L220-L220"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/UniSwapper.sol\n\n100:     function swapNoPath(\n101:         SwapParams memory swapParams,\n102:         address receiver,\n103:         address refund\n104:     ) public payable returns (address tokenOut, uint256 amountOut) {\n105:         swapParams = _receiveAndWrapIfNeeded(swapParams);\n106: \n107:         if (swapParams.direction == SwapDirection.EXACT_OUT) {\n108:             _refundUser(\n109:                 refund,\n110:                 swapParams.tokenIn,\n111:                 swapParams.amountIn - swapParams.amountOut\n112:             );\n113:         }\n114: \n115:         uint amt2Recipient = swapParams.direction == SwapDirection.EXACT_OUT\n116:             ? swapParams.amountOut\n117:             : swapParams.amountIn;\n118: \n119:         _sendToRecipient(receiver, swapParams.tokenOut, amt2Recipient);\n120:         return (swapParams.tokenOut, amt2Recipient);\n121:     }\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/UniSwapper.sol#L100-L121"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/UniSwapper.sol\n\n123:     function swapExactIn(\n124:         SwapParams memory swapParams, // SwapParams is a struct\n125:         address receiver\n126:     ) public payable routerIsSet returns (uint256 amountOut) {\n127:         swapParams = _receiveAndWrapIfNeeded(swapParams);\n128: \n129:         IV3SwapRouter.ExactInputParams memory params = IV3SwapRouter\n130:             .ExactInputParams({\n131:                 path: swapParams.path,\n132:                 recipient: address(this),\n133:                 amountIn: swapParams.amountIn,\n134:                 amountOutMinimum: swapParams.amountOut\n135:             });\n136: \n137:         IERC20(swapParams.tokenIn).approve(uniswap_router, swapParams.amountIn);\n138:         amountOut = IV3SwapRouter(uniswap_router).exactInput(params);\n139: \n140:         _sendToRecipient(receiver, swapParams.tokenOut, amountOut);\n141:     }\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/UniSwapper.sol#L123-L141"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/UniSwapper.sol\n\n143:     function swapExactOut(\n144:         SwapParams memory swapParams,\n145:         address receiver,\n146:         address refundAddress\n147:     ) public payable routerIsSet returns (uint256 amountIn) {\n148:         swapParams = _receiveAndWrapIfNeeded(swapParams);\n149:         IV3SwapRouter.ExactOutputParams memory params = IV3SwapRouter\n150:             .ExactOutputParams({\n151:                 path: swapParams.path,\n152:                 recipient: address(this),\n153:                 //deadline: block.timestamp,\n154:                 amountOut: swapParams.amountOut,\n155:                 amountInMaximum: swapParams.amountIn\n156:             });\n157: \n158:         IERC20(swapParams.tokenIn).approve(uniswap_router, swapParams.amountIn);\n159:         amountIn = IV3SwapRouter(uniswap_router).exactOutput(params);\n160: \n161:         // refund sender\n162:         _refundUser(\n163:             refundAddress,\n164:             swapParams.tokenIn,\n165:             params.amountInMaximum - amountIn\n166:         );\n167: \n168:         _sendToRecipient(receiver, swapParams.tokenOut, swapParams.amountOut);\n169:     }\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/UniSwapper.sol#L143-L169"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/UniSwapper.sol\n\n171:     receive() external payable {}\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/UniSwapper.sol#L171-L171"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/UniSwapper.sol\n\n173:     fallback() external payable {}\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/UniSwapper.sol#L173-L173"
          ]
        }
      ]
    },
    {
      "severity": "Low",
      "title": "prevent re-setting a state variable with the same value",
      "description": "Not only is wasteful in terms of gas, but this is especially problematic when an event is emitted and the old and new values set are the same, as listeners might not expect this kind of scenario.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "\n\n```solidity\n\nFile: src/UTB.sol\n\n28:     function setExecutor(address _executor) public onlyOwner {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTB.sol#L28-L28"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/UTB.sol\n\n36:     function setWrapped(address payable _wrapped) public onlyOwner {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTB.sol#L36-L36"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/UTB.sol\n\n44:     function setFeeCollector(address payable _feeCollector) public onlyOwner {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTB.sol#L44-L44"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/BaseAdapter.sol\n\n19:     function setBridgeExecutor(address _executor) public onlyOwner {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/BaseAdapter.sol#L19-L19"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/DecentBridgeAdapter.sol\n\n26:     function setRouter(address _router) public onlyOwner {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/DecentBridgeAdapter.sol#L26-L26"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n33:     function setRouter(address _router) public onlyOwner {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L33-L33"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n37:     function setStargateEth(address _sgEth) public onlyOwner {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L37-L37"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/UniSwapper.sol\n\n20:     function setRouter(address _router) public onlyOwner {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/UniSwapper.sol#L20-L20"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/UniSwapper.sol\n\n24:     function setWrapped(address payable _wrapped) public onlyOwner {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/UniSwapper.sol#L24-L24"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/UniSwapper.sol\n\n32:     function updateSwapParams(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/UniSwapper.sol#L32-L32"
          ]
        }
      ]
    },
    {
      "severity": "Low",
      "title": "Function can return unassigned variable",
      "description": "Make sure that functions with a return value always return a valid and assigned value. Even if the default value is as expected, it should be assigned with the default value for code clarity and to reduce confusion.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n121:         return lzTxObj;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L121-L121"
          ]
        }
      ]
    },
    {
      "severity": "Low",
      "title": "Low Level Calls to Custom Addresses",
      "description": "Low-level calls (such as `.call()`, `.delegatecall()`, or `.callcode()`) in Solidity provide a way to interact with other contracts or addresses. However, when these calls are made to addresses that are provided as parameters or are not well-validated, they pose a significant security risk. Untrusted addresses might contain malicious code leading to unexpected behavior, loss of funds, or vulnerabilities.\\n\\n** Resolution **: Prefer using high- level Solidity function calls or interface - based interactions with known contracts to ensure security.If low - level calls are necessary, rigorously validate the addresses and test all possible interactions.Implementing additional checks and fail - safes can help mitigate potential risks associated with low - level calls.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentBridgeExecutor.sol\n\n33:         (bool success, ) = target.call(callPayload);\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentBridgeExecutor.sol#L33-L33"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentBridgeExecutor.sol\n\n61:         (bool success, ) = target.call{value: amount}(callPayload);\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentBridgeExecutor.sol#L61-L61"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/UTBExecutor.sol\n\n52:             (success, ) = target.call{value: amount}(payload);\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTBExecutor.sol#L52-L52"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/UTBExecutor.sol\n\n54:                 (refund.call{value: amount}(\"\"));\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTBExecutor.sol#L54-L54"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/UTBExecutor.sol\n\n65:             (success, ) = target.call{value: extraNative}(payload);\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTBExecutor.sol#L65-L65"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/UTBExecutor.sol\n\n67:                 (refund.call{value: extraNative}(\"\"));\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTBExecutor.sol#L67-L67"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/UTBExecutor.sol\n\n70:             (success, ) = target.call(payload);\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTBExecutor.sol#L70-L70"
          ]
        }
      ]
    },
    {
      "severity": "Low",
      "title": "Empty receive functions can cause gas issues",
      "description": "In Solidity, functions that receive Ether without corresponding functionality to utilize or withdraw these funds can inadvertently lead to a permanent loss of value. This is because if someone sends Ether to the contract, they may be unable to retrieve it. To avoid this, functions receiving Ether should be accompanied by additional methods that process or allow the withdrawal of these funds. If the intent is to use the received Ether, it should trigger a separate function; if not, it should revert the transaction (for instance, via `require(msg.sender == address(weth))`). Access control checks can also prevent unintended Ether transfers, despite the slight gas cost they entail. If concerns over gas costs persist, at minimum, include a rescue function to recover unused Ether. Missteps in handling Ether in smart contracts can lead to irreversible financial losses, hence these precautions are crucial.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentBridgeExecutor.sol\n\n85:     receive() external payable {}\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentBridgeExecutor.sol#L85-L85"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n337:     receive() external payable {}\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L337-L337"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/UTB.sol\n\n339:     receive() external payable {}\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTB.sol#L339-L339"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/DecentBridgeAdapter.sol\n\n156:     receive() external payable {}\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/DecentBridgeAdapter.sol#L156-L156"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n218:     receive() external payable {}\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L218-L218"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/UniSwapper.sol\n\n171:     receive() external payable {}\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/UniSwapper.sol#L171-L171"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "State variables declarations should have NatSpec descriptions",
      "description": " ",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "\n\n```solidity\n\nFile: src/UTB.sol\n\n18:     IUTBExecutor executor;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTB.sol#L18-L18"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/UTB.sol\n\n19:     IUTBFeeCollector feeCollector;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTB.sol#L19-L19"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/UTB.sol\n\n20:     IWETH wrapped;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTB.sol#L20-L20"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/UTB.sol\n\n21:     mapping(uint8 => address) public swappers;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTB.sol#L21-L21"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/UTB.sol\n\n22:     mapping(uint8 => address) public bridgeAdapters;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTB.sol#L22-L22"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/BaseAdapter.sol\n\n7:     address public bridgeExecutor;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/BaseAdapter.sol#L7-L7"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/DecentBridgeAdapter.sol\n\n13:     uint8 public constant BRIDGE_ID = 0;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/DecentBridgeAdapter.sol#L13-L13"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/DecentBridgeAdapter.sol\n\n14:     mapping(uint256 => address) public destinationBridgeAdapter;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/DecentBridgeAdapter.sol#L14-L14"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/DecentBridgeAdapter.sol\n\n15:     IDecentEthRouter public router;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/DecentBridgeAdapter.sol#L15-L15"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/DecentBridgeAdapter.sol\n\n16:     mapping(uint256 => uint16) lzIdLookup;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/DecentBridgeAdapter.sol#L16-L16"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/DecentBridgeAdapter.sol\n\n17:     mapping(uint16 => uint256) chainIdLookup;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/DecentBridgeAdapter.sol#L17-L17"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/DecentBridgeAdapter.sol\n\n18:     bool gasIsEth;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/DecentBridgeAdapter.sol#L18-L18"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/DecentBridgeAdapter.sol\n\n19:     address bridgeToken;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/DecentBridgeAdapter.sol#L19-L19"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n22:     uint8 public constant BRIDGE_ID = 1;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L22-L22"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n23:     uint8 public constant SG_FEE_BPS = 6;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L23-L23"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n24:     address public stargateEth;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L24-L24"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n25:     mapping(uint256 => address) public destinationBridgeAdapter;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L25-L25"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n26:     mapping(uint256 => uint16) lzIdLookup;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L26-L26"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n27:     mapping(uint16 => uint256) chainIdLookup;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L27-L27"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n31:     IStargateRouter public router;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L31-L31"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/SwapParams.sol\n\n5:     uint8 constant EXACT_IN = 0;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/SwapParams.sol#L5-L5"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/SwapParams.sol\n\n6:     uint8 constant EXACT_OUT = 1;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/SwapParams.sol#L6-L6"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/UniSwapper.sol\n\n16:     uint8 public constant SWAPPER_ID = 0;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/UniSwapper.sol#L16-L16"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/UniSwapper.sol\n\n17:     address public uniswap_router;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/UniSwapper.sol#L17-L17"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/UniSwapper.sol\n\n18:     address payable public wrapped;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/UniSwapper.sol#L18-L18"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n13:     IWETH public weth;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L13-L13"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n14:     IDcntEth public dcntEth;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L14-L14"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n15:     IDecentBridgeExecutor public executor;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L15-L15"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n17:     uint8 public constant MT_ETH_TRANSFER = 0;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L17-L17"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n18:     uint8 public constant MT_ETH_TRANSFER_WITH_PAYLOAD = 1;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L18-L18"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n20:     uint16 public constant PT_SEND_AND_CALL = 1;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L20-L20"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n22:     bool public gasCurrencyIsEth; // for chains that use ETH as gas currency\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L22-L22"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n24:     mapping(uint16 => address) public destinationBridges;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L24-L24"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n25:     mapping(address => uint256) public balanceOf;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L25-L25"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentBridgeExecutor.sol\n\n9:     IWETH weth;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentBridgeExecutor.sol#L9-L9"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentBridgeExecutor.sol\n\n10:     bool public gasCurrencyIsEth; // for chains that use ETH as gas currency\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentBridgeExecutor.sol#L10-L10"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Large or complicated code bases should implement invariant tests",
      "description": "Large code bases, or code with lots of inline-assembly, complicated math, or complicated interactions between multiple contracts, should implement [invariant fuzzing tests](https://medium.com/coinmonks/smart-contract-fuzzing-d9b88e0b0a05). Invariant fuzzers such as Echidna require the test writer to come up with invariants which should not be violated under any circumstances, and the fuzzer tests various inputs and function calls to ensure that the invariants always hold. Even code with 100% code coverage can still have bugs due to the order of the operations a user performs, and invariant fuzzers, with properly and extensively-written invariants, can close this testing gap significantly.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "\n\n```solidity\n\nFile: src/UTB.sol\n\n@audit Should implement invariant tests\n1: \n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTB.sol#L1-L1"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "[NatSpec] Natspec `@author` is missing from `contract`",
      "description": " ",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "\n\n```solidity\n\nFile: src/UTB.sol\n\n15: contract UTB is Owned {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTB.sol#L15-L15"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/UTBExecutor.sol\n\n7: contract UTBExecutor is Owned {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTBExecutor.sol#L7-L7"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/BaseAdapter.sol\n\n6: contract BaseAdapter is UTBOwned {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/BaseAdapter.sol#L6-L6"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/DecentBridgeAdapter.sol\n\n12: contract DecentBridgeAdapter is BaseAdapter, IBridgeAdapter {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/DecentBridgeAdapter.sol#L12-L12"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n17: contract StargateBridgeAdapter is\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L17-L17"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/UniSwapper.sol\n\n13: contract UniSwapper is UTBOwned, ISwapper {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/UniSwapper.sol#L13-L13"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n12: contract DecentEthRouter is IDecentEthRouter, IOFTReceiverV2, Owned {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L12-L12"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentBridgeExecutor.sol\n\n8: contract DecentBridgeExecutor is IDecentBridgeExecutor, Owned {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentBridgeExecutor.sol#L8-L8"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Variable names that consist of all capital letters should be reserved for `constant`/`immutable` variables",
      "description": " ",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n96:         uint256 GAS_FOR_RELAY = 100000;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L96-L96"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Common functions should be refactored to a common base contract",
      "description": "The functions below have the same implementation as is seen in other files. The functions should be refactored into functions of a common base contract",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "\n\n```solidity\n\nFile: src/UTB.sol\n\n//@audit this function is already seen in `src/bridge_adapters/DecentBridgeAdapter.sol`\n341:     fallback() external payable {}\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTB.sol#L341-L341"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n//@audit this function is already seen in `src/bridge_adapters/StargateBridgeAdapter.sol`\n41:     function getId() public pure returns (uint8) {\n42:         return BRIDGE_ID;\n43:     }\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L41-L43"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n//@audit this function is already seen in `src/bridge_adapters/StargateBridgeAdapter.sol`\n45:     function registerRemoteBridgeAdapter(\n46:         uint256 dstChainId,\n47:         uint16 dstLzId,\n48:         address decentBridgeAdapter\n49:     ) public onlyOwner {\n50:         lzIdLookup[dstChainId] = dstLzId;\n51:         chainIdLookup[dstLzId] = dstChainId;\n52:         destinationBridgeAdapter[dstChainId] = decentBridgeAdapter;\n53:     }\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L45-L53"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Constant redefined elsewhere",
      "description": "Consider defining in only one contract so that values cannot become out of sync when only one location is updated. A [cheap way](https://medium.com/coinmonks/gas-cost-of-solidity-library-functions-dbe0cedd4678) to store constants in a single location is to create an `internal constant` in a `library`. If the variable is a local cache of another contract's value, consider making the cache variable internal or private, which will require external users to query the contract with the source of truth, so that callers don't get out of sync.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n//@audit The same constant is already defined on file : src/bridge_adapters/DecentBridgeAdapter.sol\n22:     uint8 public constant BRIDGE_ID = 1;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L22-L22"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Constants in comparisons should appear on the left side",
      "description": " ",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "\n\n```solidity\n\nFile: src/UTBExecutor.sol\n\n//@audit `0`\n64:         if (extraNative > 0) {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTBExecutor.sol#L64-L64"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/UTBExecutor.sol\n\n//@audit `0`\n76:         if (remainingBalance == 0) {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTBExecutor.sol#L76-L76"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/UniSwapper.sol\n\n//@audit `0`\n68:         if (swapParams.path.length == 0) {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/UniSwapper.sol#L68-L68"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n//@audit `MT_ETH_TRANSFER`\n100:         if (msgType == MT_ETH_TRANSFER) {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L100-L100"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n//@audit `MT_ETH_TRANSFER_WITH_PAYLOAD`\n250:         if (msgType == MT_ETH_TRANSFER_WITH_PAYLOAD) {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L250-L250"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n//@audit `MT_ETH_TRANSFER`\n271:         if (msgType == MT_ETH_TRANSFER) {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L271-L271"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "[NatSpec] Natspec description is missing from `contract`",
      "description": "It is recommended that Solidity contracts are fully annotated using NatSpec for all public interfaces (everything in the ABI). It is clearly stated in the Solidity official documentation. In complex projects such as Defi, the interpretation of all functions and their arguments and returns is important for code readability and auditability.[source](https://docs.soliditylang.org/en/v0.8.15/natspec-format.html)",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "\n\n```solidity\n\nFile: src/UTB.sol\n\n15: contract UTB is Owned {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTB.sol#L15-L15"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/UTBExecutor.sol\n\n7: contract UTBExecutor is Owned {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTBExecutor.sol#L7-L7"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/BaseAdapter.sol\n\n6: contract BaseAdapter is UTBOwned {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/BaseAdapter.sol#L6-L6"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/DecentBridgeAdapter.sol\n\n12: contract DecentBridgeAdapter is BaseAdapter, IBridgeAdapter {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/DecentBridgeAdapter.sol#L12-L12"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n17: contract StargateBridgeAdapter is\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L17-L17"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/SwapParams.sol\n\n4: library SwapDirection {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/SwapParams.sol#L4-L4"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/UniSwapper.sol\n\n13: contract UniSwapper is UTBOwned, ISwapper {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/UniSwapper.sol#L13-L13"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n12: contract DecentEthRouter is IDecentEthRouter, IOFTReceiverV2, Owned {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L12-L12"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentBridgeExecutor.sol\n\n8: contract DecentBridgeExecutor is IDecentBridgeExecutor, Owned {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentBridgeExecutor.sol#L8-L8"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Contract does not follow the Solidity style guide's suggested layout ordering",
      "description": "The [style guide](https://docs.soliditylang.org/en/v0.8.16/style-guide.html#order-of-layout) says that, within a contract, the ordering should be 1) Type declarations, 2) State variables, 3) Events, 4) Modifiers, and 5) Functions, but the contract(s) below do not follow this ordering",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/SwapParams.sol\n\n//@audit the structure definition is misplaced\n9: struct SwapParams {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/SwapParams.sol#L9-L9"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Control structures do not follow the Solidity Style Guide",
      "description": "See the [control structures](https://docs.soliditylang.org/en/latest/style-guide.html#control-structures) section of the Solidity Style Guide",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "\n\n```solidity\n\nFile: src/UTB.sol\n\n52:     function performSwap(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTB.sol#L52-L52"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/UTB.sol\n\n63:     function performSwap(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTB.sol#L63-L63"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/UTB.sol\n\n108:     function swapAndExecute(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTB.sol#L108-L108"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/UTB.sol\n\n134:     function _swapAndExecute(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTB.sol#L134-L134"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/UTB.sol\n\n168:     function swapAndModifyPostBridge(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTB.sol#L168-L168"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/UTB.sol\n\n207:     function approveAndCheckIfNative(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTB.sol#L207-L207"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/UTB.sol\n\n259:     function bridgeAndExecute(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTB.sol#L259-L259"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/UTB.sol\n\n282:     function callBridge(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTB.sol#L282-L282"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/UTB.sol\n\n311:     function receiveFromBridge(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTB.sol#L311-L311"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/UTBExecutor.sol\n\n19:     function execute(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTBExecutor.sol#L19-L19"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/UTBExecutor.sol\n\n41:     function execute(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTBExecutor.sol#L41-L41"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/DecentBridgeAdapter.sol\n\n34:     function registerRemoteBridgeAdapter(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/DecentBridgeAdapter.sol#L34-L34"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/DecentBridgeAdapter.sol\n\n44:     function estimateFees(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/DecentBridgeAdapter.sol#L44-L44"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/DecentBridgeAdapter.sol\n\n67:     function getBridgeToken(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/DecentBridgeAdapter.sol#L67-L67"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/DecentBridgeAdapter.sol\n\n73:     function getBridgedAmount(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/DecentBridgeAdapter.sol#L73-L73"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/DecentBridgeAdapter.sol\n\n81:     function bridge(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/DecentBridgeAdapter.sol#L81-L81"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/DecentBridgeAdapter.sol\n\n127:     function receiveFromBridge(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/DecentBridgeAdapter.sol#L127-L127"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n45:     function registerRemoteBridgeAdapter(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L45-L45"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n55:     function getBridgeToken(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L55-L55"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n61:     function getBridgedAmount(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L61-L61"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n69:     function bridge(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L69-L69"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n100:     function getValue(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L100-L100"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n114:     function getLzTxObj(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L114-L114"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n124:     function getDstChainId(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L124-L124"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n134:     function getSrcPoolId(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L134-L134"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n144:     function getDstPoolId(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L144-L144"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n163:     function callBridge(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L163-L163"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n183:     function sgReceive(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L183-L183"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/UniSwapper.sol\n\n32:     function updateSwapParams(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/UniSwapper.sol#L32-L32"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/UniSwapper.sol\n\n47:     function _sendToRecipient(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/UniSwapper.sol#L47-L47"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/UniSwapper.sol\n\n58:     function swap(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/UniSwapper.sol#L58-L58"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/UniSwapper.sol\n\n79:     function _receiveAndWrapIfNeeded(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/UniSwapper.sol#L79-L79"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/UniSwapper.sol\n\n100:     function swapNoPath(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/UniSwapper.sol#L100-L100"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/UniSwapper.sol\n\n123:     function swapExactIn(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/UniSwapper.sol#L123-L123"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/UniSwapper.sol\n\n143:     function swapExactOut(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/UniSwapper.sol#L143-L143"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n73:     function addDestinationBridge(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L73-L73"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n80:     function _getCallParams(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L80-L80"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n113:     function estimateSendAndCallFee(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L113-L113"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n148:     function _bridgeWithPayload(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L148-L148"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n197:     function bridgeWithPayload(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L197-L197"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n218:     function bridge(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L218-L218"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n237:     function onOFTReceived(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L237-L237"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n285:     function redeemEth(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L285-L285"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n294:     function redeemWeth(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L294-L294"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n313:     function removeLiquidityEth(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L313-L313"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n322:     function addLiquidityWeth(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L322-L322"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n330:     function removeLiquidityWeth(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L330-L330"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentBridgeExecutor.sol\n\n24:     function _executeWeth(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentBridgeExecutor.sol#L24-L24"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentBridgeExecutor.sol\n\n54:     function _executeEth(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentBridgeExecutor.sol#L54-L54"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentBridgeExecutor.sol\n\n68:     function execute(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentBridgeExecutor.sol#L68-L68"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Default address(0) can be returned",
      "description": "Allowing a function in Solidity to return the default address (address(0)) can be problematic as it can represent uninitialized or invalid addresses. If such an address is utilized in transfer operations or other sensitive actions, it could lead to loss of funds or unpredicted behavior. It's prudent to include checks in your functions to prevent the return of the zero address, enhancing contract security.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/DecentBridgeAdapter.sol\n\n70:         return bridgeToken;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/DecentBridgeAdapter.sol#L70-L70"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Dependence on external protocols",
      "description": "External protocols should be monitored as such dependencies may introduce vulnerabilities if a vulnerability is found /introduced in the external protocol",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/UniSwapper.sol\n\n11: import {IV3SwapRouter} from \"@uniswap/swap-contracts/interfaces/IV3SwapRouter.sol\";\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/UniSwapper.sol#L11-L11"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Consider adding emergency-stop functionality",
      "description": "In the event of a security breach or any unforeseen emergency, swiftly suspending all protocol operations becomes crucial. Having a mechanism in place to halt all functions collectively, instead of pausing individual contracts separately, substantially enhances the efficiency of mitigating ongoing attacks or vulnerabilities. This not only quickens the response time to potential threats but also reduces operational stress during these critical periods. Therefore, consider integrating a 'circuit breaker' or 'emergency stop' function into the smart contract system architecture. Such a feature would provide the capability to suspend the entire protocol instantly, which could prove invaluable during a time-sensitive crisis management situation.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "\n\n```solidity\n\nFile: src/UTB.sol\n\n15: contract UTB is Owned {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTB.sol#L15-L15"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/UTBExecutor.sol\n\n7: contract UTBExecutor is Owned {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTBExecutor.sol#L7-L7"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/BaseAdapter.sol\n\n6: contract BaseAdapter is UTBOwned {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/BaseAdapter.sol#L6-L6"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/DecentBridgeAdapter.sol\n\n12: contract DecentBridgeAdapter is BaseAdapter, IBridgeAdapter {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/DecentBridgeAdapter.sol#L12-L12"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n17: contract StargateBridgeAdapter is\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L17-L17"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/SwapParams.sol\n\n4: library SwapDirection {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/SwapParams.sol#L4-L4"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/UniSwapper.sol\n\n13: contract UniSwapper is UTBOwned, ISwapper {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/UniSwapper.sol#L13-L13"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n12: contract DecentEthRouter is IDecentEthRouter, IOFTReceiverV2, Owned {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L12-L12"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentBridgeExecutor.sol\n\n8: contract DecentBridgeExecutor is IDecentBridgeExecutor, Owned {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentBridgeExecutor.sol#L8-L8"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Empty bytes check is missing",
      "description": "When developing smart contracts in Solidity, it's crucial to validate the inputs of your functions. This includes ensuring that the bytes parameters are not empty, especially when they represent crucial data such as addresses, identifiers, or raw data that the contract needs to process.\nMissing empty bytes checks can lead to unexpected behaviour in your contract.For instance, certain operations might fail, produce incorrect results, or consume unnecessary gas when performed with empty bytes.Moreover, missing input validation can potentially expose your contract to malicious activity, including exploitation of unhandled edge cases.\nTo mitigate these issues, always validate that bytes parameters are not empty when the logic of your contract requires it.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "\n\n```solidity\n\nFile: src/UTB.sol\n\n//@audit  ,signature are not checked\n108:     function swapAndExecute(\n109:         SwapAndExecuteInstructions calldata instructions,\n110:         FeeStructure calldata fees,\n111:         bytes calldata signature\n112:     )\n113:         public\n114:         payable\n115:         retrieveAndCollectFees(fees, abi.encode(instructions, fees), signature)\n116:     {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTB.sol#L108-L116"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/UTB.sol\n\n//@audit  ,payload are not checked\n134:     function _swapAndExecute(\n135:         SwapInstructions memory swapInstructions,\n136:         address target,\n137:         address paymentOperator,\n138:         bytes memory payload,\n139:         address payable refund\n140:     ) private {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTB.sol#L134-L140"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/UTB.sol\n\n//@audit  ,signature are not checked\n259:     function bridgeAndExecute(\n260:         BridgeInstructions calldata instructions,\n261:         FeeStructure calldata fees,\n262:         bytes calldata signature\n263:     )\n264:         public\n265:         payable\n266:         retrieveAndCollectFees(fees, abi.encode(instructions, fees), signature)\n267:         returns (bytes memory)\n268:     {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTB.sol#L259-L268"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/UTB.sol\n\n//@audit  ,payload are not checked\n311:     function receiveFromBridge(\n312:         SwapInstructions memory postBridge,\n313:         address target,\n314:         address paymentOperator,\n315:         bytes memory payload,\n316:         address payable refund\n317:     ) public {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTB.sol#L311-L317"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/UTBExecutor.sol\n\n//@audit  ,payload are not checked\n19:     function execute(\n20:         address target,\n21:         address paymentOperator,\n22:         bytes memory payload,\n23:         address token,\n24:         uint amount,\n25:         address payable refund\n26:     ) public payable onlyOwner {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTBExecutor.sol#L19-L26"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/UTBExecutor.sol\n\n//@audit  ,payload are not checked\n41:     function execute(\n42:         address target,\n43:         address paymentOperator,\n44:         bytes memory payload,\n45:         address token,\n46:         uint amount,\n47:         address payable refund,\n48:         uint extraNative\n49:     ) public onlyOwner {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTBExecutor.sol#L41-L49"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/DecentBridgeAdapter.sol\n\n//@audit  ,payload are not checked\n44:     function estimateFees(\n45:         SwapInstructions memory postBridge,\n46:         uint256 dstChainId,\n47:         address target,\n48:         uint64 dstGas,\n49:         bytes memory payload\n50:     ) public view returns (uint nativeFee, uint zroFee) {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/DecentBridgeAdapter.sol#L44-L50"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/DecentBridgeAdapter.sol\n\n//@audit  ,payload ,additionalArgs are not checked\n81:     function bridge(\n82:         uint256 amt2Bridge,\n83:         SwapInstructions memory postBridge,\n84:         uint256 dstChainId,\n85:         address target,\n86:         address paymentOperator,\n87:         bytes memory payload,\n88:         bytes calldata additionalArgs,\n89:         address payable refund\n90:     ) public payable onlyUtb returns (bytes memory bridgePayload) {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/DecentBridgeAdapter.sol#L81-L90"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/DecentBridgeAdapter.sol\n\n//@audit  ,payload are not checked\n127:     function receiveFromBridge(\n128:         SwapInstructions memory postBridge,\n129:         address target,\n130:         address paymentOperator,\n131:         bytes memory payload,\n132:         address payable refund\n133:     ) public onlyExecutor {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/DecentBridgeAdapter.sol#L127-L133"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n//@audit  ,additionalArgs are not checked\n55:     function getBridgeToken(\n56:         bytes calldata additionalArgs\n57:     ) external pure returns (address bridgeToken) {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L55-L57"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n//@audit  ,payload ,additionalArgs are not checked\n69:     function bridge(\n70:         uint256 amt2Bridge,\n71:         SwapInstructions memory postBridge,\n72:         uint256 dstChainId,\n73:         address target,\n74:         address paymentOperator,\n75:         bytes memory payload,\n76:         bytes calldata additionalArgs,\n77:         address payable refund\n78:     ) public payable onlyUtb returns (bytes memory bridgePayload) {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L69-L78"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n//@audit  ,additionalArgs are not checked\n100:     function getValue(\n101:         bytes calldata additionalArgs,\n102:         uint256 amt2Bridge\n103:     ) private view returns (uint value) {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L100-L103"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n//@audit  ,additionalArgs are not checked\n114:     function getLzTxObj(\n115:         bytes calldata additionalArgs\n116:     ) private pure returns (IStargateRouter.lzTxObj memory) {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L114-L116"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n//@audit  ,additionalArgs are not checked\n124:     function getDstChainId(\n125:         bytes calldata additionalArgs\n126:     ) private pure returns (uint16) {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L124-L126"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n//@audit  ,additionalArgs are not checked\n134:     function getSrcPoolId(\n135:         bytes calldata additionalArgs\n136:     ) private pure returns (uint120) {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L134-L136"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n//@audit  ,additionalArgs are not checked\n144:     function getDstPoolId(\n145:         bytes calldata additionalArgs\n146:     ) private pure returns (uint120) {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L144-L146"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n//@audit  ,bridgePayload ,additionalArgs are not checked\n163:     function callBridge(\n164:         uint256 amt2Bridge,\n165:         uint256 dstChainId,\n166:         bytes memory bridgePayload,\n167:         bytes calldata additionalArgs,\n168:         address payable refund\n169:     ) private {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L163-L169"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n//@audit  ,payload are not checked\n183:     function sgReceive(\n184:         uint16, // _srcChainid\n185:         bytes memory, // _srcAddress\n186:         uint256, // _nonce\n187:         address, // _token\n188:         uint256, // amountLD\n189:         bytes memory payload\n190:     ) external override onlyExecutor {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L183-L190"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/UniSwapper.sol\n\n//@audit  ,payload are not checked\n32:     function updateSwapParams(\n33:         SwapParams memory newSwapParams,\n34:         bytes memory payload\n35:     ) external pure returns (bytes memory) {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/UniSwapper.sol#L32-L35"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/UniSwapper.sol\n\n//@audit  ,swapPayload are not checked\n58:     function swap(\n59:         bytes memory swapPayload\n60:     )\n61:         external\n62:         onlyUtb\n63:         returns (address tokenOut, uint256 amountOut)\n64:     {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/UniSwapper.sol#L58-L64"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n//@audit  ,additionalPayload are not checked\n80:     function _getCallParams(\n81:         uint8 msgType,\n82:         address _toAddress,\n83:         uint16 _dstChainId,\n84:         uint64 _dstGasForCall,\n85:         bool deliverEth,\n86:         bytes memory additionalPayload\n87:     )\n88:         private\n89:         view\n90:         returns (\n91:             bytes32 destBridge,\n92:             bytes memory adapterParams,\n93:             bytes memory payload\n94:         )\n95:     {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L80-L95"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n//@audit  ,payload are not checked\n113:     function estimateSendAndCallFee(\n114:         uint8 msgType,\n115:         uint16 _dstChainId,\n116:         address _toAddress,\n117:         uint _amount,\n118:         uint64 _dstGasForCall,\n119:         bool deliverEth,\n120:         bytes memory payload\n121:     ) public view returns (uint nativeFee, uint zroFee) {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L113-L121"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n//@audit  ,additionalPayload are not checked\n148:     function _bridgeWithPayload(\n149:         uint8 msgType,\n150:         uint16 _dstChainId,\n151:         address _toAddress,\n152:         uint _amount,\n153:         uint64 _dstGasForCall,\n154:         bytes memory additionalPayload,\n155:         bool deliverEth\n156:     ) internal {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L148-L156"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n//@audit  ,additionalPayload are not checked\n197:     function bridgeWithPayload(\n198:         uint16 _dstChainId,\n199:         address _toAddress,\n200:         uint _amount,\n201:         bool deliverEth,\n202:         uint64 _dstGasForCall,\n203:         bytes memory additionalPayload\n204:     ) public payable {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L197-L204"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n//@audit  ,_payload are not checked\n237:     function onOFTReceived(\n238:         uint16 _srcChainId,\n239:         bytes calldata,\n240:         uint64,\n241:         bytes32,\n242:         uint _amount,\n243:         bytes memory _payload\n244:     ) external override onlyLzApp {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L237-L244"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentBridgeExecutor.sol\n\n//@audit  ,callPayload are not checked\n24:     function _executeWeth(\n25:         address from,\n26:         address target,\n27:         uint256 amount,\n28:         bytes memory callPayload\n29:     ) private {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentBridgeExecutor.sol#L24-L29"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentBridgeExecutor.sol\n\n//@audit  ,callPayload are not checked\n54:     function _executeEth(\n55:         address from,\n56:         address target,\n57:         uint256 amount,\n58:         bytes memory callPayload\n59:     ) private {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentBridgeExecutor.sol#L54-L59"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentBridgeExecutor.sol\n\n//@audit  ,callPayload are not checked\n68:     function execute(\n69:         address from,\n70:         address target,\n71:         bool deliverEth,\n72:         uint256 amount,\n73:         bytes memory callPayload\n74:     ) public onlyOwner {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentBridgeExecutor.sol#L68-L74"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Events are missing sender information",
      "description": "When an action is triggered based on a user's action, not being able to filter based on who triggered the action makes event processing a lot more cumbersome. Including the `msg.sender` the events of these types of action will make events much more useful to end users, especially when `msg.sender` is not `tx.origin`.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n257:         emit ReceivedDecentEth(\n258:             msgType,\n259:             _srcChainId,\n260:             _from,\n261:             _to,\n262:             _amount,\n263:             callPayload\n264:         );\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L257-L264"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Explicitly define visibility of state variables to prevent misconceptions on what can access the variable",
      "description": "Such state variables should be marked as private as this is the default visibility",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "\n\n```solidity\n\nFile: src/UTB.sol\n\n18:     IUTBExecutor executor;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTB.sol#L18-L18"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/UTB.sol\n\n19:     IUTBFeeCollector feeCollector;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTB.sol#L19-L19"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/UTB.sol\n\n20:     IWETH wrapped;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTB.sol#L20-L20"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/DecentBridgeAdapter.sol\n\n16:     mapping(uint256 => uint16) lzIdLookup;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/DecentBridgeAdapter.sol#L16-L16"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/DecentBridgeAdapter.sol\n\n17:     mapping(uint16 => uint256) chainIdLookup;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/DecentBridgeAdapter.sol#L17-L17"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/DecentBridgeAdapter.sol\n\n18:     bool gasIsEth;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/DecentBridgeAdapter.sol#L18-L18"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/DecentBridgeAdapter.sol\n\n19:     address bridgeToken;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/DecentBridgeAdapter.sol#L19-L19"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n26:     mapping(uint256 => uint16) lzIdLookup;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L26-L26"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n27:     mapping(uint16 => uint256) chainIdLookup;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L27-L27"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/SwapParams.sol\n\n5:     uint8 constant EXACT_IN = 0;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/SwapParams.sol#L5-L5"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/SwapParams.sol\n\n6:     uint8 constant EXACT_OUT = 1;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/SwapParams.sol#L6-L6"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentBridgeExecutor.sol\n\n9:     IWETH weth;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentBridgeExecutor.sol#L9-L9"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Defining All External/Public Functions in Contract Interfaces",
      "description": "It is preferable to have all the external and public function in an interface to make using them easier by developers. This helps ensure the whole API is extracted in a interface.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/BaseAdapter.sol\n\n19:     function setBridgeExecutor(address _executor) public onlyOwner {\n20:         bridgeExecutor = _executor;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/BaseAdapter.sol#L19-L20"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/DecentBridgeAdapter.sol\n\n34:     function registerRemoteBridgeAdapter(\n35:         uint256 dstChainId,\n36:         uint16 dstLzId,\n37:         address decentBridgeAdapter\n38:     ) public onlyOwner {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/DecentBridgeAdapter.sol#L34-L38"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/DecentBridgeAdapter.sol\n\n44:     function estimateFees(\n45:         SwapInstructions memory postBridge,\n46:         uint256 dstChainId,\n47:         address target,\n48:         uint64 dstGas,\n49:         bytes memory payload\n50:     ) public view returns (uint nativeFee, uint zroFee) {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/DecentBridgeAdapter.sol#L44-L50"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n37:     function setStargateEth(address _sgEth) public onlyOwner {\n38:         stargateEth = _sgEth;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L37-L38"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n45:     function registerRemoteBridgeAdapter(\n46:         uint256 dstChainId,\n47:         uint16 dstLzId,\n48:         address decentBridgeAdapter\n49:     ) public onlyOwner {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L45-L49"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/UniSwapper.sol\n\n100:     function swapNoPath(\n101:         SwapParams memory swapParams,\n102:         address receiver,\n103:         address refund\n104:     ) public payable returns (address tokenOut, uint256 amountOut) {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/UniSwapper.sol#L100-L104"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/UniSwapper.sol\n\n123:     function swapExactIn(\n124:         SwapParams memory swapParams, // SwapParams is a struct\n125:         address receiver\n126:     ) public payable routerIsSet returns (uint256 amountOut) {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/UniSwapper.sol#L123-L126"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/UniSwapper.sol\n\n143:     function swapExactOut(\n144:         SwapParams memory swapParams,\n145:         address receiver,\n146:         address refundAddress\n147:     ) public payable routerIsSet returns (uint256 amountIn) {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/UniSwapper.sol#L143-L147"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Fixed Compiler Version Required for Non-Library/Interface Files",
      "description": " ",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "\n\n```solidity\n\nFile: src/UTB.sol\n\n//@audit `UTB` \n2: pragma solidity ^0.8.0;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTB.sol#L2-L2"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/UTBExecutor.sol\n\n//@audit `UTBExecutor` \n2: pragma solidity ^0.8.0;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTBExecutor.sol#L2-L2"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/BaseAdapter.sol\n\n//@audit `BaseAdapter` \n2: pragma solidity ^0.8.0;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/BaseAdapter.sol#L2-L2"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/DecentBridgeAdapter.sol\n\n//@audit `DecentBridgeAdapter` \n2: pragma solidity ^0.8.0;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/DecentBridgeAdapter.sol#L2-L2"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n//@audit `StargateBridgeAdapter` \n2: pragma solidity ^0.8.0;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L2-L2"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/UniSwapper.sol\n\n//@audit `UniSwapper` \n2: pragma solidity ^0.8.0;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/UniSwapper.sol#L2-L2"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n//@audit `DecentEthRouter` \n2: pragma solidity ^0.8.13;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L2-L2"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentBridgeExecutor.sol\n\n//@audit `DecentBridgeExecutor` \n2: pragma solidity ^0.8.0;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentBridgeExecutor.sol#L2-L2"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Floating pragma should be avoided",
      "description": "If you leave a floating pragma in your code (pragma solidity 0.4>=0.6. 0. ), you won't know which version was deployed to compile your code, leading to unexpected behavior",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "\n\n```solidity\n\nFile: src/UTB.sol\n\n2: pragma solidity ^0.8.0;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTB.sol#L2-L2"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/UTBExecutor.sol\n\n2: pragma solidity ^0.8.0;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTBExecutor.sol#L2-L2"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/BaseAdapter.sol\n\n2: pragma solidity ^0.8.0;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/BaseAdapter.sol#L2-L2"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/DecentBridgeAdapter.sol\n\n2: pragma solidity ^0.8.0;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/DecentBridgeAdapter.sol#L2-L2"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n2: pragma solidity ^0.8.0;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L2-L2"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/UniSwapper.sol\n\n2: pragma solidity ^0.8.0;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/UniSwapper.sol#L2-L2"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n2: pragma solidity ^0.8.13;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L2-L2"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentBridgeExecutor.sol\n\n2: pragma solidity ^0.8.0;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentBridgeExecutor.sol#L2-L2"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "[NatSpec] Natspec description is missing from `function`",
      "description": "It is recommended that Solidity contracts are fully annotated using NatSpec for all public interfaces (everything in the ABI). It is clearly stated in the Solidity official documentation. In complex projects such as Defi, the interpretation of all functions and their arguments and returns is important for code readability and auditability.[source](https://docs.soliditylang.org/en/v0.8.15/natspec-format.html)",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/BaseAdapter.sol\n\n19:     function setBridgeExecutor(address _executor) public onlyOwner {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/BaseAdapter.sol#L19-L19"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/DecentBridgeAdapter.sol\n\n26:     function setRouter(address _router) public onlyOwner {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/DecentBridgeAdapter.sol#L26-L26"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/DecentBridgeAdapter.sol\n\n30:     function getId() public pure returns (uint8) {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/DecentBridgeAdapter.sol#L30-L30"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/DecentBridgeAdapter.sol\n\n34:     function registerRemoteBridgeAdapter(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/DecentBridgeAdapter.sol#L34-L34"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/DecentBridgeAdapter.sol\n\n44:     function estimateFees(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/DecentBridgeAdapter.sol#L44-L44"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/DecentBridgeAdapter.sol\n\n67:     function getBridgeToken(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/DecentBridgeAdapter.sol#L67-L67"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/DecentBridgeAdapter.sol\n\n73:     function getBridgedAmount(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/DecentBridgeAdapter.sol#L73-L73"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/DecentBridgeAdapter.sol\n\n81:     function bridge(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/DecentBridgeAdapter.sol#L81-L81"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/DecentBridgeAdapter.sol\n\n127:     function receiveFromBridge(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/DecentBridgeAdapter.sol#L127-L127"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n33:     function setRouter(address _router) public onlyOwner {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L33-L33"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n37:     function setStargateEth(address _sgEth) public onlyOwner {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L37-L37"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n41:     function getId() public pure returns (uint8) {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L41-L41"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n45:     function registerRemoteBridgeAdapter(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L45-L45"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n55:     function getBridgeToken(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L55-L55"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n61:     function getBridgedAmount(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L61-L61"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n69:     function bridge(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L69-L69"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n100:     function getValue(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L100-L100"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n114:     function getLzTxObj(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L114-L114"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n124:     function getDstChainId(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L124-L124"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n134:     function getSrcPoolId(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L134-L134"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n144:     function getDstPoolId(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L144-L144"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n154:     function getDestAdapter(uint chainId) private view returns (address dstAddr) {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L154-L154"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n163:     function callBridge(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L163-L163"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n183:     function sgReceive(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L183-L183"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/UniSwapper.sol\n\n20:     function setRouter(address _router) public onlyOwner {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/UniSwapper.sol#L20-L20"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/UniSwapper.sol\n\n24:     function setWrapped(address payable _wrapped) public onlyOwner {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/UniSwapper.sol#L24-L24"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/UniSwapper.sol\n\n28:     function getId() public pure returns (uint8) {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/UniSwapper.sol#L28-L28"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/UniSwapper.sol\n\n32:     function updateSwapParams(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/UniSwapper.sol#L32-L32"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/UniSwapper.sol\n\n43:     function _refundUser(address user, address token, uint amount) private {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/UniSwapper.sol#L43-L43"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/UniSwapper.sol\n\n47:     function _sendToRecipient(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/UniSwapper.sol#L47-L47"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/UniSwapper.sol\n\n58:     function swap(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/UniSwapper.sol#L58-L58"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/UniSwapper.sol\n\n79:     function _receiveAndWrapIfNeeded(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/UniSwapper.sol#L79-L79"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/UniSwapper.sol\n\n100:     function swapNoPath(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/UniSwapper.sol#L100-L100"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/UniSwapper.sol\n\n123:     function swapExactIn(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/UniSwapper.sol#L123-L123"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/UniSwapper.sol\n\n143:     function swapExactOut(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/UniSwapper.sol#L143-L143"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n80:     function _getCallParams(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L80-L80"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n113:     function estimateSendAndCallFee(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L113-L113"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n148:     function _bridgeWithPayload(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L148-L148"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Function ordering does not follow the Solidity style guide",
      "description": "According to the [Solidity style guide](https://docs.soliditylang.org/en/v0.8.17/style-guide.html#order-of-functions), functions should be laid out in the following order :`constructor()`, `receive()`, `fallback()`, `external`, `public`, `internal`, `private`, but the cases below do not follow this pattern",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "\n\n```solidity\n\nFile: src/UTB.sol\n\n108:     function swapAndExecute(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTB.sol#L108-L108"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/DecentBridgeAdapter.sol\n\n67:     function getBridgeToken(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/DecentBridgeAdapter.sol#L67-L67"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n55:     function getBridgeToken(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L55-L55"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/UniSwapper.sol\n\n32:     function updateSwapParams(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/UniSwapper.sol#L32-L32"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n113:     function estimateSendAndCallFee(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L113-L113"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentBridgeExecutor.sol\n\n68:     function execute(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentBridgeExecutor.sol#L68-L68"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Some if-statement can be converted to a ternary",
      "description": "Improving code readability and compactness is an integral part of optimal programming practices. The use of ternary operators in place of if-else conditions is one such measure. Ternary operators allow us to write conditional statements in a more concise manner, thereby enhancing readability and simplicity. They follow the syntax `condition ? exprIfTrue : exprIfFalse`, which interprets as \"if the condition is true, evaluate to `exprIfTrue`, else evaluate to `exprIfFalse`\". By adopting this approach, we make our code more streamlined and intuitive, which could potentially aid in better understanding and maintenance of the codebase.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n100:         if (msgType == MT_ETH_TRANSFER) {\n101:             payload = abi.encode(msgType, msg.sender, _toAddress, deliverEth);\n102:         } else {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L100-L102"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Imports could be organized more systematically",
      "description": "The contract used interfaces should be imported first, followed by all other files. The examples below do not follow this layout.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n6: import {IUTB} from \"../interfaces/IUTB.sol\";\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L6-L6"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/UniSwapper.sol\n\n11: import {IV3SwapRouter} from \"@uniswap/swap-contracts/interfaces/IV3SwapRouter.sol\";\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/UniSwapper.sol#L11-L11"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n9: import {IDecentBridgeExecutor} from \"./interfaces/IDecentBridgeExecutor.sol\";\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L9-L9"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentBridgeExecutor.sol\n\n6: import {IDecentBridgeExecutor} from \"./interfaces/IDecentBridgeExecutor.sol\";\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentBridgeExecutor.sol#L6-L6"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Inconsistent spacing in comments",
      "description": "Some lines use `// x` and some use `//x`. The instances below point out the usages that don't follow the majority, within each file",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n171:             getDstChainId(additionalArgs), //lzBridgeData._dstChainId, // send to LayerZero chainId\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L171-L171"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n172:             getSrcPoolId(additionalArgs), //lzBridgeData._srcPoolId, // source pool id\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L172-L172"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n173:             getDstPoolId(additionalArgs), //lzBridgeData._dstPoolId, // dst pool id\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L173-L173"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/UniSwapper.sol\n\n153:                 //deadline: block.timestamp,\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/UniSwapper.sol#L153-L153"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n190:             payload, //payload (will have recipients address)\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L190-L190"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Large numeric literals should use underscores for readability",
      "description": " ",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n176:             (amt2Bridge * (10000 - SG_FEE_BPS)) / 10000, // the min qty you would accept on the destination, fee is 6 bips\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L176-L176"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n176:             (amt2Bridge * (10000 - SG_FEE_BPS)) / 10000, // the min qty you would accept on the destination, fee is 6 bips\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L176-L176"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n96:         uint256 GAS_FOR_RELAY = 100000;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L96-L96"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Long functions should be refactored into multiple, smaller, functions",
      "description": " ",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "\n\n```solidity\n\nFile: src/UTB.sol\n\n207:     function approveAndCheckIfNative(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTB.sol#L207-L207"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n148:     function _bridgeWithPayload(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L148-L148"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n237:     function onOFTReceived(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L237-L237"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Long lines of code",
      "description": "Usually lines in source code are limited to [80](https://softwareengineering.stackexchange.com/questions/148677/why-is-80-characters-the-standard-limit-for-code-width) characters. Today's screens are much larger so it's reasonable to stretch this in some cases. The solidity style guide recommends a maximumum line length of [120 characters](https://docs.soliditylang.org/en/v0.8.17/style-guide.html#maximum-line-length), so the lines below should be split when they reach that length.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n176:             (amt2Bridge * (10000 - SG_FEE_BPS)) / 10000, // the min qty you would accept on the destination, fee is 6 bips\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L176-L176"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Missing event and or timelock for critical parameter change",
      "description": "Events help non-contract tools to track changes, and events prevent users from being surprised by changes",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "\n\n```solidity\n\nFile: src/UTB.sol\n\n28:     function setExecutor(address _executor) public onlyOwner {\n29:         executor = IUTBExecutor(_executor);\n30:     }\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTB.sol#L28-L30"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/UTB.sol\n\n36:     function setWrapped(address payable _wrapped) public onlyOwner {\n37:         wrapped = IWETH(_wrapped);\n38:     }\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTB.sol#L36-L38"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/UTB.sol\n\n44:     function setFeeCollector(address payable _feeCollector) public onlyOwner {\n45:         feeCollector = IUTBFeeCollector(_feeCollector);\n46:     }\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTB.sol#L44-L46"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/BaseAdapter.sol\n\n19:     function setBridgeExecutor(address _executor) public onlyOwner {\n20:         bridgeExecutor = _executor;\n21:     }\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/BaseAdapter.sol#L19-L21"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/DecentBridgeAdapter.sol\n\n26:     function setRouter(address _router) public onlyOwner {\n27:         router = IDecentEthRouter(payable(_router));\n28:     }\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/DecentBridgeAdapter.sol#L26-L28"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n33:     function setRouter(address _router) public onlyOwner {\n34:         router = IStargateRouter(_router);\n35:     }\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L33-L35"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n37:     function setStargateEth(address _sgEth) public onlyOwner {\n38:         stargateEth = _sgEth;\n39:     }\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L37-L39"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/UniSwapper.sol\n\n20:     function setRouter(address _router) public onlyOwner {\n21:         uniswap_router = _router;\n22:     }\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/UniSwapper.sol#L20-L22"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/UniSwapper.sol\n\n24:     function setWrapped(address payable _wrapped) public onlyOwner {\n25:         wrapped = _wrapped;\n26:     }\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/UniSwapper.sol#L24-L26"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n73:     function addDestinationBridge(\n74:         uint16 _dstChainId,\n75:         address _routerAddress\n76:     ) public onlyOwner {\n77:         destinationBridges[_dstChainId] = _routerAddress;\n78:     }\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L73-L78"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "File is missing NatSpec",
      "description": " ",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/BaseAdapter.sol\n\n0: \n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/BaseAdapter.sol#L0-L0"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/DecentBridgeAdapter.sol\n\n0: \n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/DecentBridgeAdapter.sol#L0-L0"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n0: \n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L0-L0"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/SwapParams.sol\n\n0: \n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/SwapParams.sol#L0-L0"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/UniSwapper.sol\n\n0: \n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/UniSwapper.sol#L0-L0"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Mixed usage of `int`/`uint` with `int256`/`uint256`",
      "description": "`int256`/`uint256` are the preferred type names (they're what are used for function signatures), so they should be used consistently",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "\n\n```solidity\n\nFile: src/UTB.sol\n\n284:         uint bridgeFee,\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTB.sol#L284-L284"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/UTB.sol\n\n234:             uint value = 0;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTB.sol#L234-L234"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/UTBExecutor.sol\n\n24:         uint amount,\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTBExecutor.sol#L24-L24"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/UTBExecutor.sol\n\n46:         uint amount,\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTBExecutor.sol#L46-L46"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/UTBExecutor.sol\n\n48:         uint extraNative\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTBExecutor.sol#L48-L48"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/UTBExecutor.sol\n\n59:         uint initBalance = IERC20(token).balanceOf(address(this));\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTBExecutor.sol#L59-L59"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/UTBExecutor.sol\n\n73:         uint remainingBalance = IERC20(token).balanceOf(address(this)) -\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTBExecutor.sol#L73-L73"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/DecentBridgeAdapter.sol\n\n50:     ) public view returns (uint nativeFee, uint zroFee) {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/DecentBridgeAdapter.sol#L50-L50"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/DecentBridgeAdapter.sol\n\n50:     ) public view returns (uint nativeFee, uint zroFee) {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/DecentBridgeAdapter.sol#L50-L50"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n103:     ) private view returns (uint value) {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L103-L103"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n154:     function getDestAdapter(uint chainId) private view returns (address dstAddr) {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L154-L154"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/UniSwapper.sol\n\n43:     function _refundUser(address user, address token, uint amount) private {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/UniSwapper.sol#L43-L43"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/UniSwapper.sol\n\n50:         uint amount\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/UniSwapper.sol#L50-L50"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/UniSwapper.sol\n\n115:         uint amt2Recipient = swapParams.direction == SwapDirection.EXACT_OUT\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/UniSwapper.sol#L115-L115"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n117:         uint _amount,\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L117-L117"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n121:     ) public view returns (uint nativeFee, uint zroFee) {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L121-L121"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n121:     ) public view returns (uint nativeFee, uint zroFee) {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L121-L121"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n152:         uint _amount,\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L152-L152"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n200:         uint _amount,\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L200-L200"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n221:         uint _amount,\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L221-L221"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n242:         uint _amount,\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L242-L242"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n176:         uint gasValue;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L176-L176"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Consider using named mappings",
      "description": "Consider using [named mappings](https://ethereum.stackexchange.com/a/145555) to make it easier to understand the purpose of each mapping",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "\n\n```solidity\n\nFile: src/UTB.sol\n\n21:     mapping(uint8 => address) public swappers;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTB.sol#L21-L21"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/UTB.sol\n\n22:     mapping(uint8 => address) public bridgeAdapters;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTB.sol#L22-L22"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/DecentBridgeAdapter.sol\n\n14:     mapping(uint256 => address) public destinationBridgeAdapter;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/DecentBridgeAdapter.sol#L14-L14"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/DecentBridgeAdapter.sol\n\n16:     mapping(uint256 => uint16) lzIdLookup;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/DecentBridgeAdapter.sol#L16-L16"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/DecentBridgeAdapter.sol\n\n17:     mapping(uint16 => uint256) chainIdLookup;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/DecentBridgeAdapter.sol#L17-L17"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n25:     mapping(uint256 => address) public destinationBridgeAdapter;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L25-L25"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n26:     mapping(uint256 => uint16) lzIdLookup;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L26-L26"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n27:     mapping(uint16 => uint256) chainIdLookup;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L27-L27"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n24:     mapping(uint16 => address) public destinationBridges;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L24-L24"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n25:     mapping(address => uint256) public balanceOf;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L25-L25"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Consider using later versions of solidity for more cappabilities",
      "description": "Consider using solidity 0.8.18 or later to benefit from multiple things including the named mappings [named mappings](https://ethereum.stackexchange.com/a/145555) to make it easier to understand the purpose of each mapping",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "\n\n```solidity\n\nFile: src/UTB.sol\n\n2: pragma solidity ^0.8.0;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTB.sol#L2-L2"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/UTBExecutor.sol\n\n2: pragma solidity ^0.8.0;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTBExecutor.sol#L2-L2"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/BaseAdapter.sol\n\n2: pragma solidity ^0.8.0;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/BaseAdapter.sol#L2-L2"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/DecentBridgeAdapter.sol\n\n2: pragma solidity ^0.8.0;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/DecentBridgeAdapter.sol#L2-L2"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n2: pragma solidity ^0.8.0;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L2-L2"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/SwapParams.sol\n\n2: pragma solidity ^0.8.0;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/SwapParams.sol#L2-L2"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/UniSwapper.sol\n\n2: pragma solidity ^0.8.0;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/UniSwapper.sol#L2-L2"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n2: pragma solidity ^0.8.13;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L2-L2"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentBridgeExecutor.sol\n\n2: pragma solidity ^0.8.0;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentBridgeExecutor.sol#L2-L2"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Some error strings are not descriptive",
      "description": "Consider adding more detail to these error strings",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/UniSwapper.sol\n\n//@audit This message need more details : router not set\n96:         require(uniswap_router != address(0), \"router not set\");\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/UniSwapper.sol#L96-L96"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Use of `override` is unnecessary",
      "description": "Starting with Solidity version [0.8.8](https://docs.soliditylang.org/en/v0.8.20/contracts.html#function-overriding), using the `override` keyword when the function solely overrides an interface function, and the function doesn't exist in multiple base contracts, is unnecessary.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n183:     function sgReceive(\n184:         uint16, // _srcChainid\n185:         bytes memory, // _srcAddress\n186:         uint256, // _nonce\n187:         address, // _token\n188:         uint256, // amountLD\n189:         bytes memory payload\n190:     ) external override onlyExecutor {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L183-L190"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n237:     function onOFTReceived(\n238:         uint16 _srcChainId,\n239:         bytes calldata,\n240:         uint64,\n241:         bytes32,\n242:         uint _amount,\n243:         bytes memory _payload\n244:     ) external override onlyLzApp {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L237-L244"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Functions which are either private or internal should have a preceding _ in their name",
      "description": "Add a preceding underscore to the function name, take care to refactor where there functions are called ",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "\n\n```solidity\n\nFile: src/UTB.sol\n\n52:     function performSwap(\n53:         SwapInstructions memory swapInstructions\n54:     ) private returns (address tokenOut, uint256 amountOut) {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTB.sol#L52-L54"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/UTB.sol\n\n63:     function performSwap(\n64:         SwapInstructions memory swapInstructions,\n65:         bool retrieveTokenIn\n66:     ) private returns (address tokenOut, uint256 amountOut) {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTB.sol#L63-L66"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/UTB.sol\n\n168:     function swapAndModifyPostBridge(\n169:         BridgeInstructions memory instructions\n170:     )\n171:         private\n172:         returns (\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTB.sol#L168-L172"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/UTB.sol\n\n207:     function approveAndCheckIfNative(\n208:         BridgeInstructions memory instructions,\n209:         uint256 amt2Bridge\n210:     ) private returns (bool) {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTB.sol#L207-L210"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/UTB.sol\n\n282:     function callBridge(\n283:         uint256 amt2Bridge,\n284:         uint bridgeFee,\n285:         BridgeInstructions memory instructions\n286:     ) private returns (bytes memory) {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTB.sol#L282-L286"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n100:     function getValue(\n101:         bytes calldata additionalArgs,\n102:         uint256 amt2Bridge\n103:     ) private view returns (uint value) {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L100-L103"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n114:     function getLzTxObj(\n115:         bytes calldata additionalArgs\n116:     ) private pure returns (IStargateRouter.lzTxObj memory) {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L114-L116"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n124:     function getDstChainId(\n125:         bytes calldata additionalArgs\n126:     ) private pure returns (uint16) {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L124-L126"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n134:     function getSrcPoolId(\n135:         bytes calldata additionalArgs\n136:     ) private pure returns (uint120) {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L134-L136"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n144:     function getDstPoolId(\n145:         bytes calldata additionalArgs\n146:     ) private pure returns (uint120) {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L144-L146"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n154:     function getDestAdapter(uint chainId) private view returns (address dstAddr) {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L154-L154"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n163:     function callBridge(\n164:         uint256 amt2Bridge,\n165:         uint256 dstChainId,\n166:         bytes memory bridgePayload,\n167:         bytes calldata additionalArgs,\n168:         address payable refund\n169:     ) private {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L163-L169"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Private and internal state variables should have a preceding _ in their name unless they are constants",
      "description": "Add a preceding underscore to the state variable name, take care to refactor where there variables are read/wrote",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "\n\n```solidity\n\nFile: src/UTB.sol\n\n18:     IUTBExecutor executor;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTB.sol#L18-L18"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/UTB.sol\n\n19:     IUTBFeeCollector feeCollector;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTB.sol#L19-L19"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/UTB.sol\n\n20:     IWETH wrapped;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTB.sol#L20-L20"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/DecentBridgeAdapter.sol\n\n16:     mapping(uint256 => uint16) lzIdLookup;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/DecentBridgeAdapter.sol#L16-L16"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/DecentBridgeAdapter.sol\n\n17:     mapping(uint16 => uint256) chainIdLookup;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/DecentBridgeAdapter.sol#L17-L17"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/DecentBridgeAdapter.sol\n\n18:     bool gasIsEth;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/DecentBridgeAdapter.sol#L18-L18"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/DecentBridgeAdapter.sol\n\n19:     address bridgeToken;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/DecentBridgeAdapter.sol#L19-L19"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n26:     mapping(uint256 => uint16) lzIdLookup;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L26-L26"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n27:     mapping(uint16 => uint256) chainIdLookup;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L27-L27"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentBridgeExecutor.sol\n\n9:     IWETH weth;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentBridgeExecutor.sol#L9-L9"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "`public` functions not called by the contract should be declared `external` instead",
      "description": "Contracts [are allowed](https://docs.soliditylang.org/en/latest/contracts.html#function-overriding) to override their parents' functions and change the visibility from `external` to `public`.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "\n\n```solidity\n\nFile: src/UTB.sol\n\n28:     function setExecutor(address _executor) public onlyOwner {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTB.sol#L28-L28"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/UTB.sol\n\n36:     function setWrapped(address payable _wrapped) public onlyOwner {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTB.sol#L36-L36"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/UTB.sol\n\n44:     function setFeeCollector(address payable _feeCollector) public onlyOwner {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTB.sol#L44-L44"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/UTB.sol\n\n108:     function swapAndExecute(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTB.sol#L108-L108"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/UTB.sol\n\n259:     function bridgeAndExecute(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTB.sol#L259-L259"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/UTB.sol\n\n311:     function receiveFromBridge(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTB.sol#L311-L311"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/UTB.sol\n\n325:     function registerSwapper(address swapper) public onlyOwner {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTB.sol#L325-L325"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/UTB.sol\n\n334:     function registerBridge(address bridge) public onlyOwner {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTB.sol#L334-L334"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/BaseAdapter.sol\n\n19:     function setBridgeExecutor(address _executor) public onlyOwner {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/BaseAdapter.sol#L19-L19"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/DecentBridgeAdapter.sol\n\n26:     function setRouter(address _router) public onlyOwner {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/DecentBridgeAdapter.sol#L26-L26"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/DecentBridgeAdapter.sol\n\n30:     function getId() public pure returns (uint8) {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/DecentBridgeAdapter.sol#L30-L30"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/DecentBridgeAdapter.sol\n\n34:     function registerRemoteBridgeAdapter(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/DecentBridgeAdapter.sol#L34-L34"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/DecentBridgeAdapter.sol\n\n44:     function estimateFees(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/DecentBridgeAdapter.sol#L44-L44"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/DecentBridgeAdapter.sol\n\n81:     function bridge(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/DecentBridgeAdapter.sol#L81-L81"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/DecentBridgeAdapter.sol\n\n127:     function receiveFromBridge(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/DecentBridgeAdapter.sol#L127-L127"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n33:     function setRouter(address _router) public onlyOwner {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L33-L33"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n37:     function setStargateEth(address _sgEth) public onlyOwner {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L37-L37"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n41:     function getId() public pure returns (uint8) {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L41-L41"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n45:     function registerRemoteBridgeAdapter(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L45-L45"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n69:     function bridge(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L69-L69"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/UniSwapper.sol\n\n20:     function setRouter(address _router) public onlyOwner {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/UniSwapper.sol#L20-L20"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/UniSwapper.sol\n\n24:     function setWrapped(address payable _wrapped) public onlyOwner {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/UniSwapper.sol#L24-L24"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/UniSwapper.sol\n\n28:     function getId() public pure returns (uint8) {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/UniSwapper.sol#L28-L28"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n68:     function registerDcntEth(address _addr) public onlyOwner {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L68-L68"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n73:     function addDestinationBridge(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L73-L73"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n113:     function estimateSendAndCallFee(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L113-L113"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n197:     function bridgeWithPayload(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L197-L197"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n218:     function bridge(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L218-L218"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n285:     function redeemEth(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L285-L285"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n294:     function redeemWeth(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L294-L294"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n302:     function addLiquidityEth()\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L302-L302"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n313:     function removeLiquidityEth(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L313-L313"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n322:     function addLiquidityWeth(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L322-L322"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n330:     function removeLiquidityWeth(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L330-L330"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentBridgeExecutor.sol\n\n68:     function execute(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentBridgeExecutor.sol#L68-L68"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Remove `forge-std` import",
      "description": "Logging and debugging libraries such as forge-std are crucial tools during the development phase of a smart contract, as they provide critical insights into the execution of the contract. However, it's essential to remove or disable these libraries in the production version of your contract. Leaving such libraries active in the final version can lead to unnecessary gas costs, as logging operations consume gas, and it can potentially expose sensitive internal state information.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "\n\n```solidity\n\nFile: src/UTB.sol\n\n7: import {IERC20} from \"forge-std/interfaces/IERC20.sol\";\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTB.sol#L7-L7"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/UTBExecutor.sol\n\n4: import {IERC20} from \"forge-std/interfaces/IERC20.sol\";\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTBExecutor.sol#L4-L4"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/DecentBridgeAdapter.sol\n\n4: import {IERC20} from \"forge-std/interfaces/IERC20.sol\";\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/DecentBridgeAdapter.sol#L4-L4"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n4: import {IERC20} from \"forge-std/interfaces/IERC20.sol\";\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L4-L4"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/UniSwapper.sol\n\n7: import {IERC20} from \"forge-std/interfaces/IERC20.sol\";\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/UniSwapper.sol#L7-L7"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Setters should prevent re-setting of the same value",
      "description": "This especially problematic when the setter also emits the same value, which may be confusing to offline parsers",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/BaseAdapter.sol\n\n//@audit `bridgeExecutor` and `_executor` are never checked for the same value setting\n19:     function setBridgeExecutor(address _executor) public onlyOwner {\n20:         bridgeExecutor = _executor;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/BaseAdapter.sol#L19-L20"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n//@audit `stargateEth` and `_sgEth` are never checked for the same value setting\n37:     function setStargateEth(address _sgEth) public onlyOwner {\n38:         stargateEth = _sgEth;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L37-L38"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/UniSwapper.sol\n\n//@audit `uniswap_router` and `_router` are never checked for the same value setting\n20:     function setRouter(address _router) public onlyOwner {\n21:         uniswap_router = _router;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/UniSwapper.sol#L20-L21"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/UniSwapper.sol\n\n//@audit `wrapped` and `_wrapped` are never checked for the same value setting\n24:     function setWrapped(address payable _wrapped) public onlyOwner {\n25:         wrapped = _wrapped;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/UniSwapper.sol#L24-L25"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "NatSpec `@return` argument is missing",
      "description": " ",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "\n\n```solidity\n\nFile: src/UTB.sol\n\n// @audit the @return is missing\n @dev Performs a swap with a default setting to retrieve ERC20.\n @param swapInstructions The swapper ID and calldata to execute a swap.\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTB.sol#L52-L1"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/UTB.sol\n\n// @audit the @return is missing\n @dev Performs a swap with the requested swapper and swap calldata.\n @param swapInstructions The swapper ID and calldata to execute a swap.\n @param retrieveTokenIn Flag indicating whether to transfer ERC20 for the swap.\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTB.sol#L63-L1"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/UTB.sol\n\n// @audit the @return is missing\n @dev Performs the pre bridge swap and modifies the post bridge swap to utilize the bridged amount.\n @param instructions The bridge data, token swap data, and payment transaction payload.\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTB.sol#L168-L1"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/UTB.sol\n\n// @audit the @return is missing\n @dev Checks if the bridge token is native, and approves the bridge adapter to transfer ERC20 if required.\n @param instructions The bridge data, token swap data, and payment transaction payload.\n @param amt2Bridge The amount of the bridge token being transferred to the bridge adapter.\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTB.sol#L207-L1"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/UTB.sol\n\n// @audit the @return is missing\n @dev Bridges funds in native or ERC20 and a payment transaction payload to the destination chain\n @param instructions The bridge data, token swap data, and payment transaction payload.\n @param fees The bridge fee in native, as well as utb fee token and amount.\n @param signature The ECDSA signature to verify the fee structure.\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTB.sol#L259-L1"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/UTB.sol\n\n// @audit the @return is missing\n @dev Calls the bridge adapter to bridge funds, and approves the bridge adapter to transfer ERC20 if required.\n @param amt2Bridge The amount of the bridge token being bridged via the bridge adapter.\n @param bridgeFee The fee being transferred to the bridge adapter and finally to the bridge.\n @param instructions The bridge data, token swap data, and payment transaction payload.\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTB.sol#L282-L1"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Consider using `SafeTransferLib.safeTransferETH()` or `Address.sendValue()` for clearer semantic meaning",
      "description": "These Functions indicate their purpose with their name more clearly than using low-level calls.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "\n\n```solidity\n\nFile: src/UTBExecutor.sol\n\n52:             (success, ) = target.call{value: amount}(payload);\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTBExecutor.sol#L52-L52"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/UTBExecutor.sol\n\n70:             (success, ) = target.call(payload);\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTBExecutor.sol#L70-L70"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/UTBExecutor.sol\n\n65:             (success, ) = target.call{value: extraNative}(payload);\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTBExecutor.sol#L65-L65"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/UTBExecutor.sol\n\n54:                 (refund.call{value: amount}(\"\"));\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTBExecutor.sol#L54-L54"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/UTBExecutor.sol\n\n67:                 (refund.call{value: extraNative}(\"\"));\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTBExecutor.sol#L67-L67"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentBridgeExecutor.sol\n\n33:         (bool success, ) = target.call(callPayload);\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentBridgeExecutor.sol#L33-L33"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentBridgeExecutor.sol\n\n61:         (bool success, ) = target.call{value: amount}(callPayload);\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentBridgeExecutor.sol#L61-L61"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Polymorphic functions make security audits more time-consuming and error-prone",
      "description": "The instances below point to one of two functions with the same name. Consider naming each function differently, in order to make code navigation and analysis easier.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "\n\n```solidity\n\nFile: src/UTBExecutor.sol\n\n41:     function execute(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTBExecutor.sol#L41-L41"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Large multiples of ten should use scientific notation (e.g. `1e6`) rather than decimal literals (e.g. `1000000`), for readability",
      "description": "While the compiler knows to optimize away the exponentiation, it's still better coding practice to use idioms that do not require compiler optimization, if they exist",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n//@audit `10000`\n176:             (amt2Bridge * (10000 - SG_FEE_BPS)) / 10000, // the min qty you would accept on the destination, fee is 6 bips\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L176-L176"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n//@audit `10000`\n176:             (amt2Bridge * (10000 - SG_FEE_BPS)) / 10000, // the min qty you would accept on the destination, fee is 6 bips\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L176-L176"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n//@audit `100000`\n96:         uint256 GAS_FOR_RELAY = 100000;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L96-L96"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Empty `receive()`/`payable fallback()` function does not authorize requests",
      "description": "If the intention is for the Ether to be used, the function should call another function, otherwise it should revert (e.g. `require(msg.sender == address(weth))`). Having no access control on the function means that someone may send Ether to the contract, and have no way to get anything back out, which is a loss of funds. If the concern is having to spend a small amount of gas to check the sender against an immutable address, the code should at least have a function to rescue unused Ether.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "\n\n```solidity\n\nFile: src/UTB.sol\n\n339:     receive() external payable {}\n340: \n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTB.sol#L339-L340"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/UTB.sol\n\n341:     fallback() external payable {}\n342: }\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTB.sol#L341-L342"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/DecentBridgeAdapter.sol\n\n156:     receive() external payable {}\n157: \n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/DecentBridgeAdapter.sol#L156-L157"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/DecentBridgeAdapter.sol\n\n158:     fallback() external payable {}\n159: }\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/DecentBridgeAdapter.sol#L158-L159"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n218:     receive() external payable {}\n219: \n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L218-L219"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n220:     fallback() external payable {}\n221: }\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L220-L221"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/UniSwapper.sol\n\n171:     receive() external payable {}\n172: \n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/UniSwapper.sol#L171-L172"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/UniSwapper.sol\n\n173:     fallback() external payable {}\n174: }\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/UniSwapper.sol#L173-L174"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n337:     receive() external payable {}\n338: \n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L337-L338"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n339:     fallback() external payable {}\n340: }\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L339-L340"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentBridgeExecutor.sol\n\n85:     receive() external payable {}\n86: \n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentBridgeExecutor.sol#L85-L86"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentBridgeExecutor.sol\n\n88:     fallback() external payable {}\n89: }\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentBridgeExecutor.sol#L88-L89"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "State variables should have `Natspec` comments",
      "description": "Consider adding some `Natspec` comments on critical state variables to explain what they are supposed to do: this will help for future code reviews.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "\n\n```solidity\n\nFile: src/UTB.sol\n\n//@audit executor need comments\n18:     IUTBExecutor executor;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTB.sol#L18-L18"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/UTB.sol\n\n//@audit feeCollector need comments\n19:     IUTBFeeCollector feeCollector;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTB.sol#L19-L19"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/UTB.sol\n\n//@audit wrapped need comments\n20:     IWETH wrapped;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTB.sol#L20-L20"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/UTB.sol\n\n//@audit swappers need comments\n21:     mapping(uint8 => address) public swappers;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTB.sol#L21-L21"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/UTB.sol\n\n//@audit bridgeAdapters need comments\n22:     mapping(uint8 => address) public bridgeAdapters;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTB.sol#L22-L22"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/BaseAdapter.sol\n\n//@audit bridgeExecutor need comments\n7:     address public bridgeExecutor;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/BaseAdapter.sol#L7-L7"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/DecentBridgeAdapter.sol\n\n//@audit BRIDGE_ID need comments\n13:     uint8 public constant BRIDGE_ID = 0;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/DecentBridgeAdapter.sol#L13-L13"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/DecentBridgeAdapter.sol\n\n//@audit destinationBridgeAdapter need comments\n14:     mapping(uint256 => address) public destinationBridgeAdapter;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/DecentBridgeAdapter.sol#L14-L14"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/DecentBridgeAdapter.sol\n\n//@audit router need comments\n15:     IDecentEthRouter public router;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/DecentBridgeAdapter.sol#L15-L15"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/DecentBridgeAdapter.sol\n\n//@audit lzIdLookup need comments\n16:     mapping(uint256 => uint16) lzIdLookup;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/DecentBridgeAdapter.sol#L16-L16"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/DecentBridgeAdapter.sol\n\n//@audit chainIdLookup need comments\n17:     mapping(uint16 => uint256) chainIdLookup;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/DecentBridgeAdapter.sol#L17-L17"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/DecentBridgeAdapter.sol\n\n//@audit gasIsEth need comments\n18:     bool gasIsEth;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/DecentBridgeAdapter.sol#L18-L18"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/DecentBridgeAdapter.sol\n\n//@audit bridgeToken need comments\n19:     address bridgeToken;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/DecentBridgeAdapter.sol#L19-L19"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n//@audit BRIDGE_ID need comments\n22:     uint8 public constant BRIDGE_ID = 1;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L22-L22"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n//@audit SG_FEE_BPS need comments\n23:     uint8 public constant SG_FEE_BPS = 6;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L23-L23"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n//@audit stargateEth need comments\n24:     address public stargateEth;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L24-L24"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n//@audit destinationBridgeAdapter need comments\n25:     mapping(uint256 => address) public destinationBridgeAdapter;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L25-L25"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n//@audit lzIdLookup need comments\n26:     mapping(uint256 => uint16) lzIdLookup;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L26-L26"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n//@audit chainIdLookup need comments\n27:     mapping(uint16 => uint256) chainIdLookup;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L27-L27"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n//@audit router need comments\n31:     IStargateRouter public router;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L31-L31"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/SwapParams.sol\n\n//@audit EXACT_IN need comments\n5:     uint8 constant EXACT_IN = 0;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/SwapParams.sol#L5-L5"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/SwapParams.sol\n\n//@audit EXACT_OUT need comments\n6:     uint8 constant EXACT_OUT = 1;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/SwapParams.sol#L6-L6"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/UniSwapper.sol\n\n//@audit SWAPPER_ID need comments\n16:     uint8 public constant SWAPPER_ID = 0;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/UniSwapper.sol#L16-L16"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/UniSwapper.sol\n\n//@audit uniswap_router need comments\n17:     address public uniswap_router;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/UniSwapper.sol#L17-L17"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/UniSwapper.sol\n\n//@audit wrapped need comments\n18:     address payable public wrapped;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/UniSwapper.sol#L18-L18"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n//@audit weth need comments\n13:     IWETH public weth;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L13-L13"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n//@audit dcntEth need comments\n14:     IDcntEth public dcntEth;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L14-L14"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n//@audit executor need comments\n15:     IDecentBridgeExecutor public executor;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L15-L15"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n//@audit MT_ETH_TRANSFER need comments\n17:     uint8 public constant MT_ETH_TRANSFER = 0;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L17-L17"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n//@audit MT_ETH_TRANSFER_WITH_PAYLOAD need comments\n18:     uint8 public constant MT_ETH_TRANSFER_WITH_PAYLOAD = 1;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L18-L18"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n//@audit PT_SEND_AND_CALL need comments\n20:     uint16 public constant PT_SEND_AND_CALL = 1;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L20-L20"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n//@audit gasCurrencyIsEth need comments\n22:     bool public gasCurrencyIsEth; // for chains that use ETH as gas currency\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L22-L22"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n//@audit destinationBridges need comments\n24:     mapping(uint16 => address) public destinationBridges;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L24-L24"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n//@audit balanceOf need comments\n25:     mapping(address => uint256) public balanceOf;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L25-L25"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentBridgeExecutor.sol\n\n//@audit weth need comments\n9:     IWETH weth;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentBridgeExecutor.sol#L9-L9"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentBridgeExecutor.sol\n\n//@audit gasCurrencyIsEth need comments\n10:     bool public gasCurrencyIsEth; // for chains that use ETH as gas currency\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentBridgeExecutor.sol#L10-L10"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Contracts should have full test coverage",
      "description": "While 100% code coverage does not guarantee that there are no bugs, it often will catch easy-to-find bugs, and will ensure that there are fewer regressions when the code invariably has to be modified. Furthermore, in order to get full coverage, code authors will often have to re-organize their code so that it is more modular, so that each component can be tested separately, which reduces interdependencies between modules and layers, and makes for code that is easier to reason about and audit.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "\n\n```solidity\n\nFile: src/UTB.sol\n\n@audit Multiple files\n1: \n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTB.sol#L1-L1"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "[NatSpec] Natspec `@title` is missing from `contract`",
      "description": " ",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "\n\n```solidity\n\nFile: src/UTB.sol\n\n15: contract UTB is Owned {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTB.sol#L15-L15"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/UTBExecutor.sol\n\n7: contract UTBExecutor is Owned {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTBExecutor.sol#L7-L7"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/BaseAdapter.sol\n\n6: contract BaseAdapter is UTBOwned {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/BaseAdapter.sol#L6-L6"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/DecentBridgeAdapter.sol\n\n12: contract DecentBridgeAdapter is BaseAdapter, IBridgeAdapter {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/DecentBridgeAdapter.sol#L12-L12"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n17: contract StargateBridgeAdapter is\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L17-L17"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/SwapParams.sol\n\n4: library SwapDirection {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/SwapParams.sol#L4-L4"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/UniSwapper.sol\n\n13: contract UniSwapper is UTBOwned, ISwapper {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/UniSwapper.sol#L13-L13"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n12: contract DecentEthRouter is IDecentEthRouter, IOFTReceiverV2, Owned {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L12-L12"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentBridgeExecutor.sol\n\n8: contract DecentBridgeExecutor is IDecentBridgeExecutor, Owned {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentBridgeExecutor.sol#L8-L8"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Top level pragma declarations should be separated by two blank lines",
      "description": " ",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "\n\n```solidity\n\nFile: src/UTB.sol\n\n2: pragma solidity ^0.8.0;\n3: \n4: import {Owned} from \"solmate/auth/Owned.sol\";\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTB.sol#L2-L4"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/UTBExecutor.sol\n\n2: pragma solidity ^0.8.0;\n3: \n4: import {IERC20} from \"forge-std/interfaces/IERC20.sol\";\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTBExecutor.sol#L2-L4"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/UTBExecutor.sol\n\n5: import {Owned} from \"solmate/auth/Owned.sol\";\n6: \n7: contract UTBExecutor is Owned {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTBExecutor.sol#L5-L7"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/BaseAdapter.sol\n\n2: pragma solidity ^0.8.0;\n3: \n4: import {UTBOwned} from \"../UTBOwned.sol\";\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/BaseAdapter.sol#L2-L4"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/BaseAdapter.sol\n\n4: import {UTBOwned} from \"../UTBOwned.sol\";\n5: \n6: contract BaseAdapter is UTBOwned {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/BaseAdapter.sol#L4-L6"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/DecentBridgeAdapter.sol\n\n2: pragma solidity ^0.8.0;\n3: \n4: import {IERC20} from \"forge-std/interfaces/IERC20.sol\";\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/DecentBridgeAdapter.sol#L2-L4"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/DecentBridgeAdapter.sol\n\n10: import {BaseAdapter} from \"./BaseAdapter.sol\";\n11: \n12: contract DecentBridgeAdapter is BaseAdapter, IBridgeAdapter {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/DecentBridgeAdapter.sol#L10-L12"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n2: pragma solidity ^0.8.0;\n3: \n4: import {IERC20} from \"forge-std/interfaces/IERC20.sol\";\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L2-L4"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/SwapParams.sol\n\n2: pragma solidity ^0.8.0;\n3: \n4: library SwapDirection {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/SwapParams.sol#L2-L4"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/UniSwapper.sol\n\n2: pragma solidity ^0.8.0;\n3: \n4: import {UTBOwned} from \"../UTBOwned.sol\";\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/UniSwapper.sol#L2-L4"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/UniSwapper.sol\n\n11: import {IV3SwapRouter} from \"@uniswap/swap-contracts/interfaces/IV3SwapRouter.sol\";\n12: \n13: contract UniSwapper is UTBOwned, ISwapper {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/UniSwapper.sol#L11-L13"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n2: pragma solidity ^0.8.13;\n3: \n4: import {IWETH} from \"./interfaces/IWETH.sol\";\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L2-L4"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n10: import {IDecentEthRouter} from \"./interfaces/IDecentEthRouter.sol\";\n11: \n12: contract DecentEthRouter is IDecentEthRouter, IOFTReceiverV2, Owned {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L10-L12"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentBridgeExecutor.sol\n\n2: pragma solidity ^0.8.0;\n3: \n4: import {IWETH} from \"./interfaces/IWETH.sol\";\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentBridgeExecutor.sol#L2-L4"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentBridgeExecutor.sol\n\n6: import {IDecentBridgeExecutor} from \"./interfaces/IDecentBridgeExecutor.sol\";\n7: \n8: contract DecentBridgeExecutor is IDecentBridgeExecutor, Owned {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentBridgeExecutor.sol#L6-L8"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Critical functions should be a two step procedure",
      "description": "Critical functions in Solidity contracts should follow a two-step procedure to enhance security, minimize human error, and ensure proper access control. By dividing sensitive operations into distinct phases, such as initiation and confirmation, developers can introduce a safeguard against unintended actions or unauthorized access.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n73:     function addDestinationBridge(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L73-L73"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n302:     function addLiquidityEth()\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L302-L302"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n313:     function removeLiquidityEth(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L313-L313"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/UTB.sol\n\n28:     function setExecutor(address _executor) public onlyOwner {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTB.sol#L28-L28"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/UTB.sol\n\n36:     function setWrapped(address payable _wrapped) public onlyOwner {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTB.sol#L36-L36"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/UTB.sol\n\n44:     function setFeeCollector(address payable _feeCollector) public onlyOwner {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTB.sol#L44-L44"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/BaseAdapter.sol\n\n19:     function setBridgeExecutor(address _executor) public onlyOwner {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/BaseAdapter.sol#L19-L19"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/DecentBridgeAdapter.sol\n\n26:     function setRouter(address _router) public onlyOwner {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/DecentBridgeAdapter.sol#L26-L26"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n33:     function setRouter(address _router) public onlyOwner {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L33-L33"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n37:     function setStargateEth(address _sgEth) public onlyOwner {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L37-L37"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/UniSwapper.sol\n\n20:     function setRouter(address _router) public onlyOwner {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/UniSwapper.sol#L20-L20"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/UniSwapper.sol\n\n24:     function setWrapped(address payable _wrapped) public onlyOwner {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/UniSwapper.sol#L24-L24"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "uint variables should have the bit size defined explicitly",
      "description": "Instead of using uint to declare uint258, explicitly define uint258 to ensure there is no confusion",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "\n\n```solidity\n\nFile: src/UTB.sol\n\n//@audit `bridgeFee`\n284:         uint bridgeFee,\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTB.sol#L284-L284"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/UTB.sol\n\n//@audit `value`\n234:             uint value = 0;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTB.sol#L234-L234"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/UTBExecutor.sol\n\n//@audit `amount`\n24:         uint amount,\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTBExecutor.sol#L24-L24"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/UTBExecutor.sol\n\n//@audit `amount`\n46:         uint amount,\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTBExecutor.sol#L46-L46"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/UTBExecutor.sol\n\n//@audit `extraNative`\n48:         uint extraNative\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTBExecutor.sol#L48-L48"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/UTBExecutor.sol\n\n//@audit `initBalance`\n59:         uint initBalance = IERC20(token).balanceOf(address(this));\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTBExecutor.sol#L59-L59"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/UTBExecutor.sol\n\n//@audit `remainingBalance`\n73:         uint remainingBalance = IERC20(token).balanceOf(address(this)) -\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTBExecutor.sol#L73-L73"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/DecentBridgeAdapter.sol\n\n//@audit `nativeFee`\n50:     ) public view returns (uint nativeFee, uint zroFee) {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/DecentBridgeAdapter.sol#L50-L50"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/DecentBridgeAdapter.sol\n\n//@audit `zroFee`\n50:     ) public view returns (uint nativeFee, uint zroFee) {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/DecentBridgeAdapter.sol#L50-L50"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n//@audit `value`\n103:     ) private view returns (uint value) {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L103-L103"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n//@audit `chainId`\n154:     function getDestAdapter(uint chainId) private view returns (address dstAddr) {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L154-L154"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/UniSwapper.sol\n\n//@audit `amount`\n43:     function _refundUser(address user, address token, uint amount) private {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/UniSwapper.sol#L43-L43"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/UniSwapper.sol\n\n//@audit `amount`\n50:         uint amount\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/UniSwapper.sol#L50-L50"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/UniSwapper.sol\n\n//@audit `amt2Recipient`\n115:         uint amt2Recipient = swapParams.direction == SwapDirection.EXACT_OUT\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/UniSwapper.sol#L115-L115"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n//@audit `_amount`\n117:         uint _amount,\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L117-L117"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n//@audit `nativeFee`\n121:     ) public view returns (uint nativeFee, uint zroFee) {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L121-L121"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n//@audit `zroFee`\n121:     ) public view returns (uint nativeFee, uint zroFee) {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L121-L121"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n//@audit `_amount`\n152:         uint _amount,\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L152-L152"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n//@audit `_amount`\n200:         uint _amount,\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L200-L200"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n//@audit `_amount`\n221:         uint _amount,\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L221-L221"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n//@audit `_amount`\n242:         uint _amount,\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L242-L242"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n//@audit `gasValue`\n176:         uint gasValue;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L176-L176"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Uncommented fields in a struct",
      "description": "Consider adding comments for all the fields in a struct to improve the readability of the codebase.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/SwapParams.sol\n\n//@audit Add explanational comments to the following items `amountIn`, `amountOut`, `tokenIn`, `tokenOut`, `direction`, `path`, \n09: struct SwapParams {\n10:     uint256 amountIn;\n11:     uint256 amountOut;\n12:     address tokenIn;\n13:     address tokenOut;\n14:     uint8 direction;\n15:     // if direction is exactAmountIn\n16:     // then amount out will be the minimum amount out\n17:     // if direction is exactAmountOutA\n18:     // then amount in is maximum amount in\n19:     bytes path;\n20: }\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/SwapParams.sol#L9-L20"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Unused Import",
      "description": "Some files/Items are imported but never used",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n//@audit `UTBOwned` is not used\n5: import {UTBOwned} from \"../UTBOwned.sol\";\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L5-L5"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Missing upgradability functionality",
      "description": "At the begining of a project, there is always the need to modify of add something to the source code especialy if any vulnerability is discovered. Therefore, having such system is crusial at least at the first stages of the project",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "\n\n```solidity\n\nFile: src/UTB.sol\n\n1: // SPDX-License-Identifier: UNLICENSED\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTB.sol#L1-L1"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Cast to `bytes` or `bytes32` for clearer semantic meaning",
      "description": "Using a [cast](https://ethereum.stackexchange.com/questions/30912/how-to-compare-strings-in-solidity#answer-82739) on a single argument, rather than `abi.encodePacked()` makes the intended operation more clear, leading to less reviewer confusion.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n178:             abi.encodePacked(getDestAdapter(dstChainId)),\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L178-L178"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Constants should be defined rather than using magic numbers",
      "description": "Even [assembly](https://github.com/code-423n4/2022-05-opensea-seaport/blob/9d7ce4d08bf3c3010304a0476a785c70c0e90ae7/contracts/lib/TokenTransferrer.sol#L35-L39) can benefit from using readable constants instead of hex/numeric literals",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n//@audit Try to make a `constant` with `10000` value\n176:             (amt2Bridge * (10000 - SG_FEE_BPS)) / 10000, // the min qty you would accept on the destination, fee is 6 bips\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L176-L176"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n//@audit Try to make a `constant` with `10000` value\n176:             (amt2Bridge * (10000 - SG_FEE_BPS)) / 10000, // the min qty you would accept on the destination, fee is 6 bips\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L176-L176"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n//@audit Try to make a `constant` with `100000` value\n96:         uint256 GAS_FOR_RELAY = 100000;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L96-L96"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Use the latest solidity (prior to 0.8.20 if on L2s) for deployment",
      "description": "```\nWhen deploying contracts, you should use the latest released version of Solidity.Apart from exceptional cases, only the latest version receives security fixes.\n```\nhttps://docs.soliditylang.org/en/v0.8.20/",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "\n\n```solidity\n\nFile: src/UTB.sol\n\n2: pragma solidity ^0.8.0;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTB.sol#L2-L2"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/UTBExecutor.sol\n\n2: pragma solidity ^0.8.0;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTBExecutor.sol#L2-L2"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/BaseAdapter.sol\n\n2: pragma solidity ^0.8.0;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/BaseAdapter.sol#L2-L2"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/DecentBridgeAdapter.sol\n\n2: pragma solidity ^0.8.0;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/DecentBridgeAdapter.sol#L2-L2"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n2: pragma solidity ^0.8.0;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L2-L2"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/SwapParams.sol\n\n2: pragma solidity ^0.8.0;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/SwapParams.sol#L2-L2"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/UniSwapper.sol\n\n2: pragma solidity ^0.8.0;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/UniSwapper.sol#L2-L2"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n2: pragma solidity ^0.8.13;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L2-L2"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentBridgeExecutor.sol\n\n2: pragma solidity ^0.8.0;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentBridgeExecutor.sol#L2-L2"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Use a single file for system wide constants",
      "description": "Consider grouping all the system constants under a single file. This finding shows only the first constant for each file.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/DecentBridgeAdapter.sol\n\n13:     uint8 public constant BRIDGE_ID = 0;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/DecentBridgeAdapter.sol#L13-L13"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n22:     uint8 public constant BRIDGE_ID = 1;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L22-L22"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/SwapParams.sol\n\n5:     uint8 constant EXACT_IN = 0;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/SwapParams.sol#L5-L5"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/UniSwapper.sol\n\n16:     uint8 public constant SWAPPER_ID = 0;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/UniSwapper.sol#L16-L16"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n17:     uint8 public constant MT_ETH_TRANSFER = 0;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L17-L17"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Consider using SMTChecker",
      "description": "The SMTChecker is a valuable tool for Solidity developers as it helps detect potential vulnerabilities and logical errors in the contract's code. By utilizing Satisfiability Modulo Theories (SMT) solvers, it can reason about the potential states a contract can be in, and therefore, identify conditions that could lead to undesirable behavior. This automatic formal verification can catch issues that might otherwise be missed in manual code reviews or standard testing, enhancing the overall contract's security and reliability.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "\n\n```solidity\n\nFile: src/UTB.sol\n\n2: pragma solidity ^0.8.0;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTB.sol#L2-L2"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/UTBExecutor.sol\n\n2: pragma solidity ^0.8.0;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTBExecutor.sol#L2-L2"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/BaseAdapter.sol\n\n2: pragma solidity ^0.8.0;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/BaseAdapter.sol#L2-L2"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/DecentBridgeAdapter.sol\n\n2: pragma solidity ^0.8.0;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/DecentBridgeAdapter.sol#L2-L2"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n2: pragma solidity ^0.8.0;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L2-L2"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/SwapParams.sol\n\n2: pragma solidity ^0.8.0;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/SwapParams.sol#L2-L2"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/UniSwapper.sol\n\n2: pragma solidity ^0.8.0;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/UniSwapper.sol#L2-L2"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n2: pragma solidity ^0.8.13;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L2-L2"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentBridgeExecutor.sol\n\n2: pragma solidity ^0.8.0;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentBridgeExecutor.sol#L2-L2"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Variable name must be in mixedCase",
      "description": "Avoid using underscore for variable Names or parameters",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/UniSwapper.sol\n\n// @audit uniswap_router\n17:     address public uniswap_router;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/UniSwapper.sol#L17-L17"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n// @audit GAS_FOR_RELAY\n96:         uint256 GAS_FOR_RELAY = 100000;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L96-L96"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Whitespace in Expressions",
      "description": "See the [Whitespace in Expressions](https://docs.soliditylang.org/en/latest/style-guide.html#whitespace-in-expressions) section of the Solidity Style Guide",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "\n\n```solidity\n\nFile: src/UTBExecutor.sol\n\n//@audit remove the whiteSpace before the ')' char\n52:             (success, ) = target.call{value: amount}(payload);\n53:             if (!success) {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTBExecutor.sol#L52-L53"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/UTBExecutor.sol\n\n//@audit remove the whiteSpace before the ')' char\n65:             (success, ) = target.call{value: extraNative}(payload);\n66:             if (!success) {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTBExecutor.sol#L65-L66"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/UTBExecutor.sol\n\n//@audit remove the whiteSpace before the ')' char\n70:             (success, ) = target.call(payload);\n71:         }\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTBExecutor.sol#L70-L71"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n//@audit remove the whiteSpace before the ',' char\n117:         (, , IStargateRouter.lzTxObj memory lzTxObj) = abi.decode(\n118:             additionalArgs,\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L117-L118"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n//@audit remove the whiteSpace before the ')' char\n127:         (, LzBridgeData memory lzBridgeData, ) = abi.decode(\n128:             additionalArgs,\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L127-L128"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n//@audit remove the whiteSpace before the ')' char\n137:         (, LzBridgeData memory lzBridgeData, ) = abi.decode(\n138:             additionalArgs,\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L137-L138"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n//@audit remove the whiteSpace before the ')' char\n147:         (, LzBridgeData memory lzBridgeData, ) = abi.decode(\n148:             additionalArgs,\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L147-L148"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n//@audit remove the whiteSpace before the ',' char\n251:             (, , , , callPayload) = abi.decode(\n252:                 _payload,\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L251-L252"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentBridgeExecutor.sol\n\n//@audit remove the whiteSpace before the ')' char\n33:         (bool success, ) = target.call(callPayload);\n34: \n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentBridgeExecutor.sol#L33-L34"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentBridgeExecutor.sol\n\n//@audit remove the whiteSpace before the ')' char\n61:         (bool success, ) = target.call{value: amount}(callPayload);\n62:         if (!success) {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentBridgeExecutor.sol#L61-L62"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "A function which defines named returns in it's declaration doesn't need to use return",
      "description": "Remove the return statement once ensuring it is safe to do so",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n100:     function getValue(\n101:         bytes calldata additionalArgs,\n102:         uint256 amt2Bridge\n103:     ) private view returns (uint value) {\n104:         (address bridgeToken, LzBridgeData memory lzBridgeData) = abi.decode(\n105:             additionalArgs,\n106:             (address, LzBridgeData)\n107:         );\n108:         return\n109:             bridgeToken == stargateEth\n110:                 ? (lzBridgeData.fee + amt2Bridge)\n111:                 : lzBridgeData.fee;\n112:     }\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L100-L112"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/UniSwapper.sol\n\n79:     function _receiveAndWrapIfNeeded(\n80:         SwapParams memory swapParams\n81:     ) private returns (SwapParams memory _swapParams) {\n82:         if (swapParams.tokenIn != address(0)) {\n83:             IERC20(swapParams.tokenIn).transferFrom(\n84:                 msg.sender,\n85:                 address(this),\n86:                 swapParams.amountIn\n87:             );\n88:             return swapParams;\n89:         }\n90:         swapParams.tokenIn = wrapped;\n91:         IWETH(wrapped).deposit{value: swapParams.amountIn}();\n92:         return swapParams;\n93:     }\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/UniSwapper.sol#L79-L93"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "[NatSpec] Natspec `@dev` is missing from `contract`",
      "description": " ",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "\n\n```solidity\n\nFile: src/UTB.sol\n\n15: contract UTB is Owned {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTB.sol#L15-L15"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/UTBExecutor.sol\n\n7: contract UTBExecutor is Owned {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTBExecutor.sol#L7-L7"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/BaseAdapter.sol\n\n6: contract BaseAdapter is UTBOwned {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/BaseAdapter.sol#L6-L6"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/DecentBridgeAdapter.sol\n\n12: contract DecentBridgeAdapter is BaseAdapter, IBridgeAdapter {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/DecentBridgeAdapter.sol#L12-L12"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n17: contract StargateBridgeAdapter is\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L17-L17"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/SwapParams.sol\n\n4: library SwapDirection {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/SwapParams.sol#L4-L4"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/UniSwapper.sol\n\n13: contract UniSwapper is UTBOwned, ISwapper {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/UniSwapper.sol#L13-L13"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n12: contract DecentEthRouter is IDecentEthRouter, IOFTReceiverV2, Owned {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L12-L12"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentBridgeExecutor.sol\n\n8: contract DecentBridgeExecutor is IDecentBridgeExecutor, Owned {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentBridgeExecutor.sol#L8-L8"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Add inline comments for unnamed variables",
      "description": "`function foo(address x, address)` -> `function foo(address x, address /* y */)`",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n//@audit parameters 1,2,3,4,5, need comment\n183:     function sgReceive(\n184:         uint16, // _srcChainid\n185:         bytes memory, // _srcAddress\n186:         uint256, // _nonce\n187:         address, // _token\n188:         uint256, // amountLD\n189:         bytes memory payload\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L183-L189"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n//@audit parameters 2,3,4, need comment\n237:     function onOFTReceived(\n238:         uint16 _srcChainId,\n239:         bytes calldata,\n240:         uint64,\n241:         bytes32,\n242:         uint _amount,\n243:         bytes memory _payload\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L237-L243"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Contract should expose an `interface`",
      "description": "The `contract`s should expose an `interface` so that other projects can more easily integrate with it, without having to develop their own non-standard variants.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/BaseAdapter.sol\n\n19:     function setBridgeExecutor(address _executor) public onlyOwner {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/BaseAdapter.sol#L19-L19"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/DecentBridgeAdapter.sol\n\n34:     function registerRemoteBridgeAdapter(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/DecentBridgeAdapter.sol#L34-L34"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/DecentBridgeAdapter.sol\n\n44:     function estimateFees(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/DecentBridgeAdapter.sol#L44-L44"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n37:     function setStargateEth(address _sgEth) public onlyOwner {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L37-L37"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n45:     function registerRemoteBridgeAdapter(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L45-L45"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/UniSwapper.sol\n\n100:     function swapNoPath(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/UniSwapper.sol#L100-L100"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/UniSwapper.sol\n\n123:     function swapExactIn(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/UniSwapper.sol#L123-L123"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/UniSwapper.sol\n\n143:     function swapExactOut(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/UniSwapper.sol#L143-L143"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "[NatSpec] Natspec `@notice` is missing from `contract`",
      "description": " ",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "\n\n```solidity\n\nFile: src/UTB.sol\n\n15: contract UTB is Owned {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTB.sol#L15-L15"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/UTBExecutor.sol\n\n7: contract UTBExecutor is Owned {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTBExecutor.sol#L7-L7"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/BaseAdapter.sol\n\n6: contract BaseAdapter is UTBOwned {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/BaseAdapter.sol#L6-L6"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/DecentBridgeAdapter.sol\n\n12: contract DecentBridgeAdapter is BaseAdapter, IBridgeAdapter {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/DecentBridgeAdapter.sol#L12-L12"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n17: contract StargateBridgeAdapter is\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L17-L17"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/UniSwapper.sol\n\n13: contract UniSwapper is UTBOwned, ISwapper {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/UniSwapper.sol#L13-L13"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n12: contract DecentEthRouter is IDecentEthRouter, IOFTReceiverV2, Owned {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L12-L12"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentBridgeExecutor.sol\n\n8: contract DecentBridgeExecutor is IDecentBridgeExecutor, Owned {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentBridgeExecutor.sol#L8-L8"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Do not use UNDERSCORE in `struct` elements names",
      "description": " ",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "\n\n```solidity\n\nFile: src/UTB.sol\n\n55:         return performSwap(swapInstructions, true);\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTB.sol#L55-L55"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/UTB.sol\n\n117:         _swapAndExecute(\n118:             instructions.swapInstructions,\n119:             instructions.target,\n120:             instructions.paymentOperator,\n121:             instructions.payload,\n122:             instructions.refund\n123:         );\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTB.sol#L117-L123"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/UTB.sol\n\n273:         return callBridge(amt2Bridge, fees.bridgeFee, updatedInstructions);\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTB.sol#L273-L273"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/UTB.sol\n\n287:         bool native = approveAndCheckIfNative(instructions, amt2Bridge);\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTB.sol#L287-L287"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/UTB.sol\n\n318:         _swapAndExecute(postBridge, target, paymentOperator, payload, refund);\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTB.sol#L318-L318"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/UTBExecutor.sol\n\n28:             execute(target, paymentOperator, payload, token, amount, refund, 0);\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTBExecutor.sol#L28-L28"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n91:         callBridge(\n92:             amt2Bridge,\n93:             dstChainId,\n94:             bridgePayload,\n95:             additionalArgs,\n96:             refund\n97:         );\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L91-L97"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/UniSwapper.sol\n\n119:         _sendToRecipient(receiver, swapParams.tokenOut, amt2Recipient);\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/UniSwapper.sol#L119-L119"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/UniSwapper.sol\n\n140:         _sendToRecipient(receiver, swapParams.tokenOut, amountOut);\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/UniSwapper.sol#L140-L140"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/UniSwapper.sol\n\n162:         _refundUser(\n163:             refundAddress,\n164:             swapParams.tokenIn,\n165:             params.amountInMaximum - amountIn\n166:         );\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/UniSwapper.sol#L162-L166"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/UniSwapper.sol\n\n168:         _sendToRecipient(receiver, swapParams.tokenOut, swapParams.amountOut);\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/UniSwapper.sol#L168-L168"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/UniSwapper.sol\n\n69:             return swapNoPath(swapParams, receiver, refund);\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/UniSwapper.sol#L69-L69"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/UniSwapper.sol\n\n74:             swapExactOut(swapParams, receiver, refund);\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/UniSwapper.sol#L74-L74"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/UniSwapper.sol\n\n108:             _refundUser(\n109:                 refund,\n110:                 swapParams.tokenIn,\n111:                 swapParams.amountIn - swapParams.amountOut\n112:             );\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/UniSwapper.sol#L108-L112"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/UniSwapper.sol\n\n72:             amountOut = swapExactIn(swapParams, receiver);\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/UniSwapper.sol#L72-L72"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n126:         ) = _getCallParams(\n127:                 msgType,\n128:                 _toAddress,\n129:                 _dstChainId,\n130:                 _dstGasForCall,\n131:                 deliverEth,\n132:                 payload\n133:             );\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L126-L133"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n161:         ) = _getCallParams(\n162:                 msgType,\n163:                 _toAddress,\n164:                 _dstChainId,\n165:                 _dstGasForCall,\n166:                 deliverEth,\n167:                 additionalPayload\n168:             );\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L161-L168"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n206:             _bridgeWithPayload(\n207:                 MT_ETH_TRANSFER_WITH_PAYLOAD,\n208:                 _dstChainId,\n209:                 _toAddress,\n210:                 _amount,\n211:                 _dstGasForCall,\n212:                 additionalPayload,\n213:                 deliverEth\n214:             );\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L206-L214"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n225:         _bridgeWithPayload(\n226:             MT_ETH_TRANSFER,\n227:             _dstChainId,\n228:             _toAddress,\n229:             _amount,\n230:             _dstGasForCall,\n231:             bytes(\"\"),\n232:             deliverEth\n233:         );\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L225-L233"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentBridgeExecutor.sol\n\n80:             _executeEth(from, target, amount, callPayload);\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentBridgeExecutor.sol#L80-L80"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentBridgeExecutor.sol\n\n78:             _executeWeth(from, target, amount, callPayload);\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentBridgeExecutor.sol#L78-L78"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "`private`/`public` function name should start with underscore",
      "description": "According to solidity style guide, Private or Public function name should start with underscore.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "\n\n```solidity\n\nFile: src/UTB.sol\n\n//@audit `performSwap` is not in CamelCase\n52:     function performSwap(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTB.sol#L52-L52"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/UTB.sol\n\n//@audit `performSwap` is not in CamelCase\n63:     function performSwap(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTB.sol#L63-L63"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/UTB.sol\n\n//@audit `swapAndModifyPostBridge` is not in CamelCase\n168:     function swapAndModifyPostBridge(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTB.sol#L168-L168"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/UTB.sol\n\n//@audit `approveAndCheckIfNative` is not in CamelCase\n207:     function approveAndCheckIfNative(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTB.sol#L207-L207"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/UTB.sol\n\n//@audit `callBridge` is not in CamelCase\n282:     function callBridge(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTB.sol#L282-L282"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n//@audit `getValue` is not in CamelCase\n100:     function getValue(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L100-L100"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n//@audit `getLzTxObj` is not in CamelCase\n114:     function getLzTxObj(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L114-L114"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n//@audit `getDstChainId` is not in CamelCase\n124:     function getDstChainId(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L124-L124"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n//@audit `getSrcPoolId` is not in CamelCase\n134:     function getSrcPoolId(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L134-L134"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n//@audit `getDstPoolId` is not in CamelCase\n144:     function getDstPoolId(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L144-L144"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n//@audit `getDestAdapter` is not in CamelCase\n154:     function getDestAdapter(uint chainId) private view returns (address dstAddr) {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L154-L154"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n//@audit `callBridge` is not in CamelCase\n163:     function callBridge(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L163-L163"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "[NatSpec] Natspec description is missing from `modifier` declaration",
      "description": "It is recommended that Solidity contracts are fully annotated using NatSpec for all public interfaces (everything in the ABI). It is clearly stated in the Solidity official documentation. In complex projects such as Defi, the interpretation of all functions and their arguments and returns is important for code readability and auditability.[source](https://docs.soliditylang.org/en/v0.8.15/natspec-format.html)",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/BaseAdapter.sol\n\n11:     modifier onlyExecutor() {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/BaseAdapter.sol#L11-L11"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/UniSwapper.sol\n\n95:     modifier routerIsSet() {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/UniSwapper.sol#L95-L95"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n37:     modifier onlyEthChain() {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L37-L37"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n42:     modifier onlyLzApp() {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L42-L42"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n50:     modifier onlyIfWeHaveEnoughReserves(uint256 amount) {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L50-L50"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n55:     modifier userDepositing(uint256 amount) {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L55-L55"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n60:     modifier userIsWithdrawing(uint256 amount) {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L60-L60"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Add inline comments for unnamed parameters",
      "description": "`function func(address a, address)` -> `function func(address a, address /* b */)`",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n//@audit parameter number 0 starting from left need inline comment\n//@audit parameter number 1 starting from left need inline comment\n//@audit parameter number 2 starting from left need inline comment\n//@audit parameter number 3 starting from left need inline comment\n//@audit parameter number 4 starting from left need inline comment\n183:     function sgReceive(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L183-L183"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n//@audit parameter number 1 starting from left need inline comment\n//@audit parameter number 2 starting from left need inline comment\n//@audit parameter number 3 starting from left need inline comment\n237:     function onOFTReceived(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L237-L237"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Use the latest Solidity version for better security",
      "description": "Using the latest solidity version will help avoid old compiler related vulnerabilities",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "\n\n```solidity\n\nFile: src/UTB.sol\n\n2: pragma solidity ^0.8.0;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTB.sol#L2-L2"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/UTBExecutor.sol\n\n2: pragma solidity ^0.8.0;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTBExecutor.sol#L2-L2"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/BaseAdapter.sol\n\n2: pragma solidity ^0.8.0;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/BaseAdapter.sol#L2-L2"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/DecentBridgeAdapter.sol\n\n2: pragma solidity ^0.8.0;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/DecentBridgeAdapter.sol#L2-L2"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n2: pragma solidity ^0.8.0;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L2-L2"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/SwapParams.sol\n\n2: pragma solidity ^0.8.0;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/SwapParams.sol#L2-L2"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/UniSwapper.sol\n\n2: pragma solidity ^0.8.0;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/UniSwapper.sol#L2-L2"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n2: pragma solidity ^0.8.13;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L2-L2"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentBridgeExecutor.sol\n\n2: pragma solidity ^0.8.0;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentBridgeExecutor.sol#L2-L2"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Consider adding formal verification proofs",
      "description": "Consider using formal verification to mathematically prove that your code does what is intended, and does not have any edge cases with unexpected behavior. The solidity compiler itself has this functionality [built in](https://docs.soliditylang.org/en/latest/smtchecker.html#smtchecker-and-formal-verification)",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "\n\n```solidity\n\nFile: src/UTB.sol\n\n@audit Should implement invariant tests\n1: \n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTB.sol#L1-L1"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Missing zero address check in functions with address parameters",
      "description": "Adding a zero address check for each address type parameter can prevent errors.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/BaseAdapter.sol\n\n//@audit _executor,  are not checked\n19:     function setBridgeExecutor(address _executor) public onlyOwner {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/BaseAdapter.sol#L19-L19"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/DecentBridgeAdapter.sol\n\n//@audit _bridgeToken,  are not checked\n21:     constructor(bool _gasIsEth, address _bridgeToken) BaseAdapter() {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/DecentBridgeAdapter.sol#L21-L21"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/DecentBridgeAdapter.sol\n\n//@audit decentBridgeAdapter,  are not checked\n34:     function registerRemoteBridgeAdapter(\n35:         uint256 dstChainId,\n36:         uint16 dstLzId,\n37:         address decentBridgeAdapter\n38:     ) public onlyOwner {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/DecentBridgeAdapter.sol#L34-L38"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n//@audit _sgEth,  are not checked\n37:     function setStargateEth(address _sgEth) public onlyOwner {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L37-L37"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n//@audit decentBridgeAdapter,  are not checked\n45:     function registerRemoteBridgeAdapter(\n46:         uint256 dstChainId,\n47:         uint16 dstLzId,\n48:         address decentBridgeAdapter\n49:     ) public onlyOwner {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L45-L49"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/UniSwapper.sol\n\n//@audit _router,  are not checked\n20:     function setRouter(address _router) public onlyOwner {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/UniSwapper.sol#L20-L20"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/UniSwapper.sol\n\n//@audit _wrapped,  are not checked\n24:     function setWrapped(address payable _wrapped) public onlyOwner {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/UniSwapper.sol#L24-L24"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n//@audit _routerAddress,  are not checked\n73:     function addDestinationBridge(\n74:         uint16 _dstChainId,\n75:         address _routerAddress\n76:     ) public onlyOwner {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L73-L76"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Use a struct to encapsulate multiple function parameters",
      "description": "If a function has too many parameters, replacing them with a struct can improve code readability and maintainability, increase reusability, and reduce the likelihood of errors when passing the parameters.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "\n\n```solidity\n\nFile: src/UTB.sol\n\n134:     function _swapAndExecute(\n135:         SwapInstructions memory swapInstructions,\n136:         address target,\n137:         address paymentOperator,\n138:         bytes memory payload,\n139:         address payable refund\n140:     ) private {\n141:         (address tokenOut, uint256 amountOut) = performSwap(swapInstructions);\n142:         if (tokenOut == address(0)) {\n143:             executor.execute{value: amountOut}(\n144:                 target,\n145:                 paymentOperator,\n146:                 payload,\n147:                 tokenOut,\n148:                 amountOut,\n149:                 refund\n150:             );\n151:         } else {\n152:             IERC20(tokenOut).approve(address(executor), amountOut);\n153:             executor.execute(\n154:                 target,\n155:                 paymentOperator,\n156:                 payload,\n157:                 tokenOut,\n158:                 amountOut,\n159:                 refund\n160:             );\n161:         }\n162:     }\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTB.sol#L134-L162"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/UTB.sol\n\n311:     function receiveFromBridge(\n312:         SwapInstructions memory postBridge,\n313:         address target,\n314:         address paymentOperator,\n315:         bytes memory payload,\n316:         address payable refund\n317:     ) public {\n318:         _swapAndExecute(postBridge, target, paymentOperator, payload, refund);\n319:     }\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTB.sol#L311-L319"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/UTBExecutor.sol\n\n19:     function execute(\n20:         address target,\n21:         address paymentOperator,\n22:         bytes memory payload,\n23:         address token,\n24:         uint amount,\n25:         address payable refund\n26:     ) public payable onlyOwner {\n27:         return\n28:             execute(target, paymentOperator, payload, token, amount, refund, 0);\n29:     }\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTBExecutor.sol#L19-L29"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/UTBExecutor.sol\n\n41:     function execute(\n42:         address target,\n43:         address paymentOperator,\n44:         bytes memory payload,\n45:         address token,\n46:         uint amount,\n47:         address payable refund,\n48:         uint extraNative\n49:     ) public onlyOwner {\n50:         bool success;\n51:         if (token == address(0)) {\n52:             (success, ) = target.call{value: amount}(payload);\n53:             if (!success) {\n54:                 (refund.call{value: amount}(\"\"));\n55:             }\n56:             return;\n57:         }\n58: \n59:         uint initBalance = IERC20(token).balanceOf(address(this));\n60: \n61:         IERC20(token).transferFrom(msg.sender, address(this), amount);\n62:         IERC20(token).approve(paymentOperator, amount);\n63: \n64:         if (extraNative > 0) {\n65:             (success, ) = target.call{value: extraNative}(payload);\n66:             if (!success) {\n67:                 (refund.call{value: extraNative}(\"\"));\n68:             }\n69:         } else {\n70:             (success, ) = target.call(payload);\n71:         }\n72: \n73:         uint remainingBalance = IERC20(token).balanceOf(address(this)) -\n74:             initBalance;\n75: \n76:         if (remainingBalance == 0) {\n77:             return;\n78:         }\n79: \n80:         IERC20(token).transfer(refund, remainingBalance);\n81:     }\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTBExecutor.sol#L41-L81"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/DecentBridgeAdapter.sol\n\n44:     function estimateFees(\n45:         SwapInstructions memory postBridge,\n46:         uint256 dstChainId,\n47:         address target,\n48:         uint64 dstGas,\n49:         bytes memory payload\n50:     ) public view returns (uint nativeFee, uint zroFee) {\n51:         SwapParams memory swapParams = abi.decode(\n52:             postBridge.swapPayload,\n53:             (SwapParams)\n54:         );\n55:         return\n56:             router.estimateSendAndCallFee(\n57:                 router.MT_ETH_TRANSFER_WITH_PAYLOAD(),\n58:                 lzIdLookup[dstChainId],\n59:                 target,\n60:                 swapParams.amountIn,\n61:                 dstGas,\n62:                 false,\n63:                 payload\n64:             );\n65:     }\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/DecentBridgeAdapter.sol#L44-L65"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/DecentBridgeAdapter.sol\n\n081:     function bridge(\n082:         uint256 amt2Bridge,\n083:         SwapInstructions memory postBridge,\n084:         uint256 dstChainId,\n085:         address target,\n086:         address paymentOperator,\n087:         bytes memory payload,\n088:         bytes calldata additionalArgs,\n089:         address payable refund\n090:     ) public payable onlyUtb returns (bytes memory bridgePayload) {\n091:         require(\n092:             destinationBridgeAdapter[dstChainId] != address(0),\n093:             string.concat(\"dst chain address not set \")\n094:         );\n095: \n096:         uint64 dstGas = abi.decode(additionalArgs, (uint64));\n097: \n098:         bridgePayload = abi.encodeCall(\n099:             this.receiveFromBridge,\n100:             (postBridge, target, paymentOperator, payload, refund)\n101:         );\n102: \n103:         SwapParams memory swapParams = abi.decode(\n104:             postBridge.swapPayload,\n105:             (SwapParams)\n106:         );\n107: \n108:         if (!gasIsEth) {\n109:             IERC20(bridgeToken).transferFrom(\n110:                 msg.sender,\n111:                 address(this),\n112:                 amt2Bridge\n113:             );\n114:             IERC20(bridgeToken).approve(address(router), amt2Bridge);\n115:         }\n116: \n117:         router.bridgeWithPayload{value: msg.value}(\n118:             lzIdLookup[dstChainId],\n119:             destinationBridgeAdapter[dstChainId],\n120:             swapParams.amountIn,\n121:             false,\n122:             dstGas,\n123:             bridgePayload\n124:         );\n125:     }\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/DecentBridgeAdapter.sol#L81-L125"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/DecentBridgeAdapter.sol\n\n127:     function receiveFromBridge(\n128:         SwapInstructions memory postBridge,\n129:         address target,\n130:         address paymentOperator,\n131:         bytes memory payload,\n132:         address payable refund\n133:     ) public onlyExecutor {\n134:         SwapParams memory swapParams = abi.decode(\n135:             postBridge.swapPayload,\n136:             (SwapParams)\n137:         );\n138: \n139:         IERC20(swapParams.tokenIn).transferFrom(\n140:             msg.sender,\n141:             address(this),\n142:             swapParams.amountIn\n143:         );\n144: \n145:         IERC20(swapParams.tokenIn).approve(utb, swapParams.amountIn);\n146: \n147:         IUTB(utb).receiveFromBridge(\n148:             postBridge,\n149:             target,\n150:             paymentOperator,\n151:             payload,\n152:             refund\n153:         );\n154:     }\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/DecentBridgeAdapter.sol#L127-L154"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n69:     function bridge(\n70:         uint256 amt2Bridge,\n71:         SwapInstructions memory postBridge,\n72:         uint256 dstChainId,\n73:         address target,\n74:         address paymentOperator,\n75:         bytes memory payload,\n76:         bytes calldata additionalArgs,\n77:         address payable refund\n78:     ) public payable onlyUtb returns (bytes memory bridgePayload) {\n79:         address bridgeToken = abi.decode(additionalArgs, (address));\n80: \n81:         bridgePayload = abi.encode(\n82:             postBridge,\n83:             target,\n84:             paymentOperator,\n85:             payload,\n86:             refund\n87:         );\n88:         IERC20(bridgeToken).transferFrom(msg.sender, address(this), amt2Bridge);\n89:         IERC20(bridgeToken).approve(address(router), amt2Bridge);\n90: \n91:         callBridge(\n92:             amt2Bridge,\n93:             dstChainId,\n94:             bridgePayload,\n95:             additionalArgs,\n96:             refund\n97:         );\n98:     }\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L69-L98"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n163:     function callBridge(\n164:         uint256 amt2Bridge,\n165:         uint256 dstChainId,\n166:         bytes memory bridgePayload,\n167:         bytes calldata additionalArgs,\n168:         address payable refund\n169:     ) private {\n170:         router.swap{value: msg.value}(\n171:             getDstChainId(additionalArgs), //lzBridgeData._dstChainId, // send to LayerZero chainId\n172:             getSrcPoolId(additionalArgs), //lzBridgeData._srcPoolId, // source pool id\n173:             getDstPoolId(additionalArgs), //lzBridgeData._dstPoolId, // dst pool id\n174:             refund, // refund adddress. extra gas (if any) is returned to this address\n175:             amt2Bridge, // quantity to swap\n176:             (amt2Bridge * (10000 - SG_FEE_BPS)) / 10000, // the min qty you would accept on the destination, fee is 6 bips\n177:             getLzTxObj(additionalArgs), // additional gasLimit increase, airdrop, at address\n178:             abi.encodePacked(getDestAdapter(dstChainId)),\n179:             bridgePayload // bytes param, if you wish to send additional payload you can abi.encode() them here\n180:         );\n181:     }\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L163-L181"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n183:     function sgReceive(\n184:         uint16, // _srcChainid\n185:         bytes memory, // _srcAddress\n186:         uint256, // _nonce\n187:         address, // _token\n188:         uint256, // amountLD\n189:         bytes memory payload\n190:     ) external override onlyExecutor {\n191:         (\n192:             SwapInstructions memory postBridge,\n193:             address target,\n194:             address paymentOperator,\n195:             bytes memory utbPayload,\n196:             address payable refund\n197:         ) = abi.decode(\n198:                 payload,\n199:                 (SwapInstructions, address, address, bytes, address)\n200:             );\n201: \n202:         SwapParams memory swapParams = abi.decode(\n203:             postBridge.swapPayload,\n204:             (SwapParams)\n205:         );\n206: \n207:         IERC20(swapParams.tokenIn).approve(utb, swapParams.amountIn);\n208: \n209:         IUTB(utb).receiveFromBridge(\n210:             postBridge,\n211:             target,\n212:             paymentOperator,\n213:             utbPayload,\n214:             refund\n215:         );\n216:     }\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L183-L216"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n080:     function _getCallParams(\n081:         uint8 msgType,\n082:         address _toAddress,\n083:         uint16 _dstChainId,\n084:         uint64 _dstGasForCall,\n085:         bool deliverEth,\n086:         bytes memory additionalPayload\n087:     )\n088:         private\n089:         view\n090:         returns (\n091:             bytes32 destBridge,\n092:             bytes memory adapterParams,\n093:             bytes memory payload\n094:         )\n095:     {\n096:         uint256 GAS_FOR_RELAY = 100000;\n097:         uint256 gasAmount = GAS_FOR_RELAY + _dstGasForCall;\n098:         adapterParams = abi.encodePacked(PT_SEND_AND_CALL, gasAmount);\n099:         destBridge = bytes32(abi.encode(destinationBridges[_dstChainId]));\n100:         if (msgType == MT_ETH_TRANSFER) {\n101:             payload = abi.encode(msgType, msg.sender, _toAddress, deliverEth);\n102:         } else {\n103:             payload = abi.encode(\n104:                 msgType,\n105:                 msg.sender,\n106:                 _toAddress,\n107:                 deliverEth,\n108:                 additionalPayload\n109:             );\n110:         }\n111:     }\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L80-L111"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n113:     function estimateSendAndCallFee(\n114:         uint8 msgType,\n115:         uint16 _dstChainId,\n116:         address _toAddress,\n117:         uint _amount,\n118:         uint64 _dstGasForCall,\n119:         bool deliverEth,\n120:         bytes memory payload\n121:     ) public view returns (uint nativeFee, uint zroFee) {\n122:         (\n123:             bytes32 destinationBridge,\n124:             bytes memory adapterParams,\n125:             bytes memory _payload\n126:         ) = _getCallParams(\n127:                 msgType,\n128:                 _toAddress,\n129:                 _dstChainId,\n130:                 _dstGasForCall,\n131:                 deliverEth,\n132:                 payload\n133:             );\n134: \n135:         return\n136:             dcntEth.estimateSendAndCallFee(\n137:                 _dstChainId,\n138:                 destinationBridge,\n139:                 _amount,\n140:                 _payload,\n141:                 _dstGasForCall,\n142:                 false, // useZero\n143:                 adapterParams // Relayer adapter parameters\n144:                 // contains packet type (send and call in this case) and gasAmount\n145:             );\n146:     }\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L113-L146"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n148:     function _bridgeWithPayload(\n149:         uint8 msgType,\n150:         uint16 _dstChainId,\n151:         address _toAddress,\n152:         uint _amount,\n153:         uint64 _dstGasForCall,\n154:         bytes memory additionalPayload,\n155:         bool deliverEth\n156:     ) internal {\n157:         (\n158:             bytes32 destinationBridge,\n159:             bytes memory adapterParams,\n160:             bytes memory payload\n161:         ) = _getCallParams(\n162:                 msgType,\n163:                 _toAddress,\n164:                 _dstChainId,\n165:                 _dstGasForCall,\n166:                 deliverEth,\n167:                 additionalPayload\n168:             );\n169: \n170:         ICommonOFT.LzCallParams memory callParams = ICommonOFT.LzCallParams({\n171:             refundAddress: payable(msg.sender),\n172:             zroPaymentAddress: address(0x0),\n173:             adapterParams: adapterParams\n174:         });\n175: \n176:         uint gasValue;\n177:         if (gasCurrencyIsEth) {\n178:             weth.deposit{value: _amount}();\n179:             gasValue = msg.value - _amount;\n180:         } else {\n181:             weth.transferFrom(msg.sender, address(this), _amount);\n182:             gasValue = msg.value;\n183:         }\n184: \n185:         dcntEth.sendAndCall{value: gasValue}(\n186:             address(this), // from address that has dcntEth (so DecentRouter)\n187:             _dstChainId,\n188:             destinationBridge, // toAddress\n189:             _amount, // amount\n190:             payload, //payload (will have recipients address)\n191:             _dstGasForCall, // dstGasForCall\n192:             callParams // refundAddress, zroPaymentAddress, adapterParams\n193:         );\n194:     }\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L148-L194"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n197:     function bridgeWithPayload(\n198:         uint16 _dstChainId,\n199:         address _toAddress,\n200:         uint _amount,\n201:         bool deliverEth,\n202:         uint64 _dstGasForCall,\n203:         bytes memory additionalPayload\n204:     ) public payable {\n205:         return\n206:             _bridgeWithPayload(\n207:                 MT_ETH_TRANSFER_WITH_PAYLOAD,\n208:                 _dstChainId,\n209:                 _toAddress,\n210:                 _amount,\n211:                 _dstGasForCall,\n212:                 additionalPayload,\n213:                 deliverEth\n214:             );\n215:     }\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L197-L215"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n218:     function bridge(\n219:         uint16 _dstChainId,\n220:         address _toAddress,\n221:         uint _amount,\n222:         uint64 _dstGasForCall,\n223:         bool deliverEth // if false, delivers WETH\n224:     ) public payable {\n225:         _bridgeWithPayload(\n226:             MT_ETH_TRANSFER,\n227:             _dstChainId,\n228:             _toAddress,\n229:             _amount,\n230:             _dstGasForCall,\n231:             bytes(\"\"),\n232:             deliverEth\n233:         );\n234:     }\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L218-L234"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n237:     function onOFTReceived(\n238:         uint16 _srcChainId,\n239:         bytes calldata,\n240:         uint64,\n241:         bytes32,\n242:         uint _amount,\n243:         bytes memory _payload\n244:     ) external override onlyLzApp {\n245:         (uint8 msgType, address _from, address _to, bool deliverEth) = abi\n246:             .decode(_payload, (uint8, address, address, bool));\n247: \n248:         bytes memory callPayload = \"\";\n249: \n250:         if (msgType == MT_ETH_TRANSFER_WITH_PAYLOAD) {\n251:             (, , , , callPayload) = abi.decode(\n252:                 _payload,\n253:                 (uint8, address, address, bool, bytes)\n254:             );\n255:         }\n256: \n257:         emit ReceivedDecentEth(\n258:             msgType,\n259:             _srcChainId,\n260:             _from,\n261:             _to,\n262:             _amount,\n263:             callPayload\n264:         );\n265: \n266:         if (weth.balanceOf(address(this)) < _amount) {\n267:             dcntEth.transfer(_to, _amount);\n268:             return;\n269:         }\n270: \n271:         if (msgType == MT_ETH_TRANSFER) {\n272:             if (!gasCurrencyIsEth || !deliverEth) {\n273:                 weth.transfer(_to, _amount);\n274:             } else {\n275:                 weth.withdraw(_amount);\n276:                 payable(_to).transfer(_amount);\n277:             }\n278:         } else {\n279:             weth.approve(address(executor), _amount);\n280:             executor.execute(_from, _to, deliverEth, _amount, callPayload);\n281:         }\n282:     }\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L237-L282"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentBridgeExecutor.sol\n\n68:     function execute(\n69:         address from,\n70:         address target,\n71:         bool deliverEth,\n72:         uint256 amount,\n73:         bytes memory callPayload\n74:     ) public onlyOwner {\n75:         weth.transferFrom(msg.sender, address(this), amount);\n76: \n77:         if (!gasCurrencyIsEth || !deliverEth) {\n78:             _executeWeth(from, target, amount, callPayload);\n79:         } else {\n80:             _executeEth(from, target, amount, callPayload);\n81:         }\n82:     }\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentBridgeExecutor.sol#L68-L82"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "[NatSpec] Natspec `@notice` is missing from `function`",
      "description": " ",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "\n\n```solidity\n\nFile: src/UTB.sol\n\n24:     /**\n25:      * @dev Sets the executor.\n26:      * @param _executor The address of the executor.\n27:      */\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTB.sol#L24-L27"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/UTB.sol\n\n32:     /**\n33:      * @dev Sets the wrapped native token.\n34:      * @param _wrapped The address of the wrapped token.\n35:      */\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTB.sol#L32-L35"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/UTB.sol\n\n40:     /**\n41:      * @dev Sets the fee collector.\n42:      * @param _feeCollector The address of the fee collector.\n43:      */\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTB.sol#L40-L43"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/UTB.sol\n\n48:     /**\n49:      * @dev Performs a swap with a default setting to retrieve ERC20.\n50:      * @param swapInstructions The swapper ID and calldata to execute a swap.\n51:      */\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTB.sol#L48-L51"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/UTB.sol\n\n58:     /**\n59:      * @dev Performs a swap with the requested swapper and swap calldata.\n60:      * @param swapInstructions The swapper ID and calldata to execute a swap.\n61:      * @param retrieveTokenIn Flag indicating whether to transfer ERC20 for the swap.\n62:      */\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTB.sol#L58-L62"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/UTB.sol\n\n102:     /**\n103:      * @dev Swaps currency from the incoming to the outgoing token and executes a transaction with payment.\n104:      * @param instructions The token swap data and payment transaction payload.\n105:      * @param fees The bridge fee in native, as well as utb fee token and amount.\n106:      * @param signature The ECDSA signature to verify the fee structure.\n107:      */\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTB.sol#L102-L107"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/UTB.sol\n\n126:     /**\n127:      * @dev Swaps currency from the incoming to the outgoing token and executes a transaction with payment.\n128:      * @param swapInstructions The swapper ID and calldata to execute a swap.\n129:      * @param target The address of the target contract for the payment transaction.\n130:      * @param paymentOperator The operator address for payment transfers requiring ERC20 approvals.\n131:      * @param payload The calldata to execute the payment transaction.\n132:      * @param refund The account receiving any refunds, typically the EOA which initiated the transaction.\n133:      */\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTB.sol#L126-L133"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/UTB.sol\n\n164:     /**\n165:      * @dev Performs the pre bridge swap and modifies the post bridge swap to utilize the bridged amount.\n166:      * @param instructions The bridge data, token swap data, and payment transaction payload.\n167:      */\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTB.sol#L164-L167"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/UTB.sol\n\n202:     /**\n203:      * @dev Checks if the bridge token is native, and approves the bridge adapter to transfer ERC20 if required.\n204:      * @param instructions The bridge data, token swap data, and payment transaction payload.\n205:      * @param amt2Bridge The amount of the bridge token being transferred to the bridge adapter.\n206:      */\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTB.sol#L202-L206"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/UTB.sol\n\n253:     /**\n254:      * @dev Bridges funds in native or ERC20 and a payment transaction payload to the destination chain\n255:      * @param instructions The bridge data, token swap data, and payment transaction payload.\n256:      * @param fees The bridge fee in native, as well as utb fee token and amount.\n257:      * @param signature The ECDSA signature to verify the fee structure.\n258:      */\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTB.sol#L253-L258"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/UTB.sol\n\n276:     /**\n277:      * @dev Calls the bridge adapter to bridge funds, and approves the bridge adapter to transfer ERC20 if required.\n278:      * @param amt2Bridge The amount of the bridge token being bridged via the bridge adapter.\n279:      * @param bridgeFee The fee being transferred to the bridge adapter and finally to the bridge.\n280:      * @param instructions The bridge data, token swap data, and payment transaction payload.\n281:      */\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTB.sol#L276-L281"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/UTB.sol\n\n303:     /**\n304:      * @dev Receives funds from the bridge adapter, executes a swap, and executes a payment transaction.\n305:      * @param postBridge The swapper ID and calldata to execute a swap.\n306:      * @param target The address of the target contract for the payment transaction.\n307:      * @param paymentOperator The operator address for payment transfers requiring ERC20 approvals.\n308:      * @param payload The calldata to execute the payment transaction.\n309:      * @param refund The account receiving any refunds, typically the EOA which initiated the transaction.\n310:      */\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTB.sol#L303-L310"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/UTB.sol\n\n321:     /**\n322:      * @dev Registers and maps a swapper to a swapper ID.\n323:      * @param swapper The address of the swapper.\n324:      */\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTB.sol#L321-L324"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/UTB.sol\n\n330:     /**\n331:      * @dev Registers and maps a bridge adapter to a bridge adapter ID.\n332:      * @param bridge The address of the bridge adapter.\n333:      */\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTB.sol#L330-L333"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/UTBExecutor.sol\n\n10:     /**\n11:      * @dev Executes a payment transaction with native OR ERC20.\n12:      * @param target The address of the target contract for the payment transaction.\n13:      * @param paymentOperator The operator address for payment transfers requiring ERC20 approvals.\n14:      * @param payload The calldata to execute the payment transaction.\n15:      * @param token The token being transferred, zero address for native.\n16:      * @param amount The amount of native or ERC20 being sent with the payment transaction.\n17:      * @param refund The account receiving any refunds, typically the EOA that initiated the transaction.\n18:      */\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTBExecutor.sol#L10-L18"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/UTBExecutor.sol\n\n31:     /**\n32:      * @dev Executes a payment transaction with native AND/OR ERC20.\n33:      * @param target The address of the target contract for the payment transaction.\n34:      * @param paymentOperator The operator address for payment transfers requiring ERC20 approvals.\n35:      * @param payload The calldata to execute the payment transaction.\n36:      * @param token The token being transferred, zero address for native.\n37:      * @param amount The amount of native or ERC20 being sent with the payment transaction.\n38:      * @param refund The account receiving any refunds, typically the EOA that initiated the transaction.\n39:      * @param extraNative Forwards additional gas or native fees required to executing the payment transaction.\n40:      */\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTBExecutor.sol#L31-L40"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/BaseAdapter.sol\n\n19:     function setBridgeExecutor(address _executor) public onlyOwner {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/BaseAdapter.sol#L19-L19"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/DecentBridgeAdapter.sol\n\n26:     function setRouter(address _router) public onlyOwner {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/DecentBridgeAdapter.sol#L26-L26"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/DecentBridgeAdapter.sol\n\n30:     function getId() public pure returns (uint8) {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/DecentBridgeAdapter.sol#L30-L30"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/DecentBridgeAdapter.sol\n\n34:     function registerRemoteBridgeAdapter(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/DecentBridgeAdapter.sol#L34-L34"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/DecentBridgeAdapter.sol\n\n44:     function estimateFees(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/DecentBridgeAdapter.sol#L44-L44"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/DecentBridgeAdapter.sol\n\n67:     function getBridgeToken(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/DecentBridgeAdapter.sol#L67-L67"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/DecentBridgeAdapter.sol\n\n73:     function getBridgedAmount(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/DecentBridgeAdapter.sol#L73-L73"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/DecentBridgeAdapter.sol\n\n81:     function bridge(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/DecentBridgeAdapter.sol#L81-L81"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/DecentBridgeAdapter.sol\n\n127:     function receiveFromBridge(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/DecentBridgeAdapter.sol#L127-L127"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n33:     function setRouter(address _router) public onlyOwner {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L33-L33"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n37:     function setStargateEth(address _sgEth) public onlyOwner {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L37-L37"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n41:     function getId() public pure returns (uint8) {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L41-L41"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n45:     function registerRemoteBridgeAdapter(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L45-L45"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n55:     function getBridgeToken(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L55-L55"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n61:     function getBridgedAmount(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L61-L61"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n69:     function bridge(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L69-L69"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n100:     function getValue(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L100-L100"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n114:     function getLzTxObj(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L114-L114"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n124:     function getDstChainId(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L124-L124"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n134:     function getSrcPoolId(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L134-L134"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n144:     function getDstPoolId(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L144-L144"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n154:     function getDestAdapter(uint chainId) private view returns (address dstAddr) {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L154-L154"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n163:     function callBridge(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L163-L163"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n183:     function sgReceive(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L183-L183"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/UniSwapper.sol\n\n20:     function setRouter(address _router) public onlyOwner {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/UniSwapper.sol#L20-L20"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/UniSwapper.sol\n\n24:     function setWrapped(address payable _wrapped) public onlyOwner {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/UniSwapper.sol#L24-L24"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/UniSwapper.sol\n\n28:     function getId() public pure returns (uint8) {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/UniSwapper.sol#L28-L28"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/UniSwapper.sol\n\n32:     function updateSwapParams(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/UniSwapper.sol#L32-L32"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/UniSwapper.sol\n\n43:     function _refundUser(address user, address token, uint amount) private {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/UniSwapper.sol#L43-L43"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/UniSwapper.sol\n\n47:     function _sendToRecipient(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/UniSwapper.sol#L47-L47"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/UniSwapper.sol\n\n58:     function swap(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/UniSwapper.sol#L58-L58"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/UniSwapper.sol\n\n79:     function _receiveAndWrapIfNeeded(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/UniSwapper.sol#L79-L79"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/UniSwapper.sol\n\n100:     function swapNoPath(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/UniSwapper.sol#L100-L100"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/UniSwapper.sol\n\n123:     function swapExactIn(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/UniSwapper.sol#L123-L123"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/UniSwapper.sol\n\n143:     function swapExactOut(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/UniSwapper.sol#L143-L143"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n67:     /// @inheritdoc IDecentEthRouter\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L67-L67"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n72:     /// @inheritdoc IDecentEthRouter\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L72-L72"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n80:     function _getCallParams(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L80-L80"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n113:     function estimateSendAndCallFee(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L113-L113"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n148:     function _bridgeWithPayload(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L148-L148"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n196:     /// @inheritdoc IDecentEthRouter\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L196-L196"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n217:     /// @inheritdoc IDecentEthRouter\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L217-L217"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n236:     /// @inheritdoc IOFTReceiverV2\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L236-L236"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n284:     /// @inheritdoc IDecentEthRouter\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L284-L284"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n293:     /// @inheritdoc IDecentEthRouter\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L293-L293"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n301:     /// @inheritdoc IDecentEthRouter\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L301-L301"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n312:     /// @inheritdoc IDecentEthRouter\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L312-L312"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n321:     /// @inheritdoc IDecentEthRouter\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L321-L321"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n329:     /// @inheritdoc IDecentEthRouter\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L329-L329"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentBridgeExecutor.sol\n\n17:     /**\n18:      * @dev helper function for execute\n19:      * @param from caller of the function\n20:      * @param target target contract\n21:      * @param amount amount of the in eth\n22:      * @param callPayload payload for the tx\n23:      */\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentBridgeExecutor.sol#L17-L23"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentBridgeExecutor.sol\n\n47:     /**\n48:      * @dev helper function for execute\n49:      * @param from caller of the function\n50:      * @param target target contract\n51:      * @param amount amount of the transaction\n52:      * @param callPayload payload for the tx\n53:      */\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentBridgeExecutor.sol#L47-L53"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentBridgeExecutor.sol\n\n67:     /// @inheritdoc IDecentBridgeExecutor\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentBridgeExecutor.sol#L67-L67"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "[NatSpec] Natspec `@dev` is missing from `function`",
      "description": " ",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/BaseAdapter.sol\n\n19:     function setBridgeExecutor(address _executor) public onlyOwner {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/BaseAdapter.sol#L19-L19"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/DecentBridgeAdapter.sol\n\n26:     function setRouter(address _router) public onlyOwner {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/DecentBridgeAdapter.sol#L26-L26"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/DecentBridgeAdapter.sol\n\n30:     function getId() public pure returns (uint8) {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/DecentBridgeAdapter.sol#L30-L30"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/DecentBridgeAdapter.sol\n\n34:     function registerRemoteBridgeAdapter(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/DecentBridgeAdapter.sol#L34-L34"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/DecentBridgeAdapter.sol\n\n44:     function estimateFees(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/DecentBridgeAdapter.sol#L44-L44"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/DecentBridgeAdapter.sol\n\n67:     function getBridgeToken(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/DecentBridgeAdapter.sol#L67-L67"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/DecentBridgeAdapter.sol\n\n73:     function getBridgedAmount(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/DecentBridgeAdapter.sol#L73-L73"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/DecentBridgeAdapter.sol\n\n81:     function bridge(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/DecentBridgeAdapter.sol#L81-L81"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/DecentBridgeAdapter.sol\n\n127:     function receiveFromBridge(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/DecentBridgeAdapter.sol#L127-L127"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n33:     function setRouter(address _router) public onlyOwner {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L33-L33"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n37:     function setStargateEth(address _sgEth) public onlyOwner {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L37-L37"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n41:     function getId() public pure returns (uint8) {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L41-L41"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n45:     function registerRemoteBridgeAdapter(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L45-L45"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n55:     function getBridgeToken(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L55-L55"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n61:     function getBridgedAmount(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L61-L61"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n69:     function bridge(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L69-L69"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n100:     function getValue(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L100-L100"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n114:     function getLzTxObj(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L114-L114"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n124:     function getDstChainId(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L124-L124"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n134:     function getSrcPoolId(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L134-L134"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n144:     function getDstPoolId(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L144-L144"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n154:     function getDestAdapter(uint chainId) private view returns (address dstAddr) {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L154-L154"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n163:     function callBridge(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L163-L163"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n183:     function sgReceive(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L183-L183"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/UniSwapper.sol\n\n20:     function setRouter(address _router) public onlyOwner {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/UniSwapper.sol#L20-L20"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/UniSwapper.sol\n\n24:     function setWrapped(address payable _wrapped) public onlyOwner {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/UniSwapper.sol#L24-L24"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/UniSwapper.sol\n\n28:     function getId() public pure returns (uint8) {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/UniSwapper.sol#L28-L28"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/UniSwapper.sol\n\n32:     function updateSwapParams(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/UniSwapper.sol#L32-L32"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/UniSwapper.sol\n\n43:     function _refundUser(address user, address token, uint amount) private {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/UniSwapper.sol#L43-L43"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/UniSwapper.sol\n\n47:     function _sendToRecipient(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/UniSwapper.sol#L47-L47"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/UniSwapper.sol\n\n58:     function swap(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/UniSwapper.sol#L58-L58"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/UniSwapper.sol\n\n79:     function _receiveAndWrapIfNeeded(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/UniSwapper.sol#L79-L79"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/UniSwapper.sol\n\n100:     function swapNoPath(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/UniSwapper.sol#L100-L100"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/UniSwapper.sol\n\n123:     function swapExactIn(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/UniSwapper.sol#L123-L123"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/UniSwapper.sol\n\n143:     function swapExactOut(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/UniSwapper.sol#L143-L143"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n67:     /// @inheritdoc IDecentEthRouter\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L67-L67"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n72:     /// @inheritdoc IDecentEthRouter\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L72-L72"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n80:     function _getCallParams(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L80-L80"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n113:     function estimateSendAndCallFee(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L113-L113"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n148:     function _bridgeWithPayload(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L148-L148"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n196:     /// @inheritdoc IDecentEthRouter\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L196-L196"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n217:     /// @inheritdoc IDecentEthRouter\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L217-L217"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n236:     /// @inheritdoc IOFTReceiverV2\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L236-L236"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n284:     /// @inheritdoc IDecentEthRouter\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L284-L284"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n293:     /// @inheritdoc IDecentEthRouter\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L293-L293"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n301:     /// @inheritdoc IDecentEthRouter\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L301-L301"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n312:     /// @inheritdoc IDecentEthRouter\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L312-L312"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n321:     /// @inheritdoc IDecentEthRouter\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L321-L321"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n329:     /// @inheritdoc IDecentEthRouter\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L329-L329"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentBridgeExecutor.sol\n\n67:     /// @inheritdoc IDecentBridgeExecutor\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentBridgeExecutor.sol#L67-L67"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Missing NatSpec `@dev` from `modifier` declaration",
      "description": " ",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/BaseAdapter.sol\n\n11:     modifier onlyExecutor() {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/BaseAdapter.sol#L11-L11"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/UniSwapper.sol\n\n95:     modifier routerIsSet() {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/UniSwapper.sol#L95-L95"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n37:     modifier onlyEthChain() {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L37-L37"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n42:     modifier onlyLzApp() {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L42-L42"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n50:     modifier onlyIfWeHaveEnoughReserves(uint256 amount) {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L50-L50"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n55:     modifier userDepositing(uint256 amount) {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L55-L55"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n60:     modifier userIsWithdrawing(uint256 amount) {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L60-L60"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "[NatSpec] Natspec `@notice` is missing from `modifier`",
      "description": " ",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "\n\n```solidity\n\nFile: src/UTB.sol\n\n222:     /**\n223:      * @dev Transfers fees from the sender to UTB, and finally to the Fee Collector.\n224:      * @param fees The bridge fee in native, as well as utb fee token and amount.\n225:      * @param packedInfo The fees and swap instructions which were used to generate the signature.\n226:      * @param signature The ECDSA signature to verify the fee structure.\n227:      */\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTB.sol#L222-L227"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/BaseAdapter.sol\n\n11:     modifier onlyExecutor() {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/BaseAdapter.sol#L11-L11"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/UniSwapper.sol\n\n95:     modifier routerIsSet() {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/UniSwapper.sol#L95-L95"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n37:     modifier onlyEthChain() {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L37-L37"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n42:     modifier onlyLzApp() {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L42-L42"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n50:     modifier onlyIfWeHaveEnoughReserves(uint256 amount) {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L50-L50"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n55:     modifier userDepositing(uint256 amount) {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L55-L55"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n60:     modifier userIsWithdrawing(uint256 amount) {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L60-L60"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Use custom errors rather than `revert()`/`require()` strings for better readability",
      "description": "Custom errors are available from solidity version 0.8.4. Custom errors are more easily processed in try-catch blocks, and are easier to re-use and maintain.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "\n\n```solidity\n\nFile: src/UTB.sol\n\n75:             require(msg.value >= swapParams.amountIn, \"not enough native\");\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTB.sol#L75-L75"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/BaseAdapter.sol\n\n12:         require(\n13:             msg.sender == address(bridgeExecutor),\n14:             \"Only bridge executor can call this\"\n15:         );\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/BaseAdapter.sol#L12-L15"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/UniSwapper.sol\n\n96:         require(uniswap_router != address(0), \"router not set\");\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/UniSwapper.sol#L96-L96"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n38:         require(gasCurrencyIsEth, \"Gas currency is not ETH\");\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L38-L38"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n43:         require(\n44:             address(dcntEth) == msg.sender,\n45:             \"DecentEthRouter: only lz App can call\"\n46:         );\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L43-L46"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n51:         require(weth.balanceOf(address(this)) > amount, \"not enough reserves\");\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L51-L51"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n62:         require(balance >= amount, \"not enough balance\");\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L62-L62"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Use `@inheritdoc` for overridden functions",
      "description": " ",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n183:     function sgReceive(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L183-L183"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "constructor should emit an event",
      "description": "Use events to signal significant changes to off-chain monitoring tools.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "\n\n```solidity\n\nFile: src/UTB.sol\n\n16:     constructor() Owned(msg.sender) {}\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTB.sol#L16-L16"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/UTBExecutor.sol\n\n8:     constructor() Owned(msg.sender) {}\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTBExecutor.sol#L8-L8"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/BaseAdapter.sol\n\n9:     constructor() UTBOwned() {}\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/BaseAdapter.sol#L9-L9"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/DecentBridgeAdapter.sol\n\n21:     constructor(bool _gasIsEth, address _bridgeToken) BaseAdapter() {\n22:         gasIsEth = _gasIsEth;\n23:         bridgeToken = _bridgeToken;\n24:     }\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/DecentBridgeAdapter.sol#L21-L24"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n29:     constructor() BaseAdapter() {}\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L29-L29"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/UniSwapper.sol\n\n14:     constructor() UTBOwned() {}\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/UniSwapper.sol#L14-L14"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n27:     constructor(\n28:         address payable _wethAddress,\n29:         bool gasIsEth,\n30:         address _executor\n31:     ) Owned(msg.sender) {\n32:         weth = IWETH(_wethAddress);\n33:         gasCurrencyIsEth = gasIsEth;\n34:         executor = IDecentBridgeExecutor(payable(_executor));\n35:     }\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L27-L35"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentBridgeExecutor.sol\n\n12:     constructor(address _weth, bool gasIsEth) Owned(msg.sender) {\n13:         weth = IWETH(payable(_weth));\n14:         gasCurrencyIsEth = gasIsEth;\n15:     }\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentBridgeExecutor.sol#L12-L15"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Complex functions should include comments",
      "description": "Large and/or complex functions should include comments to make them easier to understand and reduce margin for error.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "\n\n```solidity\n\nFile: src/UTB.sol\n\n63:     function performSwap(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTB.sol#L63-L63"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/UTB.sol\n\n134:     function _swapAndExecute(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTB.sol#L134-L134"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/UTB.sol\n\n168:     function swapAndModifyPostBridge(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTB.sol#L168-L168"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/UTBExecutor.sol\n\n41:     function execute(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTBExecutor.sol#L41-L41"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/DecentBridgeAdapter.sol\n\n44:     function estimateFees(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/DecentBridgeAdapter.sol#L44-L44"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/DecentBridgeAdapter.sol\n\n81:     function bridge(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/DecentBridgeAdapter.sol#L81-L81"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/DecentBridgeAdapter.sol\n\n127:     function receiveFromBridge(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/DecentBridgeAdapter.sol#L127-L127"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n69:     function bridge(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L69-L69"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/UniSwapper.sol\n\n100:     function swapNoPath(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/UniSwapper.sol#L100-L100"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n80:     function _getCallParams(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L80-L80"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n237:     function onOFTReceived(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L237-L237"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Use a `struct` instead of returning multiple values",
      "description": "Functions that return many variables can become difficult to read and maintain. Using a struct to encapsulate these return values can improve code readability, increase reusability, and reduce the likelihood of errors. Consider refactoring functions that return more than three variables to use a struct instead.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n80:     function _getCallParams(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L80-L80"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Make use of Solidiy's `using` keyword",
      "description": "The directive `using A for B` can be used to attach functions (`A`) as operators to user-defined value types or as member functions to any type (`B`). The member functions receive the object they are called on as their first parameter (like the `self` variable in Python). The operator functions receive operands as parameters.  Doing so improves readability, makes debugging easier, and promotes modularity and reusability in the code.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/UniSwapper.sol\n\n129:         IV3SwapRouter.ExactInputParams memory params = IV3SwapRouter\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/UniSwapper.sol#L129-L129"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/UniSwapper.sol\n\n149:         IV3SwapRouter.ExactOutputParams memory params = IV3SwapRouter\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/UniSwapper.sol#L149-L149"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n170:         ICommonOFT.LzCallParams memory callParams = ICommonOFT.LzCallParams({\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L170-L170"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "[Solidity]: Bug in Legacy Code Generation When Accessing the .selector Member on Expressions with Side Effects",
      "description": "This version of solidity is vulnerable to a bug in the legacy code generation pipeline of the Solidity compiler that was found during investigation of a security report On June 26, 2023. For more details check the following [link](https://soliditylang.org/blog/2023/07/19/missing-side-effects-on-selector-access-bug/)",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "\n\n```solidity\n\nFile: src/UTB.sol\n\n2: pragma solidity ^0.8.0;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTB.sol#L2-L2"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/UTBExecutor.sol\n\n2: pragma solidity ^0.8.0;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTBExecutor.sol#L2-L2"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/BaseAdapter.sol\n\n2: pragma solidity ^0.8.0;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/BaseAdapter.sol#L2-L2"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/DecentBridgeAdapter.sol\n\n2: pragma solidity ^0.8.0;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/DecentBridgeAdapter.sol#L2-L2"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n2: pragma solidity ^0.8.0;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L2-L2"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/SwapParams.sol\n\n2: pragma solidity ^0.8.0;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/SwapParams.sol#L2-L2"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/UniSwapper.sol\n\n2: pragma solidity ^0.8.0;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/UniSwapper.sol#L2-L2"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n2: pragma solidity ^0.8.13;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L2-L2"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentBridgeExecutor.sol\n\n2: pragma solidity ^0.8.0;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentBridgeExecutor.sol#L2-L2"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "[Solidity]: All `verbatim` blocks are considered identical by deduplicator and can incorrectly be unified",
      "description": "The block deduplicator is a step of the opcode-based optimizer which identifies equivalent assembly blocks and merges them into a single one. However, when blocks contained `verbatim`, their comparison was performed incorrectly, leading to the collapse of assembly blocks which are identical except for the contents of the ``verbatim`` items. Since `verbatim` is only available in Yul, compilation of Solidity sources is not affected. For more details check the following [link](https://blog.soliditylang.org/2023/11/08/verbatim-invalid-deduplication-bug/)",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n2: pragma solidity ^0.8.13;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L2-L2"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "[NatSpec] Natspec `@author` is missing from `library`",
      "description": " ",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/SwapParams.sol\n\n4: library SwapDirection {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/SwapParams.sol#L4-L4"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "[NatSpec] Natspec `@dev` is missing from `library`",
      "description": " ",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/SwapParams.sol\n\n4: library SwapDirection {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/SwapParams.sol#L4-L4"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "[NatSpec] Natspec `@notice` is missing from `library`",
      "description": " ",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/SwapParams.sol\n\n4: library SwapDirection {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/SwapParams.sol#L4-L4"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "[NatSpec] Natspec `@title` is missing from `library`",
      "description": " ",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/SwapParams.sol\n\n4: library SwapDirection {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/SwapParams.sol#L4-L4"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "[NatSpec] Natspec `@dev` is missing from `constractor`",
      "description": " ",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "\n\n```solidity\n\nFile: src/UTB.sol\n\n16:     constructor() Owned(msg.sender) {}\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTB.sol#L16-L16"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/UTBExecutor.sol\n\n8:     constructor() Owned(msg.sender) {}\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTBExecutor.sol#L8-L8"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/BaseAdapter.sol\n\n9:     constructor() UTBOwned() {}\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/BaseAdapter.sol#L9-L9"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/DecentBridgeAdapter.sol\n\n21:     constructor(bool _gasIsEth, address _bridgeToken) BaseAdapter() {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/DecentBridgeAdapter.sol#L21-L21"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n29:     constructor() BaseAdapter() {}\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L29-L29"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/UniSwapper.sol\n\n14:     constructor() UTBOwned() {}\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/UniSwapper.sol#L14-L14"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n27:     constructor(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L27-L27"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentBridgeExecutor.sol\n\n12:     constructor(address _weth, bool gasIsEth) Owned(msg.sender) {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentBridgeExecutor.sol#L12-L12"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "[NatSpec] Natspec `@notice` is missing from `constractor`",
      "description": " ",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "\n\n```solidity\n\nFile: src/UTB.sol\n\n16:     constructor() Owned(msg.sender) {}\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTB.sol#L16-L16"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/UTBExecutor.sol\n\n8:     constructor() Owned(msg.sender) {}\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTBExecutor.sol#L8-L8"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/BaseAdapter.sol\n\n9:     constructor() UTBOwned() {}\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/BaseAdapter.sol#L9-L9"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/DecentBridgeAdapter.sol\n\n21:     constructor(bool _gasIsEth, address _bridgeToken) BaseAdapter() {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/DecentBridgeAdapter.sol#L21-L21"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n29:     constructor() BaseAdapter() {}\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L29-L29"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/UniSwapper.sol\n\n14:     constructor() UTBOwned() {}\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/UniSwapper.sol#L14-L14"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n27:     constructor(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L27-L27"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentBridgeExecutor.sol\n\n12:     constructor(address _weth, bool gasIsEth) Owned(msg.sender) {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentBridgeExecutor.sol#L12-L12"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "[NatSpec] Natspec `@param` is missing from `constractor`",
      "description": " ",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/DecentBridgeAdapter.sol\n\n21:     constructor(bool _gasIsEth, address _bridgeToken) BaseAdapter() {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/DecentBridgeAdapter.sol#L21-L21"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n27:     constructor(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L27-L27"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentBridgeExecutor.sol\n\n12:     constructor(address _weth, bool gasIsEth) Owned(msg.sender) {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentBridgeExecutor.sol#L12-L12"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "[NatSpec] Natspec `@dev` is missing from `receive` function",
      "description": " ",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "\n\n```solidity\n\nFile: src/UTB.sol\n\n339:     receive() external payable {}\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTB.sol#L339-L339"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/DecentBridgeAdapter.sol\n\n156:     receive() external payable {}\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/DecentBridgeAdapter.sol#L156-L156"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n218:     receive() external payable {}\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L218-L218"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/UniSwapper.sol\n\n171:     receive() external payable {}\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/UniSwapper.sol#L171-L171"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n337:     receive() external payable {}\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L337-L337"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentBridgeExecutor.sol\n\n85:     receive() external payable {}\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentBridgeExecutor.sol#L85-L85"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "[NatSpec] Natspec `@notice` is missing from `constractor`",
      "description": " ",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "\n\n```solidity\n\nFile: src/UTB.sol\n\n16:     constructor() Owned(msg.sender) {}\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTB.sol#L16-L16"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/UTBExecutor.sol\n\n8:     constructor() Owned(msg.sender) {}\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTBExecutor.sol#L8-L8"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/BaseAdapter.sol\n\n9:     constructor() UTBOwned() {}\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/BaseAdapter.sol#L9-L9"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/DecentBridgeAdapter.sol\n\n21:     constructor(bool _gasIsEth, address _bridgeToken) BaseAdapter() {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/DecentBridgeAdapter.sol#L21-L21"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n29:     constructor() BaseAdapter() {}\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L29-L29"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/UniSwapper.sol\n\n14:     constructor() UTBOwned() {}\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/UniSwapper.sol#L14-L14"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n27:     constructor(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L27-L27"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentBridgeExecutor.sol\n\n12:     constructor(address _weth, bool gasIsEth) Owned(msg.sender) {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentBridgeExecutor.sol#L12-L12"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "[NatSpec] Natspec `@dev` is missing from `struct`",
      "description": " ",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/SwapParams.sol\n\n9: struct SwapParams {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/SwapParams.sol#L9-L9"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "[NatSpec] Natspec `@notice` is missing from `struct`",
      "description": " ",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/SwapParams.sol\n\n9: struct SwapParams {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/SwapParams.sol#L9-L9"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "[NatSpec] Natspec `@param` is missing from `struct`",
      "description": " ",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/SwapParams.sol\n\n9: struct SwapParams {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/SwapParams.sol#L9-L9"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "[NatSpec] Natspec `@param` is missing from `modifier`",
      "description": " ",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n50:     modifier onlyIfWeHaveEnoughReserves(uint256 amount) {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L50-L50"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n55:     modifier userDepositing(uint256 amount) {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L55-L55"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n60:     modifier userIsWithdrawing(uint256 amount) {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L60-L60"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "[NatSpec] Natspec `@param` is missing from `function`",
      "description": " ",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/BaseAdapter.sol\n\n19:     function setBridgeExecutor(address _executor) public onlyOwner {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/BaseAdapter.sol#L19-L19"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/DecentBridgeAdapter.sol\n\n26:     function setRouter(address _router) public onlyOwner {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/DecentBridgeAdapter.sol#L26-L26"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/DecentBridgeAdapter.sol\n\n34:     function registerRemoteBridgeAdapter(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/DecentBridgeAdapter.sol#L34-L34"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/DecentBridgeAdapter.sol\n\n44:     function estimateFees(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/DecentBridgeAdapter.sol#L44-L44"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/DecentBridgeAdapter.sol\n\n67:     function getBridgeToken(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/DecentBridgeAdapter.sol#L67-L67"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/DecentBridgeAdapter.sol\n\n73:     function getBridgedAmount(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/DecentBridgeAdapter.sol#L73-L73"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/DecentBridgeAdapter.sol\n\n81:     function bridge(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/DecentBridgeAdapter.sol#L81-L81"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/DecentBridgeAdapter.sol\n\n127:     function receiveFromBridge(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/DecentBridgeAdapter.sol#L127-L127"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n33:     function setRouter(address _router) public onlyOwner {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L33-L33"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n37:     function setStargateEth(address _sgEth) public onlyOwner {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L37-L37"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n45:     function registerRemoteBridgeAdapter(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L45-L45"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n55:     function getBridgeToken(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L55-L55"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n61:     function getBridgedAmount(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L61-L61"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n69:     function bridge(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L69-L69"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n100:     function getValue(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L100-L100"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n114:     function getLzTxObj(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L114-L114"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n124:     function getDstChainId(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L124-L124"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n134:     function getSrcPoolId(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L134-L134"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n144:     function getDstPoolId(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L144-L144"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n154:     function getDestAdapter(uint chainId) private view returns (address dstAddr) {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L154-L154"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n163:     function callBridge(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L163-L163"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n183:     function sgReceive(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L183-L183"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/UniSwapper.sol\n\n20:     function setRouter(address _router) public onlyOwner {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/UniSwapper.sol#L20-L20"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/UniSwapper.sol\n\n24:     function setWrapped(address payable _wrapped) public onlyOwner {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/UniSwapper.sol#L24-L24"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/UniSwapper.sol\n\n32:     function updateSwapParams(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/UniSwapper.sol#L32-L32"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/UniSwapper.sol\n\n43:     function _refundUser(address user, address token, uint amount) private {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/UniSwapper.sol#L43-L43"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/UniSwapper.sol\n\n47:     function _sendToRecipient(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/UniSwapper.sol#L47-L47"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/UniSwapper.sol\n\n58:     function swap(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/UniSwapper.sol#L58-L58"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/UniSwapper.sol\n\n79:     function _receiveAndWrapIfNeeded(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/UniSwapper.sol#L79-L79"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/UniSwapper.sol\n\n100:     function swapNoPath(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/UniSwapper.sol#L100-L100"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/UniSwapper.sol\n\n123:     function swapExactIn(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/UniSwapper.sol#L123-L123"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/UniSwapper.sol\n\n143:     function swapExactOut(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/UniSwapper.sol#L143-L143"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n67:     /// @inheritdoc IDecentEthRouter\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L67-L67"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n72:     /// @inheritdoc IDecentEthRouter\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L72-L72"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n80:     function _getCallParams(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L80-L80"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n113:     function estimateSendAndCallFee(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L113-L113"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n148:     function _bridgeWithPayload(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L148-L148"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n196:     /// @inheritdoc IDecentEthRouter\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L196-L196"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n217:     /// @inheritdoc IDecentEthRouter\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L217-L217"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n236:     /// @inheritdoc IOFTReceiverV2\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L236-L236"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n284:     /// @inheritdoc IDecentEthRouter\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L284-L284"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n293:     /// @inheritdoc IDecentEthRouter\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L293-L293"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n312:     /// @inheritdoc IDecentEthRouter\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L312-L312"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n321:     /// @inheritdoc IDecentEthRouter\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L321-L321"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n329:     /// @inheritdoc IDecentEthRouter\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L329-L329"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentBridgeExecutor.sol\n\n67:     /// @inheritdoc IDecentBridgeExecutor\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentBridgeExecutor.sol#L67-L67"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Not using the latest version of `prb-math` from dependencies",
      "description": "`prb-math` is an important mathematical library The package.json configuration file says that the project is using an old version of `prb-math`.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "\n\n```solidity\n\nFile: /home/oualid/c4/competitions/2024-01-decent/package.json\n\n//@audit `prb-math` version is \n1: \n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main///home/oualid/c4/competitions/2024-01-decent/package.json#L1-L1"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Establishing Best Practices for Initial Version in package.json",
      "description": "Starting with 0.1.0 or 1.0.0 in package.json adheres to Semantic Versioning (SemVer) standards, implying a more stable and significant release. Initial versions like 0.0.1 or 0.0.0 suggest extreme infancy or instability, which might not accurately reflect the software's development stage, potentially misleading users or contributors about its readiness.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "\n\n```solidity\n\nFile: package.json\n\n//@audit package.json version is 0.0.0\n1: {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//package.json#L1-L1"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Enforcing Lowercase and Underscores Only in the `name` Field of package.json",
      "description": "package.json name variable should only consist of lowercase letters and underscores",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "\n\n```solidity\n\nFile: package.json\n\n//@audit package.json name is @decent.xyz/utb\n1: {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//package.json#L1-L1"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Non constant/immutable state variables are missing a setter post deployment",
      "description": "Non-constant or non-immutable state variables lacking a setter function can create inflexibility in contract operations. If there's no way to update these variables post-deployment, the contract might not adapt to changing conditions or requirements, which can be a significant drawback, especially in upgradable or long-lived contracts. To resolve this, implement setter functions guarded by appropriate access controls, like `onlyOwner` or similar modifiers, so that these variables can be updated as required while maintaining security. This enables smoother contract maintenance and feature upgrades.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/DecentBridgeAdapter.sol\n\n19:     address bridgeToken;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/DecentBridgeAdapter.sol#L19-L19"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n13:     IWETH public weth;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L13-L13"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n15:     IDecentBridgeExecutor public executor;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L15-L15"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n25:     mapping(address => uint256) public balanceOf;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L25-L25"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentBridgeExecutor.sol\n\n9:     IWETH weth;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentBridgeExecutor.sol#L9-L9"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "[NatSpec] Empty constructor body without NatSpec comments",
      "description": " ",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "\n\n```solidity\n\nFile: src/UTB.sol\n\n16:     constructor() Owned(msg.sender) {}\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTB.sol#L16-L16"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/UTBExecutor.sol\n\n8:     constructor() Owned(msg.sender) {}\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTBExecutor.sol#L8-L8"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/BaseAdapter.sol\n\n9:     constructor() UTBOwned() {}\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/BaseAdapter.sol#L9-L9"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n29:     constructor() BaseAdapter() {}\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L29-L29"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/UniSwapper.sol\n\n14:     constructor() UTBOwned() {}\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/UniSwapper.sol#L14-L14"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Using Low-Level Call for Transfers",
      "description": "Utilizing low-level calls like `.call{value: value}` for Ether transfers in Ethereum can be risky, as it can inadvertently allow malicious contract executions through fallback functions. To mitigate these risks and ensure safer Ether transfers, it is recommended to adopt more secure and explicit methods provided by reputable libraries such as OpenZeppelin. Functions like `Address.sendValue()` from OpenZeppelin provide a clearer and safer alternative for sending Ether, as they encapsulate necessary checks and error handling, ensuring that Ether is transferred securely and any errors are appropriately dealt with. This not only enhances the security of your smart contract but also improves code readability and maintainability, aligning with modern Solidity development practices.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "\n\n```solidity\n\nFile: src/UTBExecutor.sol\n\n52:             (success, ) = target.call{value: amount}(payload);\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTBExecutor.sol#L52-L52"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/UTBExecutor.sol\n\n65:             (success, ) = target.call{value: extraNative}(payload);\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTBExecutor.sol#L65-L65"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/UTBExecutor.sol\n\n54:                 (refund.call{value: amount}(\"\"));\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTBExecutor.sol#L54-L54"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/UTBExecutor.sol\n\n67:                 (refund.call{value: extraNative}(\"\"));\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTBExecutor.sol#L67-L67"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentBridgeExecutor.sol\n\n61:         (bool success, ) = target.call{value: amount}(callPayload);\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentBridgeExecutor.sol#L61-L61"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Lack of space near the operator",
      "description": "Lack of space near operators in code can lead to reduced readability, making it more challenging to distinguish between different elements and understand the logic quickly. As a resolution, always include spaces around operators to ensure a clear visual separation, which promotes better maintainability and comprehension of the code.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n//@audit operator : /\n176:             (amt2Bridge * (10000 - SG_FEE_BPS)) / 10000, // the min qty you would accept on the destination, fee is 6 bips\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L176-L176"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n//@audit operator : *\n176:             (amt2Bridge * (10000 - SG_FEE_BPS)) / 10000, // the min qty you would accept on the destination, fee is 6 bips\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L176-L176"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n//@audit operator : -\n176:             (amt2Bridge * (10000 - SG_FEE_BPS)) / 10000, // the min qty you would accept on the destination, fee is 6 bips\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L176-L176"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Avoid mutating function parameters",
      "description": "Function parameters in Solidity are passed by value, meaning they are essentially local copies. Mutating them can lead to confusion and errors because the changes don't persist outside the function. By keeping function parameters immutable, you ensure clarity in code behavior, preventing unintended side-effects. If you need to modify a value based on a parameter, use a local variable inside the function, leaving the original parameter unaltered. By adhering to this practice, you maintain a clear distinction between input data and the internal processing logic, improving code readability and reducing the potential for bugs.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/UniSwapper.sol\n\n//@audit the following parameters are mutated token,\n47:     function _sendToRecipient(\n48:         address recipient,\n49:         address token,\n50:         uint amount\n51:     ) private {\n52:         if (token == address(0)) {\n53:             token = wrapped;\n54:         }\n55:         IERC20(token).transfer(recipient, amount);\n56:     }\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/UniSwapper.sol#L47-L56"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/UniSwapper.sol\n\n//@audit the following parameters are mutated swapParams,\n100:     function swapNoPath(\n101:         SwapParams memory swapParams,\n102:         address receiver,\n103:         address refund\n104:     ) public payable returns (address tokenOut, uint256 amountOut) {\n105:         swapParams = _receiveAndWrapIfNeeded(swapParams);\n106: \n107:         if (swapParams.direction == SwapDirection.EXACT_OUT) {\n108:             _refundUser(\n109:                 refund,\n110:                 swapParams.tokenIn,\n111:                 swapParams.amountIn - swapParams.amountOut\n112:             );\n113:         }\n114: \n115:         uint amt2Recipient = swapParams.direction == SwapDirection.EXACT_OUT\n116:             ? swapParams.amountOut\n117:             : swapParams.amountIn;\n118: \n119:         _sendToRecipient(receiver, swapParams.tokenOut, amt2Recipient);\n120:         return (swapParams.tokenOut, amt2Recipient);\n121:     }\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/UniSwapper.sol#L100-L121"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/UniSwapper.sol\n\n//@audit the following parameters are mutated swapParams,\n123:     function swapExactIn(\n124:         SwapParams memory swapParams, // SwapParams is a struct\n125:         address receiver\n126:     ) public payable routerIsSet returns (uint256 amountOut) {\n127:         swapParams = _receiveAndWrapIfNeeded(swapParams);\n128: \n129:         IV3SwapRouter.ExactInputParams memory params = IV3SwapRouter\n130:             .ExactInputParams({\n131:                 path: swapParams.path,\n132:                 recipient: address(this),\n133:                 amountIn: swapParams.amountIn,\n134:                 amountOutMinimum: swapParams.amountOut\n135:             });\n136: \n137:         IERC20(swapParams.tokenIn).approve(uniswap_router, swapParams.amountIn);\n138:         amountOut = IV3SwapRouter(uniswap_router).exactInput(params);\n139: \n140:         _sendToRecipient(receiver, swapParams.tokenOut, amountOut);\n141:     }\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/UniSwapper.sol#L123-L141"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/UniSwapper.sol\n\n//@audit the following parameters are mutated swapParams,\n143:     function swapExactOut(\n144:         SwapParams memory swapParams,\n145:         address receiver,\n146:         address refundAddress\n147:     ) public payable routerIsSet returns (uint256 amountIn) {\n148:         swapParams = _receiveAndWrapIfNeeded(swapParams);\n149:         IV3SwapRouter.ExactOutputParams memory params = IV3SwapRouter\n150:             .ExactOutputParams({\n151:                 path: swapParams.path,\n152:                 recipient: address(this),\n153:                 //deadline: block.timestamp,\n154:                 amountOut: swapParams.amountOut,\n155:                 amountInMaximum: swapParams.amountIn\n156:             });\n157: \n158:         IERC20(swapParams.tokenIn).approve(uniswap_router, swapParams.amountIn);\n159:         amountIn = IV3SwapRouter(uniswap_router).exactOutput(params);\n160: \n161:         // refund sender\n162:         _refundUser(\n163:             refundAddress,\n164:             swapParams.tokenIn,\n165:             params.amountInMaximum - amountIn\n166:         );\n167: \n168:         _sendToRecipient(receiver, swapParams.tokenOut, swapParams.amountOut);\n169:     }\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/UniSwapper.sol#L143-L169"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "A event should be emitted if a non immutable state variable is set in a constructor",
      "description": " ",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/DecentBridgeAdapter.sol\n\n22:         gasIsEth = _gasIsEth;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/DecentBridgeAdapter.sol#L22-L22"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/DecentBridgeAdapter.sol\n\n23:         bridgeToken = _bridgeToken;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/DecentBridgeAdapter.sol#L23-L23"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n32:         weth = IWETH(_wethAddress);\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L32-L32"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n33:         gasCurrencyIsEth = gasIsEth;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L33-L33"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n34:         executor = IDecentBridgeExecutor(payable(_executor));\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L34-L34"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentBridgeExecutor.sol\n\n13:         weth = IWETH(payable(_weth));\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentBridgeExecutor.sol#L13-L13"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentBridgeExecutor.sol\n\n14:         gasCurrencyIsEth = gasIsEth;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentBridgeExecutor.sol#L14-L14"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "[Solidity]: Order of Argument Evaluation Disrupted in Non-Expression-Split Code by Optimizer Sequences with FullInliner",
      "description": "Function call arguments in Yul are evaluated right to left. This order matters when the argument expressions have side-effects, and changing it may change contract behavior. FullInliner is an optimizer step that can replace a function call with the body of that function. The transformation involves assigning argument expressions to temporary variables, which imposes an explicit evaluation order. FullInliner was written with the assumption that this order does not necessarily have to match usual argument evaluation order because the argument expressions have no side-effects. In most circumstances this assumption is true because the default optimization step sequence contains the ExpressionSplitter step. ExpressionSplitter ensures that the code is in *expression-split form*, which means that function calls cannot appear nested inside expressions, and all function call arguments have to be variables. The assumption is, however, not guaranteed to be true in general. Version 0.6.7 introduced a setting allowing users to specify an arbitrary optimization step sequence, making it possible for the FullInliner to actually encounter argument expressions with side-effects, which can result in behavior differences between optimized and unoptimized bytecode. Contracts compiled without optimization or with the default optimization sequence are not affected. To trigger the bug the user has to explicitly choose compiler settings that contain a sequence with FullInliner step not preceded by ExpressionSplitter. [Ref](https://blog.soliditylang.org/2023/07/19/full-inliner-non-expression-split-argument-evaluation-order-bug/)",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "\n\n```solidity\n\nFile: src/UTB.sol\n\n2: pragma solidity ^0.8.0;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTB.sol#L2-L2"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/UTBExecutor.sol\n\n2: pragma solidity ^0.8.0;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTBExecutor.sol#L2-L2"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/BaseAdapter.sol\n\n2: pragma solidity ^0.8.0;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/BaseAdapter.sol#L2-L2"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/DecentBridgeAdapter.sol\n\n2: pragma solidity ^0.8.0;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/DecentBridgeAdapter.sol#L2-L2"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n2: pragma solidity ^0.8.0;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L2-L2"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/SwapParams.sol\n\n2: pragma solidity ^0.8.0;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/SwapParams.sol#L2-L2"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/UniSwapper.sol\n\n2: pragma solidity ^0.8.0;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/UniSwapper.sol#L2-L2"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n2: pragma solidity ^0.8.13;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L2-L2"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentBridgeExecutor.sol\n\n2: pragma solidity ^0.8.0;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentBridgeExecutor.sol#L2-L2"
          ]
        }
      ]
    },
    {
      "severity": "Gas",
      "title": "Multiple accesses of a mapping/array should use a local variable cache",
      "description": "The instances below point to the second+ access of a value inside a mapping/array, within a function. Caching a mapping's value in a local `storage` or `calldata` variable when the value is accessed [multiple times](https://gist.github.com/IllIllI000/ec23a57daa30a8f8ca8b9681c8ccefb0), saves **~42 gas per access** due to not having to recalculate the key's keccak256 hash (Gkeccak256 - **30 gas**) and that calculation's associated stack operations. Caching an array's struct avoids recalculating the array offsets into memory/calldata",
      "gasSavings": 42,
      "category": null,
      "instances": [
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/DecentBridgeAdapter.sol\n\n92:             destinationBridgeAdapter[dstChainId] != address(0),\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/DecentBridgeAdapter.sol#L92-L92"
          ]
        }
      ]
    },
    {
      "severity": "Gas",
      "title": "Use assembly to check for `address(0)`",
      "description": "*Saves 6 gas per instance*",
      "gasSavings": 72,
      "category": null,
      "instances": [
        {
          "content": "\n\n```solidity\n\nFile: src/UTB.sol\n\n74:         if (swapParams.tokenIn == address(0)) {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTB.sol#L74-L74"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/UTB.sol\n\n97:         if (tokenOut == address(0)) {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTB.sol#L97-L97"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/UTB.sol\n\n142:         if (tokenOut == address(0)) {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTB.sol#L142-L142"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/UTB.sol\n\n215:         if (bridgeToken != address(0)) {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTB.sol#L215-L215"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/UTB.sol\n\n233:         if (address(feeCollector) != address(0)) {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTB.sol#L233-L233"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/UTB.sol\n\n235:             if (fees.feeToken != address(0)) {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTB.sol#L235-L235"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/UTBExecutor.sol\n\n51:         if (token == address(0)) {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTBExecutor.sol#L51-L51"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/DecentBridgeAdapter.sol\n\n92:             destinationBridgeAdapter[dstChainId] != address(0),\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/DecentBridgeAdapter.sol#L92-L92"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n158:             dstAddr != address(0),\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L158-L158"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/UniSwapper.sol\n\n52:         if (token == address(0)) {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/UniSwapper.sol#L52-L52"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/UniSwapper.sol\n\n82:         if (swapParams.tokenIn != address(0)) {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/UniSwapper.sol#L82-L82"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/UniSwapper.sol\n\n96:         require(uniswap_router != address(0), \"router not set\");\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/UniSwapper.sol#L96-L96"
          ]
        }
      ]
    },
    {
      "severity": "Gas",
      "title": "Use assembly in place of `abi.decode` to extract `calldata` values more efficiently",
      "description": "Instead of using abi.decode, we can use assembly to decode our desired calldata values directly. This will allow us to avoid decoding calldata values that we will not use.\nFor more details on how to implement this, check the following [report](https://code4rena.com/reports/2023-05-juicebox#g-04-use-assembly-in-place-of-abidecode-to-extract-calldata-values-more-efficiently)",
      "gasSavings": 0,
      "category": null,
      "instances": [
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n117:         (, , IStargateRouter.lzTxObj memory lzTxObj) = abi.decode(\n118:             additionalArgs,\n119:             (address, LzBridgeData, IStargateRouter.lzTxObj)\n120:         );\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L117-L120"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n117:         (, , IStargateRouter.lzTxObj memory lzTxObj) = abi.decode(\n118:             additionalArgs,\n119:             (address, LzBridgeData, IStargateRouter.lzTxObj)\n120:         );\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L117-L120"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n127:         (, LzBridgeData memory lzBridgeData, ) = abi.decode(\n128:             additionalArgs,\n129:             (address, LzBridgeData, IStargateRouter.lzTxObj)\n130:         );\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L127-L130"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n127:         (, LzBridgeData memory lzBridgeData, ) = abi.decode(\n128:             additionalArgs,\n129:             (address, LzBridgeData, IStargateRouter.lzTxObj)\n130:         );\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L127-L130"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n137:         (, LzBridgeData memory lzBridgeData, ) = abi.decode(\n138:             additionalArgs,\n139:             (address, LzBridgeData, IStargateRouter.lzTxObj)\n140:         );\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L137-L140"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n137:         (, LzBridgeData memory lzBridgeData, ) = abi.decode(\n138:             additionalArgs,\n139:             (address, LzBridgeData, IStargateRouter.lzTxObj)\n140:         );\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L137-L140"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n147:         (, LzBridgeData memory lzBridgeData, ) = abi.decode(\n148:             additionalArgs,\n149:             (address, LzBridgeData, IStargateRouter.lzTxObj)\n150:         );\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L147-L150"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n147:         (, LzBridgeData memory lzBridgeData, ) = abi.decode(\n148:             additionalArgs,\n149:             (address, LzBridgeData, IStargateRouter.lzTxObj)\n150:         );\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L147-L150"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/UniSwapper.sol\n\n36:         (, address receiver, address refund) = abi.decode(\n37:             payload,\n38:             (SwapParams, address, address)\n39:         );\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/UniSwapper.sol#L36-L39"
          ]
        }
      ]
    },
    {
      "severity": "Gas",
      "title": "Optimize Address Storage Value Management with `assembly`",
      "description": " ",
      "gasSavings": 0,
      "category": null,
      "instances": [
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n77:         destinationBridges[_dstChainId] = _routerAddress;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L77-L77"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/UTB.sol\n\n327:         swappers[s.getId()] = swapper;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTB.sol#L327-L327"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/UTB.sol\n\n336:         bridgeAdapters[b.getId()] = bridge;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTB.sol#L336-L336"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/BaseAdapter.sol\n\n20:         bridgeExecutor = _executor;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/BaseAdapter.sol#L20-L20"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/DecentBridgeAdapter.sol\n\n41:         destinationBridgeAdapter[dstChainId] = decentBridgeAdapter;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/DecentBridgeAdapter.sol#L41-L41"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n52:         destinationBridgeAdapter[dstChainId] = decentBridgeAdapter;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L52-L52"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/UniSwapper.sol\n\n21:         uniswap_router = _router;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/UniSwapper.sol#L21-L21"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/UniSwapper.sol\n\n25:         wrapped = _wrapped;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/UniSwapper.sol#L25-L25"
          ]
        }
      ]
    },
    {
      "severity": "Gas",
      "title": "Use assembly to emit events",
      "description": "We can use assembly to emit events efficiently by utilizing `scratch space` and the `free memory pointer`. This will allow us to potentially avoid memory expansion costs. Note: In order to do this optimization safely, we will need to cache and restore the free memory pointer.",
      "gasSavings": 38,
      "category": null,
      "instances": [
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n257:         emit ReceivedDecentEth(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L257-L257"
          ]
        }
      ]
    },
    {
      "severity": "Gas",
      "title": "Using bools for storage incurs overhead",
      "description": "Use uint256(1) and uint256(2) for true/false to avoid a Gwarmaccess (100 gas), and to avoid Gsset (20000 gas) when changing from 'false' to 'true', after having been 'true' in the past. See [source](https://github.com/OpenZeppelin/openzeppelin-contracts/blob/58f635312aa21f947cae5f8578638a85aa2519f5/contracts/security/ReentrancyGuard.sol#L23-L27).",
      "gasSavings": 300,
      "category": null,
      "instances": [
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentBridgeExecutor.sol\n\n//@audit avoid using `bool` type for gasCurrencyIsEth\n10:     bool public gasCurrencyIsEth; // for chains that use ETH as gas currency\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentBridgeExecutor.sol#L10-L10"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n//@audit avoid using `bool` type for gasCurrencyIsEth\n22:     bool public gasCurrencyIsEth; // for chains that use ETH as gas currency\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L22-L22"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/DecentBridgeAdapter.sol\n\n//@audit avoid using `bool` type for gasIsEth\n18:     bool gasIsEth;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/DecentBridgeAdapter.sol#L18-L18"
          ]
        }
      ]
    },
    {
      "severity": "Gas",
      "title": "State variables should be cached in stack variables rather than re-reading them from storage",
      "description": "The instances below point to the second+ access of a state variable within a function. Caching of a state variable replaces each Gwarmaccess (100 gas) with a much cheaper stack read. Other less obvious fixes/optimizations include having local memory caches of state variable structs, or having local caches of state variable contracts/addresses.\n\n*Saves 100 gas per instance*",
      "gasSavings": 388,
      "category": null,
      "instances": [
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/DecentBridgeAdapter.sol\n\n114:             IERC20(bridgeToken).approve(address(router), amt2Bridge);\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/DecentBridgeAdapter.sol#L114-L114"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/UniSwapper.sol\n\n91:         IWETH(wrapped).deposit{value: swapParams.amountIn}();\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/UniSwapper.sol#L91-L91"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/UniSwapper.sol\n\n138:         amountOut = IV3SwapRouter(uniswap_router).exactInput(params);\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/UniSwapper.sol#L138-L138"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/UniSwapper.sol\n\n159:         amountIn = IV3SwapRouter(uniswap_router).exactOutput(params);\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/UniSwapper.sol#L159-L159"
          ]
        }
      ]
    },
    {
      "severity": "Gas",
      "title": "Use calldata instead of memory for function arguments that do not get mutated",
      "description": "Mark data types as `calldata` instead of `memory` where possible. This makes it so that the data is not automatically loaded into memory. If the data passed into the function does not need to be changed (like updating values in an array), it can be passed in as `calldata`. The one exception to this is if the argument must later be passed into another function that takes an argument that specifies `memory` storage.",
      "gasSavings": 0,
      "category": null,
      "instances": [
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/DecentBridgeAdapter.sol\n\n//@audit Make `postBridge` as a calldata\n45:         SwapInstructions memory postBridge,\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/DecentBridgeAdapter.sol#L45-L45"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/DecentBridgeAdapter.sol\n\n//@audit Make `postBridge` as a calldata\n83:         SwapInstructions memory postBridge,\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/DecentBridgeAdapter.sol#L83-L83"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/DecentBridgeAdapter.sol\n\n//@audit Make `payload` as a calldata\n87:         bytes memory payload,\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/DecentBridgeAdapter.sol#L87-L87"
          ]
        }
      ]
    },
    {
      "severity": "Gas",
      "title": "With assembly, `.call (bool success)` transfer can be done gas-optimized",
      "description": "`return` data `(bool success,)` has to be stored due to EVM architecture, but in a usage like below, `out` and `outsize` values are given (0,0), this storage disappears and gas optimization is provided.",
      "gasSavings": 0,
      "category": null,
      "instances": [
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentBridgeExecutor.sol\n\n61:         (bool success, ) = target.call{value: amount}(callPayload);\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentBridgeExecutor.sol#L61-L61"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/UTBExecutor.sol\n\n52:             (success, ) = target.call{value: amount}(payload);\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTBExecutor.sol#L52-L52"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/UTBExecutor.sol\n\n54:                 (refund.call{value: amount}(\"\"));\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTBExecutor.sol#L54-L54"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/UTBExecutor.sol\n\n65:             (success, ) = target.call{value: extraNative}(payload);\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTBExecutor.sol#L65-L65"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/UTBExecutor.sol\n\n67:                 (refund.call{value: extraNative}(\"\"));\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTBExecutor.sol#L67-L67"
          ]
        }
      ]
    },
    {
      "severity": "Gas",
      "title": "Use custom errors rather than `revert()`/`require()` strings to save gas",
      "description": "Custom errors are available from solidity version 0.8.4. Custom errors save [**~50 gas**](https://gist.github.com/IllIllI000/ad1bd0d29a0101b25e57c293b4b0c746) each time they're hit by [avoiding having to allocate and store the revert string](https://blog.soliditylang.org/2021/04/21/custom-errors/#errors-in-depth). Not defining the strings also save deployment gas",
      "gasSavings": 0,
      "category": null,
      "instances": [
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n38:         require(gasCurrencyIsEth, \"Gas currency is not ETH\");\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L38-L38"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n43:         require(\n44:             address(dcntEth) == msg.sender,\n45:             \"DecentEthRouter: only lz App can call\"\n46:         );\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L43-L46"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n51:         require(weth.balanceOf(address(this)) > amount, \"not enough reserves\");\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L51-L51"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n62:         require(balance >= amount, \"not enough balance\");\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L62-L62"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/UTB.sol\n\n75:             require(msg.value >= swapParams.amountIn, \"not enough native\");\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTB.sol#L75-L75"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/BaseAdapter.sol\n\n12:         require(\n13:             msg.sender == address(bridgeExecutor),\n14:             \"Only bridge executor can call this\"\n15:         );\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/BaseAdapter.sol#L12-L15"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/DecentBridgeAdapter.sol\n\n91:         require(\n92:             destinationBridgeAdapter[dstChainId] != address(0),\n93:             string.concat(\"dst chain address not set \")\n94:         );\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/DecentBridgeAdapter.sol#L91-L94"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n157:         require(\n158:             dstAddr != address(0),\n159:             string.concat(\"dst chain address not set \")\n160:         );\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L157-L160"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/UniSwapper.sol\n\n96:         require(uniswap_router != address(0), \"router not set\");\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/UniSwapper.sol#L96-L96"
          ]
        }
      ]
    },
    {
      "severity": "Gas",
      "title": "Divisions which do not divide by -X cannot overflow or overflow so such operations can be unchecked to save gas",
      "description": "Make such found divisions are unchecked when ensured it is safe to do so",
      "gasSavings": 0,
      "category": null,
      "instances": [
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n66:         return (amt2Bridge * (1e4 - SG_FEE_BPS)) / 1e4;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L66-L66"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n176:             (amt2Bridge * (10000 - SG_FEE_BPS)) / 10000, // the min qty you would accept on the destination, fee is 6 bips\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L176-L176"
          ]
        }
      ]
    },
    {
      "severity": "Gas",
      "title": "`require()`/`revert()` strings longer than 32 bytes cost extra gas",
      "description": "Each extra memory word of bytes past the original 32 [incurs an MSTORE](https://gist.github.com/hrkrshnn/ee8fabd532058307229d65dcd5836ddc#consider-having-short-revert-strings) which costs **3 gas**",
      "gasSavings": 36,
      "category": null,
      "instances": [
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n43:         require(\n44:             address(dcntEth) == msg.sender,\n45:             \"DecentEthRouter: only lz App can call\"\n46:         );\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L43-L46"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/BaseAdapter.sol\n\n12:         require(\n13:             msg.sender == address(bridgeExecutor),\n14:             \"Only bridge executor can call this\"\n15:         );\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/BaseAdapter.sol#L12-L15"
          ]
        }
      ]
    },
    {
      "severity": "Gas",
      "title": "Reduce gas usage by moving to Solidity 0.8.19 or later",
      "description": "See [this](https://blog.soliditylang.org/2023/02/22/solidity-0.8.19-release-announcement/#preventing-dead-code-in-runtime-bytecode) link for the full details",
      "gasSavings": 0,
      "category": null,
      "instances": [
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentBridgeExecutor.sol\n\n2: pragma solidity ^0.8.0;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentBridgeExecutor.sol#L2-L2"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n2: pragma solidity ^0.8.13;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L2-L2"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/UTB.sol\n\n2: pragma solidity ^0.8.0;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTB.sol#L2-L2"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/UTBExecutor.sol\n\n2: pragma solidity ^0.8.0;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTBExecutor.sol#L2-L2"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/BaseAdapter.sol\n\n2: pragma solidity ^0.8.0;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/BaseAdapter.sol#L2-L2"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/DecentBridgeAdapter.sol\n\n2: pragma solidity ^0.8.0;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/DecentBridgeAdapter.sol#L2-L2"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n2: pragma solidity ^0.8.0;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L2-L2"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/SwapParams.sol\n\n2: pragma solidity ^0.8.0;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/SwapParams.sol#L2-L2"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/UniSwapper.sol\n\n2: pragma solidity ^0.8.0;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/UniSwapper.sol#L2-L2"
          ]
        }
      ]
    },
    {
      "severity": "Gas",
      "title": "Optimize names to save gas",
      "description": "`public`/`external` function names and `public` member variable names can be optimized to save gas. See [this](https://gist.github.com/IllIllI000/a5d8b486a8259f9f77891a919febd1a9) link for an example of how it works. Below are the interfaces/abstract contracts that can be optimized so that the most frequently-called functions use the least amount of gas possible during method lookup. Method IDs that have two leading zero bytes can save **128 gas** each during deployment, and renaming functions to have lower method IDs will save **22 gas** per call, [per sorted position shifted](https://medium.com/joyso/solidity-how-does-function-name-affect-gas-consumption-in-smart-contract-47d270d8ac92)",
      "gasSavings": 110,
      "category": null,
      "instances": [
        {
          "content": "\n\n```solidity\n\nFile: src/UTB.sol\n\n// @audit setExecutor(address) ==> setExecutor_1ow(address),0000d9ab\n// @audit registerSwapper(address) ==> registerSwapper_O2B(address),0000e1f1\n// @audit registerBridge(address) ==> registerBridge_uav(address),00005881\n15: contract UTB is Owned {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTB.sol#L15-L15"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/BaseAdapter.sol\n\n// @audit setBridgeExecutor(address) ==> setBridgeExecutor_yR(address),0000aae0\n6: contract BaseAdapter is UTBOwned {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/BaseAdapter.sol#L6-L6"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/DecentBridgeAdapter.sol\n\n// @audit setRouter(address) ==> setRouter_Pkc(address),00004a73\n// @audit registerRemoteBridgeAdapter(uint256,uint16,address) ==> registerRemoteBridgeAdapter_SxA(uint256,uint16,address),000061da\n12: contract DecentBridgeAdapter is BaseAdapter, IBridgeAdapter {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/DecentBridgeAdapter.sol#L12-L12"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n// @audit setRouter(address) ==> setRouter_Pkc(address),00004a73\n// @audit setStargateEth(address) ==> setStargateEth_wm8(address),00003c5b\n// @audit registerRemoteBridgeAdapter(uint256,uint16,address) ==> registerRemoteBridgeAdapter_SxA(uint256,uint16,address),000061da\n17: contract StargateBridgeAdapter is\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L17-L17"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/UniSwapper.sol\n\n// @audit setRouter(address) ==> setRouter_Pkc(address),00004a73\n13: contract UniSwapper is UTBOwned, ISwapper {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/UniSwapper.sol#L13-L13"
          ]
        }
      ]
    },
    {
      "severity": "Gas",
      "title": "Not using the named return variables anywhere in the function is confusing",
      "description": "Consider changing the variable to be an unnamed one, since the variable is never assigned, nor is it returned by name. If the optimizer is not turned on, leaving the code as it is will also waste gas for the stack variable.",
      "gasSavings": 0,
      "category": null,
      "instances": [
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n// @audit nativeFee\n// @audit zroFee\n113:     function estimateSendAndCallFee(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L113-L113"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/UTB.sol\n\n// @audit tokenOut\n// @audit amountOut\n52:     function performSwap(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTB.sol#L52-L52"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/DecentBridgeAdapter.sol\n\n// @audit nativeFee\n// @audit zroFee\n44:     function estimateFees(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/DecentBridgeAdapter.sol#L44-L44"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n// @audit value\n100:     function getValue(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L100-L100"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/UniSwapper.sol\n\n// @audit _swapParams\n79:     function _receiveAndWrapIfNeeded(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/UniSwapper.sol#L79-L79"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/UniSwapper.sol\n\n// @audit tokenOut\n// @audit amountOut\n100:     function swapNoPath(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/UniSwapper.sol#L100-L100"
          ]
        }
      ]
    },
    {
      "severity": "Gas",
      "title": "Enable Solidity's optimizer",
      "description": "Make sure Solidity's optimizer is enabled. It reduces gas costs. If you want to gas optimize for contract deployment (costs less to deploy a contract) then set the Solidity optimizer at a low number. If you want to optimize for run-time gas costs (when functions are called on a contract) then set the optimizer to a high number.\nSet the optimization value higher than 800 in your hardhat.config.ts file.",
      "gasSavings": 0,
      "category": null,
      "instances": [
        {
          "content": "\n\n```solidity\n\nFile: hardhat.config.ts\n\n//@audit /home/oualid/c4/competitions/2024-01-decent/hardhat.config.ts\n1: \n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//hardhat.config.ts#L1-L1"
          ]
        }
      ]
    },
    {
      "severity": "Gas",
      "title": "Constructors can be marked `payable`",
      "description": "Payable functions cost less gas to execute, since the compiler does not have to add extra checks to ensure that a payment wasn't provided.A constructor can safely be marked as payable, since only the deployer would be able to pass funds, and the project itself would not pass any funds.",
      "gasSavings": 168,
      "category": null,
      "instances": [
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentBridgeExecutor.sol\n\n12:     constructor(address _weth, bool gasIsEth) Owned(msg.sender) {\n13:         weth = IWETH(payable(_weth));\n14:         gasCurrencyIsEth = gasIsEth;\n15:     }\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentBridgeExecutor.sol#L12-L15"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n27:     constructor(\n28:         address payable _wethAddress,\n29:         bool gasIsEth,\n30:         address _executor\n31:     ) Owned(msg.sender) {\n32:         weth = IWETH(_wethAddress);\n33:         gasCurrencyIsEth = gasIsEth;\n34:         executor = IDecentBridgeExecutor(payable(_executor));\n35:     }\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L27-L35"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/UTB.sol\n\n16:     constructor() Owned(msg.sender) {}\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTB.sol#L16-L16"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/UTBExecutor.sol\n\n8:     constructor() Owned(msg.sender) {}\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTBExecutor.sol#L8-L8"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/BaseAdapter.sol\n\n9:     constructor() UTBOwned() {}\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/BaseAdapter.sol#L9-L9"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/DecentBridgeAdapter.sol\n\n21:     constructor(bool _gasIsEth, address _bridgeToken) BaseAdapter() {\n22:         gasIsEth = _gasIsEth;\n23:         bridgeToken = _bridgeToken;\n24:     }\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/DecentBridgeAdapter.sol#L21-L24"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n29:     constructor() BaseAdapter() {}\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L29-L29"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/UniSwapper.sol\n\n14:     constructor() UTBOwned() {}\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/UniSwapper.sol#L14-L14"
          ]
        }
      ]
    },
    {
      "severity": "Gas",
      "title": "Using `private` rather than `public` for constants, saves gas",
      "description": "If needed, the values can be read from the verified contract source code, or if there are multiple values there can be a single getter function that [returns a tuple](https://github.com/code-423n4/2022-08-frax/blob/90f55a9ce4e25bceed3a74290b854341d8de6afa/src/contracts/FraxlendPair.sol#L156-L178) of the values of all currently-public constants. Saves **3406-3606 gas** in deployment gas due to the compiler not having to create non-payable getter functions for deployment calldata, not having to store the bytes of the value outside of where it's used, and not adding another entry to the method ID table",
      "gasSavings": 0,
      "category": null,
      "instances": [
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n17:     uint8 public constant MT_ETH_TRANSFER = 0;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L17-L17"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n18:     uint8 public constant MT_ETH_TRANSFER_WITH_PAYLOAD = 1;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L18-L18"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n20:     uint16 public constant PT_SEND_AND_CALL = 1;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L20-L20"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/DecentBridgeAdapter.sol\n\n13:     uint8 public constant BRIDGE_ID = 0;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/DecentBridgeAdapter.sol#L13-L13"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n22:     uint8 public constant BRIDGE_ID = 1;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L22-L22"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n23:     uint8 public constant SG_FEE_BPS = 6;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L23-L23"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/UniSwapper.sol\n\n16:     uint8 public constant SWAPPER_ID = 0;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/UniSwapper.sol#L16-L16"
          ]
        }
      ]
    },
    {
      "severity": "Gas",
      "title": "`private` functions only called once can be inlined to save gas",
      "description": "Not inlining costs 20 to 40 gas because of two extra JUMP instructions and additional stack operations needed for function calls.",
      "gasSavings": 0,
      "category": null,
      "instances": [
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentBridgeExecutor.sol\n\n24:     function _executeWeth(\n25:         address from,\n26:         address target,\n27:         uint256 amount,\n28:         bytes memory callPayload\n29:     ) private {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentBridgeExecutor.sol#L24-L29"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentBridgeExecutor.sol\n\n54:     function _executeEth(\n55:         address from,\n56:         address target,\n57:         uint256 amount,\n58:         bytes memory callPayload\n59:     ) private {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentBridgeExecutor.sol#L54-L59"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/UTB.sol\n\n168:     function swapAndModifyPostBridge(\n169:         BridgeInstructions memory instructions\n170:     )\n171:         private\n172:         returns (\n173:             uint256 amount2Bridge,\n174:             BridgeInstructions memory updatedInstructions\n175:         )\n176:     {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTB.sol#L168-L176"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/UTB.sol\n\n207:     function approveAndCheckIfNative(\n208:         BridgeInstructions memory instructions,\n209:         uint256 amt2Bridge\n210:     ) private returns (bool) {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTB.sol#L207-L210"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/UTB.sol\n\n282:     function callBridge(\n283:         uint256 amt2Bridge,\n284:         uint bridgeFee,\n285:         BridgeInstructions memory instructions\n286:     ) private returns (bytes memory) {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTB.sol#L282-L286"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n114:     function getLzTxObj(\n115:         bytes calldata additionalArgs\n116:     ) private pure returns (IStargateRouter.lzTxObj memory) {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L114-L116"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n124:     function getDstChainId(\n125:         bytes calldata additionalArgs\n126:     ) private pure returns (uint16) {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L124-L126"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n134:     function getSrcPoolId(\n135:         bytes calldata additionalArgs\n136:     ) private pure returns (uint120) {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L134-L136"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n144:     function getDstPoolId(\n145:         bytes calldata additionalArgs\n146:     ) private pure returns (uint120) {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L144-L146"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n154:     function getDestAdapter(uint chainId) private view returns (address dstAddr) {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L154-L154"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n163:     function callBridge(\n164:         uint256 amt2Bridge,\n165:         uint256 dstChainId,\n166:         bytes memory bridgePayload,\n167:         bytes calldata additionalArgs,\n168:         address payable refund\n169:     ) private {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L163-L169"
          ]
        }
      ]
    },
    {
      "severity": "Gas",
      "title": "Functions guaranteed to revert when called by normal users can be marked `payable`",
      "description": "If a function modifier such as `onlyOwner` is used, the function will revert if a normal user tries to pay the function. Marking the function as `payable` will lower the gas cost for legitimate callers because the compiler will not include checks for whether a payment was provided.The extra opcodes avoided are `CALLVALUE`(2), `DUP1`(3), `ISZERO`(3), `PUSH2`(3), `JUMPI`(10), `PUSH1`(3), `DUP1`(3), `REVERT`(0), `JUMPDEST`(1), `POP`(2), which costs an average of about ** 21 gas per call ** to the function, in addition to the extra deployment cost",
      "gasSavings": 504,
      "category": null,
      "instances": [
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentBridgeExecutor.sol\n\n68:     function execute(\n69:         address from,\n70:         address target,\n71:         bool deliverEth,\n72:         uint256 amount,\n73:         bytes memory callPayload\n74:     ) public onlyOwner {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentBridgeExecutor.sol#L68-L74"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n68:     function registerDcntEth(address _addr) public onlyOwner {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L68-L68"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n73:     function addDestinationBridge(\n74:         uint16 _dstChainId,\n75:         address _routerAddress\n76:     ) public onlyOwner {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L73-L76"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n237:     function onOFTReceived(\n238:         uint16 _srcChainId,\n239:         bytes calldata,\n240:         uint64,\n241:         bytes32,\n242:         uint _amount,\n243:         bytes memory _payload\n244:     ) external override onlyLzApp {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L237-L244"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n285:     function redeemEth(\n286:         uint256 amount\n287:     ) public onlyIfWeHaveEnoughReserves(amount) {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L285-L287"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n294:     function redeemWeth(\n295:         uint256 amount\n296:     ) public onlyIfWeHaveEnoughReserves(amount) {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L294-L296"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n313:     function removeLiquidityEth(\n314:         uint256 amount\n315:     ) public onlyEthChain userIsWithdrawing(amount) {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L313-L315"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/UTB.sol\n\n28:     function setExecutor(address _executor) public onlyOwner {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTB.sol#L28-L28"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/UTB.sol\n\n36:     function setWrapped(address payable _wrapped) public onlyOwner {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTB.sol#L36-L36"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/UTB.sol\n\n44:     function setFeeCollector(address payable _feeCollector) public onlyOwner {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTB.sol#L44-L44"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/UTB.sol\n\n325:     function registerSwapper(address swapper) public onlyOwner {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTB.sol#L325-L325"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/UTB.sol\n\n334:     function registerBridge(address bridge) public onlyOwner {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTB.sol#L334-L334"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/UTBExecutor.sol\n\n41:     function execute(\n42:         address target,\n43:         address paymentOperator,\n44:         bytes memory payload,\n45:         address token,\n46:         uint amount,\n47:         address payable refund,\n48:         uint extraNative\n49:     ) public onlyOwner {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTBExecutor.sol#L41-L49"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/BaseAdapter.sol\n\n19:     function setBridgeExecutor(address _executor) public onlyOwner {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/BaseAdapter.sol#L19-L19"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/DecentBridgeAdapter.sol\n\n26:     function setRouter(address _router) public onlyOwner {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/DecentBridgeAdapter.sol#L26-L26"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/DecentBridgeAdapter.sol\n\n34:     function registerRemoteBridgeAdapter(\n35:         uint256 dstChainId,\n36:         uint16 dstLzId,\n37:         address decentBridgeAdapter\n38:     ) public onlyOwner {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/DecentBridgeAdapter.sol#L34-L38"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/DecentBridgeAdapter.sol\n\n127:     function receiveFromBridge(\n128:         SwapInstructions memory postBridge,\n129:         address target,\n130:         address paymentOperator,\n131:         bytes memory payload,\n132:         address payable refund\n133:     ) public onlyExecutor {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/DecentBridgeAdapter.sol#L127-L133"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n33:     function setRouter(address _router) public onlyOwner {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L33-L33"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n37:     function setStargateEth(address _sgEth) public onlyOwner {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L37-L37"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n45:     function registerRemoteBridgeAdapter(\n46:         uint256 dstChainId,\n47:         uint16 dstLzId,\n48:         address decentBridgeAdapter\n49:     ) public onlyOwner {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L45-L49"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n183:     function sgReceive(\n184:         uint16, // _srcChainid\n185:         bytes memory, // _srcAddress\n186:         uint256, // _nonce\n187:         address, // _token\n188:         uint256, // amountLD\n189:         bytes memory payload\n190:     ) external override onlyExecutor {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L183-L190"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/UniSwapper.sol\n\n20:     function setRouter(address _router) public onlyOwner {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/UniSwapper.sol#L20-L20"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/UniSwapper.sol\n\n24:     function setWrapped(address payable _wrapped) public onlyOwner {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/UniSwapper.sol#L24-L24"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/UniSwapper.sol\n\n58:     function swap(\n59:         bytes memory swapPayload\n60:     )\n61:         external\n62:         onlyUtb\n63:         returns (address tokenOut, uint256 amountOut)\n64:     {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/UniSwapper.sol#L58-L64"
          ]
        }
      ]
    },
    {
      "severity": "Gas",
      "title": "Avoid updating storage when the value hasn't changed to save gas",
      "description": "If the old value is equal to the new value, not re-storing the value will avoid a Gsreset (**2900 gas**), potentially at the expense of a Gcoldsload (**2100 gas**) or a Gwarmaccess (**100 gas**)",
      "gasSavings": 8000,
      "category": null,
      "instances": [
        {
          "content": "\n\n```solidity\n\nFile: src/UTB.sol\n\n28:     function setExecutor(address _executor) public onlyOwner {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTB.sol#L28-L28"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/UTB.sol\n\n36:     function setWrapped(address payable _wrapped) public onlyOwner {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTB.sol#L36-L36"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/UTB.sol\n\n44:     function setFeeCollector(address payable _feeCollector) public onlyOwner {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTB.sol#L44-L44"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/BaseAdapter.sol\n\n19:     function setBridgeExecutor(address _executor) public onlyOwner {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/BaseAdapter.sol#L19-L19"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/DecentBridgeAdapter.sol\n\n26:     function setRouter(address _router) public onlyOwner {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/DecentBridgeAdapter.sol#L26-L26"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n33:     function setRouter(address _router) public onlyOwner {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L33-L33"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n37:     function setStargateEth(address _sgEth) public onlyOwner {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L37-L37"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/UniSwapper.sol\n\n20:     function setRouter(address _router) public onlyOwner {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/UniSwapper.sol#L20-L20"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/UniSwapper.sol\n\n24:     function setWrapped(address payable _wrapped) public onlyOwner {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/UniSwapper.sol#L24-L24"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/UniSwapper.sol\n\n32:     function updateSwapParams(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/UniSwapper.sol#L32-L32"
          ]
        }
      ]
    },
    {
      "severity": "Gas",
      "title": "Usage of `uints`/`ints` smaller than 32 bytes (256 bits) incurs overhead",
      "description": "> When using elements that are smaller than 32 bytes, your contract's gas usage may be higher. This is because the EVM operates on 32 bytes at a time. Therefore, if the element is smaller than that, the EVM must use more operations in order to reduce the size of the element from 32 bytes to the desired size.\nhttps://docs.soliditylang.org/en/v0.8.11/internals/layout_in_storage.html\nEach operation involving a `uint8` costs an extra [** 22 - 28 gas **](https://gist.github.com/IllIllI000/9388d20c70f9a4632eb3ca7836f54977) (depending on whether the other operand is also a variable of type `uint8`) as compared to ones involving `uint256`, due to the compiler having to clear the higher bits of the memory word before operating on the `uint8`, as well as the associated stack operations of doing so. Use a larger size then downcast where needed",
      "gasSavings": 0,
      "category": null,
      "instances": [
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n//@audit `_dstChainId` is `uint16`\n74:         uint16 _dstChainId,\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L74-L74"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n//@audit `msgType` is `uint8`\n81:         uint8 msgType,\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L81-L81"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n//@audit `_dstChainId` is `uint16`\n83:         uint16 _dstChainId,\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L83-L83"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n//@audit `_dstGasForCall` is `uint64`\n84:         uint64 _dstGasForCall,\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L84-L84"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n//@audit `msgType` is `uint8`\n114:         uint8 msgType,\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L114-L114"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n//@audit `_dstChainId` is `uint16`\n115:         uint16 _dstChainId,\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L115-L115"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n//@audit `_dstGasForCall` is `uint64`\n118:         uint64 _dstGasForCall,\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L118-L118"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n//@audit `msgType` is `uint8`\n149:         uint8 msgType,\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L149-L149"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n//@audit `_dstChainId` is `uint16`\n150:         uint16 _dstChainId,\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L150-L150"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n//@audit `_dstGasForCall` is `uint64`\n153:         uint64 _dstGasForCall,\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L153-L153"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n//@audit `_dstChainId` is `uint16`\n198:         uint16 _dstChainId,\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L198-L198"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n//@audit `_dstGasForCall` is `uint64`\n202:         uint64 _dstGasForCall,\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L202-L202"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n//@audit `_dstChainId` is `uint16`\n219:         uint16 _dstChainId,\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L219-L219"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n//@audit `_dstGasForCall` is `uint64`\n222:         uint64 _dstGasForCall,\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L222-L222"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n//@audit `_srcChainId` is `uint16`\n238:         uint16 _srcChainId,\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L238-L238"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n//@audit `` is `uint64`\n240:         uint64,\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L240-L240"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n//@audit `msgType` is `uint8`\n245:         (uint8 msgType, address _from, address _to, bool deliverEth) = abi\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L245-L245"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/DecentBridgeAdapter.sol\n\n//@audit `` is `uint8`\n30:     function getId() public pure returns (uint8) {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/DecentBridgeAdapter.sol#L30-L30"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/DecentBridgeAdapter.sol\n\n//@audit `dstLzId` is `uint16`\n36:         uint16 dstLzId,\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/DecentBridgeAdapter.sol#L36-L36"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/DecentBridgeAdapter.sol\n\n//@audit `dstGas` is `uint64`\n48:         uint64 dstGas,\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/DecentBridgeAdapter.sol#L48-L48"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/DecentBridgeAdapter.sol\n\n//@audit `dstGas` is `uint64`\n96:         uint64 dstGas = abi.decode(additionalArgs, (uint64));\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/DecentBridgeAdapter.sol#L96-L96"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n//@audit `` is `uint8`\n41:     function getId() public pure returns (uint8) {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L41-L41"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n//@audit `dstLzId` is `uint16`\n47:         uint16 dstLzId,\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L47-L47"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n//@audit `` is `uint16`\n126:     ) private pure returns (uint16) {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L126-L126"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n//@audit `` is `uint120`\n136:     ) private pure returns (uint120) {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L136-L136"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n//@audit `` is `uint120`\n146:     ) private pure returns (uint120) {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L146-L146"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n//@audit `` is `uint16`\n184:         uint16, // _srcChainid\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L184-L184"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/UniSwapper.sol\n\n//@audit `` is `uint8`\n28:     function getId() public pure returns (uint8) {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/UniSwapper.sol#L28-L28"
          ]
        }
      ]
    },
    {
      "severity": "Gas",
      "title": "State variables only set in the constructor should be declared `immutable`",
      "description": "Avoids a Gsset(** 20000 gas**) in the constructor, and replaces the first access in each transaction(Gcoldsload - ** 2100 gas **) and each access thereafter(Gwarmacces - ** 100 gas **) with a`PUSH32`(** 3 gas **).\n\nWhile`string`s are not value types, and therefore cannot be`immutable` / `constant` if not hard - coded outside of the constructor, the same behavior can be achieved by making the current contract `abstract` with `virtual` functions for the`string` accessors, and having a child contract override the functions with the hard - coded implementation - specific values.",
      "gasSavings": 6291,
      "category": null,
      "instances": [
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n32:         weth = IWETH(_wethAddress);\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L32-L32"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n33:         gasCurrencyIsEth = gasIsEth;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L33-L33"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/DecentBridgeAdapter.sol\n\n22:         gasIsEth = _gasIsEth;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/DecentBridgeAdapter.sol#L22-L22"
          ]
        }
      ]
    },
    {
      "severity": "Gas",
      "title": "`>=`/`<=` costs less gas than `>`/`<`",
      "description": "The compiler uses opcodes `GT` and `ISZERO` for solidity code that uses `>`, but only requires `LT` for `>=`, [which saves **3 gas**](https://gist.github.com/IllIllI000/3dc79d25acccfa16dee4e83ffdc6ffde)",
      "gasSavings": 9,
      "category": null,
      "instances": [
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n51:         require(weth.balanceOf(address(this)) > amount, \"not enough reserves\");\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L51-L51"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n266:         if (weth.balanceOf(address(this)) < _amount) {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L266-L266"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/UTBExecutor.sol\n\n64:         if (extraNative > 0) {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTBExecutor.sol#L64-L64"
          ]
        }
      ]
    },
    {
      "severity": "Gas",
      "title": "Use assembly to validate `msg.sender`",
      "description": "We can use assembly to efficiently validate msg.sender with the least amount of opcodes necessary. For more details check the following report [Here](https://code4rena.com/reports/2023-05-juicebox#g-06-use-assembly-to-validate-msgsender)",
      "gasSavings": 24,
      "category": null,
      "instances": [
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n44:             address(dcntEth) == msg.sender,\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L44-L44"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/BaseAdapter.sol\n\n13:             msg.sender == address(bridgeExecutor),\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/BaseAdapter.sol#L13-L13"
          ]
        }
      ]
    },
    {
      "severity": "Gas",
      "title": "Consider activating via-ir for deploying",
      "description": "The Solidity compiler's Intermediate Representation (IR) based code generator, which can be activated using --via-ir on the command line or {\"\"viaIR\"\": true} in the options, serves a dual purpose. Firstly, it boosts the transparency and audibility of code generation, which enhances developers' comprehension and control over the contract's final bytecode. Secondly, it enables more sophisticated optimization passes that span multiple functions, thereby potentially leading to more efficient bytecode.\nIt's important to note that using the IR- based code generator may lengthen compile times due to the extra optimization steps.Therefore, it's advised to test your contract with and without this option enabled to measure the performance and gas cost implications.If the IR- based code generator significantly enhances your contract's performance or reduces gas costs, consider using the --via-ir flag during deployment.This way, you can leverage more advanced compiler optimizations without hindering your development workflow.",
      "gasSavings": 250,
      "category": null,
      "instances": [
        {
          "content": "\n\n```solidity\n\nFile: hardhat.config.ts\n\n//@audit /2024-01-decent/hardhat.config.ts\n1: \n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//hardhat.config.ts#L1-L1"
          ]
        }
      ]
    },
    {
      "severity": "Gas",
      "title": "State variables can be packed into fewer storage slots",
      "description": "If variables occupying the same slot are both written the same function or by the constructor, avoids a separate Gsset (**20000 gas**). Reads of the variables can also be cheaper",
      "gasSavings": 2000,
      "category": null,
      "instances": [
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n// @audit from 5 to 4 you need to change the structure elements order to: , mapping, mapping, mapping, address, IStargateRouter\n017: contract StargateBridgeAdapter is\n018:     BaseAdapter,\n019:     IBridgeAdapter,\n020:     IStargateReceiver\n021: {\n022:     uint8 public constant BRIDGE_ID = 1;\n023:     uint8 public constant SG_FEE_BPS = 6;\n024:     address public stargateEth;\n025:     mapping(uint256 => address) public destinationBridgeAdapter;\n026:     mapping(uint256 => uint16) lzIdLookup;\n027:     mapping(uint16 => uint256) chainIdLookup;\n028: \n029:     constructor() BaseAdapter() {}\n030: \n031:     IStargateRouter public router;\n032: \n033:     function setRouter(address _router) public onlyOwner {\n034:         router = IStargateRouter(_router);\n035:     }\n036: \n037:     function setStargateEth(address _sgEth) public onlyOwner {\n038:         stargateEth = _sgEth;\n039:     }\n040: \n041:     function getId() public pure returns (uint8) {\n042:         return BRIDGE_ID;\n043:     }\n044: \n045:     function registerRemoteBridgeAdapter(\n046:         uint256 dstChainId,\n047:         uint16 dstLzId,\n048:         address decentBridgeAdapter\n049:     ) public onlyOwner {\n050:         lzIdLookup[dstChainId] = dstLzId;\n051:         chainIdLookup[dstLzId] = dstChainId;\n052:         destinationBridgeAdapter[dstChainId] = decentBridgeAdapter;\n053:     }\n054: \n055:     function getBridgeToken(\n056:         bytes calldata additionalArgs\n057:     ) external pure returns (address bridgeToken) {\n058:         bridgeToken = abi.decode(additionalArgs, (address));\n059:     }\n060: \n061:     function getBridgedAmount(\n062:         uint256 amt2Bridge,\n063:         address /*tokenIn*/,\n064:         address /*tokenOut*/\n065:     ) external pure returns (uint256) {\n066:         return (amt2Bridge * (1e4 - SG_FEE_BPS)) / 1e4;\n067:     }\n068: \n069:     function bridge(\n070:         uint256 amt2Bridge,\n071:         SwapInstructions memory postBridge,\n072:         uint256 dstChainId,\n073:         address target,\n074:         address paymentOperator,\n075:         bytes memory payload,\n076:         bytes calldata additionalArgs,\n077:         address payable refund\n078:     ) public payable onlyUtb returns (bytes memory bridgePayload) {\n079:         address bridgeToken = abi.decode(additionalArgs, (address));\n080: \n081:         bridgePayload = abi.encode(\n082:             postBridge,\n083:             target,\n084:             paymentOperator,\n085:             payload,\n086:             refund\n087:         );\n088:         IERC20(bridgeToken).transferFrom(msg.sender, address(this), amt2Bridge);\n089:         IERC20(bridgeToken).approve(address(router), amt2Bridge);\n090: \n091:         callBridge(\n092:             amt2Bridge,\n093:             dstChainId,\n094:             bridgePayload,\n095:             additionalArgs,\n096:             refund\n097:         );\n098:     }\n099: \n100:     function getValue(\n101:         bytes calldata additionalArgs,\n102:         uint256 amt2Bridge\n103:     ) private view returns (uint value) {\n104:         (address bridgeToken, LzBridgeData memory lzBridgeData) = abi.decode(\n105:             additionalArgs,\n106:             (address, LzBridgeData)\n107:         );\n108:         return\n109:             bridgeToken == stargateEth\n110:                 ? (lzBridgeData.fee + amt2Bridge)\n111:                 : lzBridgeData.fee;\n112:     }\n113: \n114:     function getLzTxObj(\n115:         bytes calldata additionalArgs\n116:     ) private pure returns (IStargateRouter.lzTxObj memory) {\n117:         (, , IStargateRouter.lzTxObj memory lzTxObj) = abi.decode(\n118:             additionalArgs,\n119:             (address, LzBridgeData, IStargateRouter.lzTxObj)\n120:         );\n121:         return lzTxObj;\n122:     }\n123: \n124:     function getDstChainId(\n125:         bytes calldata additionalArgs\n126:     ) private pure returns (uint16) {\n127:         (, LzBridgeData memory lzBridgeData, ) = abi.decode(\n128:             additionalArgs,\n129:             (address, LzBridgeData, IStargateRouter.lzTxObj)\n130:         );\n131:         return lzBridgeData._dstChainId;\n132:     }\n133: \n134:     function getSrcPoolId(\n135:         bytes calldata additionalArgs\n136:     ) private pure returns (uint120) {\n137:         (, LzBridgeData memory lzBridgeData, ) = abi.decode(\n138:             additionalArgs,\n139:             (address, LzBridgeData, IStargateRouter.lzTxObj)\n140:         );\n141:         return lzBridgeData._srcPoolId;\n142:     }\n143: \n144:     function getDstPoolId(\n145:         bytes calldata additionalArgs\n146:     ) private pure returns (uint120) {\n147:         (, LzBridgeData memory lzBridgeData, ) = abi.decode(\n148:             additionalArgs,\n149:             (address, LzBridgeData, IStargateRouter.lzTxObj)\n150:         );\n151:         return lzBridgeData._dstPoolId;\n152:     }\n153: \n154:     function getDestAdapter(uint chainId) private view returns (address dstAddr) {\n155:         dstAddr = destinationBridgeAdapter[chainId];\n156: \n157:         require(\n158:             dstAddr != address(0),\n159:             string.concat(\"dst chain address not set \")\n160:         );\n161:     }\n162: \n163:     function callBridge(\n164:         uint256 amt2Bridge,\n165:         uint256 dstChainId,\n166:         bytes memory bridgePayload,\n167:         bytes calldata additionalArgs,\n168:         address payable refund\n169:     ) private {\n170:         router.swap{value: msg.value}(\n171:             getDstChainId(additionalArgs), //lzBridgeData._dstChainId, // send to LayerZero chainId\n172:             getSrcPoolId(additionalArgs), //lzBridgeData._srcPoolId, // source pool id\n173:             getDstPoolId(additionalArgs), //lzBridgeData._dstPoolId, // dst pool id\n174:             refund, // refund adddress. extra gas (if any) is returned to this address\n175:             amt2Bridge, // quantity to swap\n176:             (amt2Bridge * (10000 - SG_FEE_BPS)) / 10000, // the min qty you would accept on the destination, fee is 6 bips\n177:             getLzTxObj(additionalArgs), // additional gasLimit increase, airdrop, at address\n178:             abi.encodePacked(getDestAdapter(dstChainId)),\n179:             bridgePayload // bytes param, if you wish to send additional payload you can abi.encode() them here\n180:         );\n181:     }\n182: \n183:     function sgReceive(\n184:         uint16, // _srcChainid\n185:         bytes memory, // _srcAddress\n186:         uint256, // _nonce\n187:         address, // _token\n188:         uint256, // amountLD\n189:         bytes memory payload\n190:     ) external override onlyExecutor {\n191:         (\n192:             SwapInstructions memory postBridge,\n193:             address target,\n194:             address paymentOperator,\n195:             bytes memory utbPayload,\n196:             address payable refund\n197:         ) = abi.decode(\n198:                 payload,\n199:                 (SwapInstructions, address, address, bytes, address)\n200:             );\n201: \n202:         SwapParams memory swapParams = abi.decode(\n203:             postBridge.swapPayload,\n204:             (SwapParams)\n205:         );\n206: \n207:         IERC20(swapParams.tokenIn).approve(utb, swapParams.amountIn);\n208: \n209:         IUTB(utb).receiveFromBridge(\n210:             postBridge,\n211:             target,\n212:             paymentOperator,\n213:             utbPayload,\n214:             refund\n215:         );\n216:     }\n217: \n218:     receive() external payable {}\n219: \n220:     fallback() external payable {}\n221: }\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L17-L221"
          ]
        }
      ]
    },
    {
      "severity": "Gas",
      "title": "Avoid transferring amounts of zero in order to save gas",
      "description": "Skipping the external call when nothing will be transferred, will save at least **100 gas**",
      "gasSavings": 0,
      "category": null,
      "instances": [
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentBridgeExecutor.sol\n\n44:         weth.transfer(from, remainingAfterCall);\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentBridgeExecutor.sol#L44-L44"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentBridgeExecutor.sol\n\n75:         weth.transferFrom(msg.sender, address(this), amount);\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentBridgeExecutor.sol#L75-L75"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n288:         dcntEth.transferFrom(msg.sender, address(this), amount);\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L288-L288"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n297:         dcntEth.transferFrom(msg.sender, address(this), amount);\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L297-L297"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n298:         weth.transfer(msg.sender, amount);\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L298-L298"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n325:         weth.transferFrom(msg.sender, address(this), amount);\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L325-L325"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n334:         weth.transfer(msg.sender, amount);\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L334-L334"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/UTB.sol\n\n83:             IERC20(swapParams.tokenIn).transferFrom(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTB.sol#L83-L83"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/UTBExecutor.sol\n\n61:         IERC20(token).transferFrom(msg.sender, address(this), amount);\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTBExecutor.sol#L61-L61"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/DecentBridgeAdapter.sol\n\n109:             IERC20(bridgeToken).transferFrom(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/DecentBridgeAdapter.sol#L109-L109"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/DecentBridgeAdapter.sol\n\n139:         IERC20(swapParams.tokenIn).transferFrom(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/DecentBridgeAdapter.sol#L139-L139"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n88:         IERC20(bridgeToken).transferFrom(msg.sender, address(this), amt2Bridge);\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L88-L88"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/UniSwapper.sol\n\n44:         IERC20(token).transfer(user, amount);\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/UniSwapper.sol#L44-L44"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/UniSwapper.sol\n\n55:         IERC20(token).transfer(recipient, amount);\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/UniSwapper.sol#L55-L55"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/UniSwapper.sol\n\n83:             IERC20(swapParams.tokenIn).transferFrom(\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/UniSwapper.sol#L83-L83"
          ]
        }
      ]
    },
    {
      "severity": "Gas",
      "title": "When no `addresses` are used `abi.encodepacked()` Outperforms `abi.encode()` in Efficiency",
      "description": "when dealing with non address type parameters `encodepacked()` function less gas than `encode()`. For more details check the following [comparison](https://github.com/ConnorBlockchain/Solidity-Encode-Gas-Comparison)",
      "gasSavings": 122,
      "category": null,
      "instances": [
        {
          "content": "\n\n```solidity\n\nFile: src/UTB.sol\n\n115:         retrieveAndCollectFees(fees, abi.encode(instructions, fees), signature)\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTB.sol#L115-L115"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/UTB.sol\n\n266:         retrieveAndCollectFees(fees, abi.encode(instructions, fees), signature)\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTB.sol#L266-L266"
          ]
        }
      ]
    },
    {
      "severity": "Gas",
      "title": "A `modifier` used only once and not being inherited should be inlined to save gas",
      "description": " ",
      "gasSavings": 0,
      "category": null,
      "instances": [
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n42:     modifier onlyLzApp() {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L42-L42"
          ]
        }
      ]
    },
    {
      "severity": "Gas",
      "title": "Simple checks for zero `uint` can be done using assembly to save gas",
      "description": " ",
      "gasSavings": 12,
      "category": null,
      "instances": [
        {
          "content": "\n\n```solidity\n\nFile: src/UTBExecutor.sol\n\n76:         if (remainingBalance == 0) {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/UTBExecutor.sol#L76-L76"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/UniSwapper.sol\n\n68:         if (swapParams.path.length == 0) {\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/UniSwapper.sol#L68-L68"
          ]
        }
      ]
    },
    {
      "severity": "Gas",
      "title": "Using `private` for constants saves gas",
      "description": "If needed, the values can be read from the verified contract source code, or if there are multiple values there can be a single getter function that [returns a tuple](https://github.com/code-423n4/2022-08-frax/blob/90f55a9ce4e25bceed3a74290b854341d8de6afa/src/contracts/FraxlendPair.sol#L156-L178) of the values of all currently-public constants. Saves **3406-3606 gas** in deployment gas due to the compiler not having to create non-payable getter functions for deployment calldata, not having to store the bytes of the value outside of where it's used, and not adding another entry to the method ID table",
      "gasSavings": 0,
      "category": null,
      "instances": [
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n17:     uint8 public constant MT_ETH_TRANSFER = 0;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L17-L17"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n18:     uint8 public constant MT_ETH_TRANSFER_WITH_PAYLOAD = 1;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L18-L18"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n20:     uint16 public constant PT_SEND_AND_CALL = 1;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L20-L20"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/DecentBridgeAdapter.sol\n\n13:     uint8 public constant BRIDGE_ID = 0;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/DecentBridgeAdapter.sol#L13-L13"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n22:     uint8 public constant BRIDGE_ID = 1;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L22-L22"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n23:     uint8 public constant SG_FEE_BPS = 6;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L23-L23"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/UniSwapper.sol\n\n16:     uint8 public constant SWAPPER_ID = 0;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/UniSwapper.sol#L16-L16"
          ]
        }
      ]
    },
    {
      "severity": "Gas",
      "title": "Redundant state variable getters",
      "description": "Getters for public state variables are automatically generated so there is no need to code them manually and waste gas.",
      "gasSavings": 0,
      "category": null,
      "instances": [
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/DecentBridgeAdapter.sol\n\n30:     function getId() public pure returns (uint8) {\n31:         return BRIDGE_ID;\n32:     }\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/DecentBridgeAdapter.sol#L30-L32"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n41:     function getId() public pure returns (uint8) {\n42:         return BRIDGE_ID;\n43:     }\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L41-L43"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/UniSwapper.sol\n\n28:     function getId() public pure returns (uint8) {\n29:         return SWAPPER_ID;\n30:     }\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/UniSwapper.sol#L28-L30"
          ]
        }
      ]
    },
    {
      "severity": "Gas",
      "title": "Gas savings can be achieved by changing the model for assigning value to the structure ***123 gas***",
      "description": "Change this `structName a = structName({item1: val1,item2: val2}); ==> structName a; a.item1 = val1; a.item2 = val2;`",
      "gasSavings": 369,
      "category": null,
      "instances": [
        {
          "content": "\n\n```solidity\n\nFile: lib/decent-bridge/src/DecentEthRouter.sol\n\n170:         ICommonOFT.LzCallParams memory callParams = ICommonOFT.LzCallParams({\n171:             refundAddress: payable(msg.sender),\n172:             zroPaymentAddress: address(0x0),\n173:             adapterParams: adapterParams\n174:         });\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//lib/decent-bridge/src/DecentEthRouter.sol#L170-L174"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/UniSwapper.sol\n\n129:         IV3SwapRouter.ExactInputParams memory params = IV3SwapRouter\n130:             .ExactInputParams({\n131:                 path: swapParams.path,\n132:                 recipient: address(this),\n133:                 amountIn: swapParams.amountIn,\n134:                 amountOutMinimum: swapParams.amountOut\n135:             });\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/UniSwapper.sol#L129-L135"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/swappers/UniSwapper.sol\n\n149:         IV3SwapRouter.ExactOutputParams memory params = IV3SwapRouter\n150:             .ExactOutputParams({\n151:                 path: swapParams.path,\n152:                 recipient: address(this),\n153:                 //deadline: block.timestamp,\n154:                 amountOut: swapParams.amountOut,\n155:                 amountInMaximum: swapParams.amountIn\n156:             });\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/swappers/UniSwapper.sol#L149-L156"
          ]
        }
      ]
    },
    {
      "severity": "Gas",
      "title": "Refactor modifiers to call a local function",
      "description": "Modifiers code is copied in all instances where it's used, increasing bytecode size. By doing a refractor to the internal function, one can reduce bytecode size significantly at the cost of one JUMP.",
      "gasSavings": 1000,
      "category": null,
      "instances": [
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/BaseAdapter.sol\n\n11:     modifier onlyExecutor() {\n12:         require(\n13:             msg.sender == address(bridgeExecutor),\n14:             \"Only bridge executor can call this\"\n15:         );\n16:         _;\n17:     }\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/BaseAdapter.sol#L11-L17"
          ]
        }
      ]
    },
    {
      "severity": "Gas",
      "title": "Consider using solady's 'FixedPointMathLib'",
      "description": "Using Solady's 'FixedPointMathLib' for multiplication or division operations in Solidity can lead to significant gas savings. This library is designed to optimize fixed-point arithmetic operations, which are common in financial calculations involving tokens or currencies. By implementing more efficient algorithms and assembly optimizations, 'FixedPointMathLib' minimizes the computational resources required for these operations. For contracts that frequently perform such calculations, integrating this library can reduce transaction costs, thereby enhancing overall performance and cost-effectiveness. However, developers must ensure compatibility with their existing codebase and thoroughly test for accuracy and expected behavior to avoid any unintended consequences.",
      "gasSavings": 0,
      "category": null,
      "instances": [
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n//@audit for: `/`\n66:         return (amt2Bridge * (1e4 - SG_FEE_BPS)) / 1e4;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L66-L66"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n//@audit for: `*`\n66:         return (amt2Bridge * (1e4 - SG_FEE_BPS)) / 1e4;\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L66-L66"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n//@audit for: `/`\n176:             (amt2Bridge * (10000 - SG_FEE_BPS)) / 10000, // the min qty you would accept on the destination, fee is 6 bips\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L176-L176"
          ]
        },
        {
          "content": "\n\n```solidity\n\nFile: src/bridge_adapters/StargateBridgeAdapter.sol\n\n//@audit for: `*`\n176:             (amt2Bridge * (10000 - SG_FEE_BPS)) / 10000, // the min qty you would accept on the destination, fee is 6 bips\n\n\n```\n",
          "loc": [
            "https://github.com/code-423n4/2024-01-decent/blob/main//src/bridge_adapters/StargateBridgeAdapter.sol#L176-L176"
          ]
        }
      ]
    }
  ],
  "createdAt": "2024-01-19T20:50:49.998Z",
  "updatedAt": "2024-01-19T20:50:50.893Z"
}